{
  "stats": {
    "suites": 542,
    "tests": 520,
    "passes": 520,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-08T16:13:36.771Z",
    "end": "2022-06-08T16:13:39.686Z",
    "duration": 2915,
    "testsRegistered": 520,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "16409eb9-9fd2-4d97-b2ac-6abe291e6724",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "da0020cd-ec41-4907-8d01-1269921bcf5a",
          "title": "Test sku CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "614bc3e3-0c81-4e8f-8cce-c4652b59c3d8",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test sku CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 917,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "d8922168-1008-41e8-879f-a4b6d87f7920",
                  "parentUUID": "614bc3e3-0c81-4e8f-8cce-c4652b59c3d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d8922168-1008-41e8-879f-a4b6d87f7920"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 917,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "514a4f43-0bb2-422e-a878-4c646ab55898",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b3715edc-b870-4a45-ad39-c3970b843bf8",
                  "parentUUID": "514a4f43-0bb2-422e-a878-4c646ab55898",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b3715edc-b870-4a45-ad39-c3970b843bf8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "22391850-73a2-45f5-9963-3e349e288d35",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "dd6a9c30-889c-4aef-bd7a-673e49d99e37",
                  "parentUUID": "22391850-73a2-45f5-9963-3e349e288d35",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dd6a9c30-889c-4aef-bd7a-673e49d99e37"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "082c515c-dc67-4d31-810b-0f8d845159b8",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0febcdea-f8d4-449a-ab0c-0e7992607547",
                  "parentUUID": "082c515c-dc67-4d31-810b-0f8d845159b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0febcdea-f8d4-449a-ab0c-0e7992607547"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9c1406c8-eb03-44ea-af19-7e206da0b607",
              "title": "put /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 b -> Modify an existing SKU",
                  "fullTitle": "Test sku CRUD features put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ea208fd8-e8f6-4b8e-8cb4-18ef822c6dfc",
                  "parentUUID": "9c1406c8-eb03-44ea-af19-7e206da0b607",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ea208fd8-e8f6-4b8e-8cb4-18ef822c6dfc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0b9e7bb0-8a7a-4998-a908-742d4dab8dd0",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4d1fb014-c168-43b5-8eaf-8dca1ddb6a7f",
                  "parentUUID": "0b9e7bb0-8a7a-4998-a908-742d4dab8dd0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4d1fb014-c168-43b5-8eaf-8dca1ddb6a7f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5480c0ec-760d-481f-89aa-0c3c573b38e7",
              "title": "put /api/sku/:id/position",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Changing SKU position passing its id",
                  "fullTitle": "Test sku CRUD features put /api/sku/:id/position Changing SKU position passing its id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID+'/position')\n.send(pos)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f8282860-5cc1-4477-92fc-58c90a3bc043",
                  "parentUUID": "5480c0ec-760d-481f-89aa-0c3c573b38e7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8282860-5cc1-4477-92fc-58c90a3bc043"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "37a96b57-5d42-4cf9-8052-23bc0e4d31cb",
              "title": "delete /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.2 -> Delete a SKU",
                  "fullTitle": "Test sku CRUD features delete /api/sku/:id FR 2.2 -> Delete a SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "050895f4-3e1e-43b1-ae2f-db1bd7aa10da",
                  "parentUUID": "37a96b57-5d42-4cf9-8052-23bc0e4d31cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "050895f4-3e1e-43b1-ae2f-db1bd7aa10da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "30472118-50f6-4b8f-93b3-313391a5452d",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0420d85a-ca5d-4632-ac89-af395493484c",
                  "parentUUID": "30472118-50f6-4b8f-93b3-313391a5452d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0420d85a-ca5d-4632-ac89-af395493484c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "16f8bb9a-cc51-4879-9370-5c2790631ae1",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "46784bdc-88f9-4462-9156-13c811f803ed",
                  "parentUUID": "16f8bb9a-cc51-4879-9370-5c2790631ae1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46784bdc-88f9-4462-9156-13c811f803ed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "340827ad-0084-4598-9000-cfaedb3d87f8",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cc0f6aa8-cf50-411d-bf79-dcbe66297467",
                  "parentUUID": "340827ad-0084-4598-9000-cfaedb3d87f8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc0f6aa8-cf50-411d-bf79-dcbe66297467"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f7e0ed89-3e75-46a4-962b-b84c2b83d4a4",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e96c14fc-9acc-4021-afa6-fd74fadb7842",
                  "parentUUID": "f7e0ed89-3e75-46a4-962b-b84c2b83d4a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e96c14fc-9acc-4021-afa6-fd74fadb7842"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a4278114-26d4-4044-88a9-870a03d36b0b",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fe8b3cde-92c0-49f5-9073-0d5233f0cf08",
                  "parentUUID": "a4278114-26d4-4044-88a9-870a03d36b0b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fe8b3cde-92c0-49f5-9073-0d5233f0cf08"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9b0babc9-fd58-466e-98a2-cc815019c731",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "64ec2679-225d-4885-982d-94188dedee31",
                  "parentUUID": "9b0babc9-fd58-466e-98a2-cc815019c731",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "64ec2679-225d-4885-982d-94188dedee31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "17f188d7-b9bc-4d07-9e9b-0d41c576eda7",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3bcc5172-c1a0-4e43-b1f8-ce157c4d3198",
                  "parentUUID": "17f188d7-b9bc-4d07-9e9b-0d41c576eda7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3bcc5172-c1a0-4e43-b1f8-ce157c4d3198"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b66c76ab-10cb-4cc5-b759-2587763de121",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8c9da62a-9c82-4851-b0b5-e908637e4a75",
                  "parentUUID": "b66c76ab-10cb-4cc5-b759-2587763de121",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8c9da62a-9c82-4851-b0b5-e908637e4a75"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ba3c3896-26b1-4ce5-8a9d-c2d3de7e3394",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "50dbb674-321b-4921-a6c5-0d75e7af3f6f",
                  "parentUUID": "ba3c3896-26b1-4ce5-8a9d-c2d3de7e3394",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50dbb674-321b-4921-a6c5-0d75e7af3f6f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7650ac12-7b3a-4b40-898e-6f6a67a288e8",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3451234c-48dc-47c0-88b6-0cc6baae0946",
                  "parentUUID": "7650ac12-7b3a-4b40-898e-6f6a67a288e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3451234c-48dc-47c0-88b6-0cc6baae0946"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c4013bbf-83ba-428b-ba55-b418ddf0b386",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e9fce6e6-6ceb-4cd8-881c-3c4d6a5ca469",
                  "parentUUID": "c4013bbf-83ba-428b-ba55-b418ddf0b386",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9fce6e6-6ceb-4cd8-881c-3c4d6a5ca469"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f94be5f8-e771-483c-9fbb-97dc7b3e8f3d",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "237c65f2-66fb-4032-ab7d-344d950250a7",
                  "parentUUID": "f94be5f8-e771-483c-9fbb-97dc7b3e8f3d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "237c65f2-66fb-4032-ab7d-344d950250a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9d4b192d-7ca0-4c68-a5e9-2d5ae51a1bff",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a266ea0e-4b35-45d9-88c9-e10b4ee73244",
                  "parentUUID": "9d4b192d-7ca0-4c68-a5e9-2d5ae51a1bff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a266ea0e-4b35-45d9-88c9-e10b4ee73244"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2e80cd8f-5510-436c-94a7-e4aa966db3d0",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "29a29a50-12b5-4993-a555-6c5c5e07bb2b",
                  "parentUUID": "2e80cd8f-5510-436c-94a7-e4aa966db3d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "29a29a50-12b5-4993-a555-6c5c5e07bb2b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "96e40d7d-d55c-41c1-956f-2fb9308c5282",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "94b6ed11-1e90-4d7a-949d-cfb624e704c7",
                  "parentUUID": "96e40d7d-d55c-41c1-956f-2fb9308c5282",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "94b6ed11-1e90-4d7a-949d-cfb624e704c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6fb78ece-53e3-475b-a58e-f56efc61eb13",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "66d86b2a-eea6-4c25-8717-18f448a9637f",
                  "parentUUID": "6fb78ece-53e3-475b-a58e-f56efc61eb13",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "66d86b2a-eea6-4c25-8717-18f448a9637f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3c67c695-b272-4a4b-8849-43ad33f895f2",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b3c143ba-08b9-4f58-9fbd-e03b5373511b",
                  "parentUUID": "3c67c695-b272-4a4b-8849-43ad33f895f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b3c143ba-08b9-4f58-9fbd-e03b5373511b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "afd59a50-c18f-43d8-8143-7152cf92fef6",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "66cf00e2-dcac-4f4b-a274-a21b8fea08b9",
                  "parentUUID": "afd59a50-c18f-43d8-8143-7152cf92fef6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "66cf00e2-dcac-4f4b-a274-a21b8fea08b9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6c1d0496-0df4-4373-a36a-c91284463ce5",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "eaca519f-c187-4764-a547-9b83a43c8f10",
                  "parentUUID": "6c1d0496-0df4-4373-a36a-c91284463ce5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eaca519f-c187-4764-a547-9b83a43c8f10"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f58413cf-0f76-47b0-baea-4bbefffe2bab",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test sku CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "fab9741e-5a39-4680-a22f-977b555735e4",
                  "parentUUID": "f58413cf-0f76-47b0-baea-4bbefffe2bab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fab9741e-5a39-4680-a22f-977b555735e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f6a8688a-a639-4bf4-a570-96552625a70d",
          "title": "Test skuitem CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "52060829-69b5-4072-8a73-eada5d1b8abd",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "bee318a6-075f-4e59-84c6-975069a21e1b",
                  "parentUUID": "52060829-69b5-4072-8a73-eada5d1b8abd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bee318a6-075f-4e59-84c6-975069a21e1b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ed71000b-95e4-497a-a416-cf5de837755f",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test skuitem CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "afa4eb60-91e9-4007-ac97-bd4be650acff",
                  "parentUUID": "ed71000b-95e4-497a-a416-cf5de837755f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "afa4eb60-91e9-4007-ac97-bd4be650acff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1393506c-8c7b-48eb-ab20-6fada59859b8",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d028921c-9c68-44a0-9eb7-7cde72d28b7b",
                  "parentUUID": "1393506c-8c7b-48eb-ab20-6fada59859b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d028921c-9c68-44a0-9eb7-7cde72d28b7b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8d98023b-82d3-43b6-bdd2-2ab8774e389e",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0cf6bae0-2f91-4bbf-838a-cadea5408bc0",
                  "parentUUID": "8d98023b-82d3-43b6-bdd2-2ab8774e389e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0cf6bae0-2f91-4bbf-838a-cadea5408bc0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "016d10bf-470e-41ef-8e81-81a6fe990112",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test skuitem CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b9c32942-ff8a-4475-b8f9-0f2e4717141c",
                  "parentUUID": "016d10bf-470e-41ef-8e81-81a6fe990112",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9c32942-ff8a-4475-b8f9-0f2e4717141c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "57701827-4fb2-41ee-8ec3-eb5d37299ca5",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9ace7063-2d50-4e0b-ba25-795d06c80a14",
                  "parentUUID": "57701827-4fb2-41ee-8ec3-eb5d37299ca5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9ace7063-2d50-4e0b-ba25-795d06c80a14"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ac0d36c4-c0a3-4271-b8c3-bcf85e7ae6e6",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c975dea1-ae1b-4662-890b-c62af4f09e05",
                  "parentUUID": "ac0d36c4-c0a3-4271-b8c3-bcf85e7ae6e6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c975dea1-ae1b-4662-890b-c62af4f09e05"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1e39044c-b9ed-47c9-80ec-ab843fa37ea6",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "38454682-df5d-44ba-b8bf-734cd86c0691",
                  "parentUUID": "1e39044c-b9ed-47c9-80ec-ab843fa37ea6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "38454682-df5d-44ba-b8bf-734cd86c0691"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5474a536-0541-4b3e-be35-4191c189209e",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "75aab369-5626-437a-85fb-32d2f7fd88c4",
                  "parentUUID": "5474a536-0541-4b3e-be35-4191c189209e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75aab369-5626-437a-85fb-32d2f7fd88c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d8052f01-5bf2-4dd0-b70d-e475a9f0c5ab",
              "title": "get /api/skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a51ae65d-a0f3-4b96-97fe-479fcbdda687",
                  "parentUUID": "d8052f01-5bf2-4dd0-b70d-e475a9f0c5ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a51ae65d-a0f3-4b96-97fe-479fcbdda687"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "62381c89-882e-4da7-86c6-5a39b4983ed6",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f61a6d40-4f72-4f34-a853-2a548024a48b",
                  "parentUUID": "62381c89-882e-4da7-86c6-5a39b4983ed6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f61a6d40-4f72-4f34-a853-2a548024a48b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cba8e842-1dd3-4871-9775-ee81f6580429",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "adac7030-6f74-4486-9545-2f058277b0ef",
                  "parentUUID": "cba8e842-1dd3-4871-9775-ee81f6580429",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "adac7030-6f74-4486-9545-2f058277b0ef"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3f24bd55-a1b2-4dc0-8d01-337a53e788f5",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6ac41b85-4a39-40d3-b039-e12145c22ed2",
                  "parentUUID": "3f24bd55-a1b2-4dc0-8d01-337a53e788f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6ac41b85-4a39-40d3-b039-e12145c22ed2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e3d13343-ed97-4366-ade9-70369322d122",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "63baad37-4957-4890-9624-2f130d7482d7",
                  "parentUUID": "e3d13343-ed97-4366-ade9-70369322d122",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "63baad37-4957-4890-9624-2f130d7482d7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0d10ef83-5006-453e-99e7-8bcf38096a8f",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "e831a913-9c80-4ab5-b6c1-4941a594db26",
                  "parentUUID": "0d10ef83-5006-453e-99e7-8bcf38096a8f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e831a913-9c80-4ab5-b6c1-4941a594db26"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "97d994db-6022-469e-b74c-ca25286ff087",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "a85dd211-6000-4e72-bc1e-27d0ec2ddba3",
                  "parentUUID": "97d994db-6022-469e-b74c-ca25286ff087",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a85dd211-6000-4e72-bc1e-27d0ec2ddba3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "13572d6c-2ce0-47ba-b238-506814d85c12",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "c74e60c9-52df-4a43-a07b-c4813c3e8014",
                  "parentUUID": "13572d6c-2ce0-47ba-b238-506814d85c12",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c74e60c9-52df-4a43-a07b-c4813c3e8014"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f256e732-a618-4145-ad11-6c9d868ffde4",
              "title": "get /api/skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f8c3308c-a6d9-4fab-ba2b-3daf8873b96d",
                  "parentUUID": "f256e732-a618-4145-ad11-6c9d868ffde4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8c3308c-a6d9-4fab-ba2b-3daf8873b96d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "37e0a270-639c-4b54-acb9-329f1e8341f7",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "db6ab193-cd3a-40f3-8053-10d70ab33751",
                  "parentUUID": "37e0a270-639c-4b54-acb9-329f1e8341f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db6ab193-cd3a-40f3-8053-10d70ab33751"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fde998ea-1976-460e-bf5f-779836f9c3e2",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9213e520-5ba4-49f6-9158-eb6470917647",
                  "parentUUID": "fde998ea-1976-460e-bf5f-779836f9c3e2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9213e520-5ba4-49f6-9158-eb6470917647"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cdf9f6c6-6ead-4dda-a46e-0f5a37243ab9",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b6de5834-5553-4e5d-b80b-3495a73c3f42",
                  "parentUUID": "cdf9f6c6-6ead-4dda-a46e-0f5a37243ab9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b6de5834-5553-4e5d-b80b-3495a73c3f42"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "eb1be794-cb82-498d-8d45-81fe601eb57d",
          "title": "test positions CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c58f882b-40dc-4cda-8c1d-6fad89f3f1f8",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "test positions CRUD features Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "10467aa7-7642-43fc-83d4-420cacd998c2",
                  "parentUUID": "c58f882b-40dc-4cda-8c1d-6fad89f3f1f8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "10467aa7-7642-43fc-83d4-420cacd998c2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "54079758-88fd-4369-9c8f-a66627c8ae8c",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4fdef6c8-2291-4483-aa13-094113a41187",
                  "parentUUID": "54079758-88fd-4369-9c8f-a66627c8ae8c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4fdef6c8-2291-4483-aa13-094113a41187"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e5b5a321-f85f-48b3-9e15-a842e2179074",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b1031345-b4bc-4279-9aff-e06465a6f0e7",
                  "parentUUID": "e5b5a321-f85f-48b3-9e15-a842e2179074",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b1031345-b4bc-4279-9aff-e06465a6f0e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "907c4af7-70aa-4a14-82dd-ac6856347dbc",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1aef8974-daa8-45fb-a9bb-6957f1df1259",
                  "parentUUID": "907c4af7-70aa-4a14-82dd-ac6856347dbc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1aef8974-daa8-45fb-a9bb-6957f1df1259"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "770f957c-cd5c-4552-97cc-bed681ef0d84",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f13f4d29-5dbc-423b-a4f0-5bdf124864e8",
                  "parentUUID": "770f957c-cd5c-4552-97cc-bed681ef0d84",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f13f4d29-5dbc-423b-a4f0-5bdf124864e8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b72c6b5d-94d8-4d58-ad0b-f3ce44873c4e",
              "title": " get /api/positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.3 -> List all positions",
                  "fullTitle": "test positions CRUD features  get /api/positions FR 3.1.3 -> List all positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "97fe1fda-e561-40ff-acf7-e07353c2604d",
                  "parentUUID": "b72c6b5d-94d8-4d58-ad0b-f3ce44873c4e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97fe1fda-e561-40ff-acf7-e07353c2604d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "aae2c29b-46cb-4490-91ec-24e340ad828c",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "76a6524b-f6ea-473f-8852-1e05356052bb",
                  "parentUUID": "aae2c29b-46cb-4490-91ec-24e340ad828c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "76a6524b-f6ea-473f-8852-1e05356052bb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "517421ff-40fc-4184-bd10-af7986315356",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0c9ac7f6-768f-400a-be0a-5c3a1f570b8f",
                  "parentUUID": "517421ff-40fc-4184-bd10-af7986315356",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0c9ac7f6-768f-400a-be0a-5c3a1f570b8f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "95a3c2cc-ac6d-4064-9467-7eca7f7db502",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2b842cb2-5641-478e-8ed0-ba007685ffe7",
                  "parentUUID": "95a3c2cc-ac6d-4064-9467-7eca7f7db502",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b842cb2-5641-478e-8ed0-ba007685ffe7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "887e9fbf-e826-4a1f-82be-0e701ee88ef8",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d3d3c8d7-bb5c-4d34-9078-dd5933ec6cbd",
                  "parentUUID": "887e9fbf-e826-4a1f-82be-0e701ee88ef8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d3d3c8d7-bb5c-4d34-9078-dd5933ec6cbd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1e226eab-0af8-435b-b131-24a3c45a98da",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a0fbf56d-ca33-497c-8172-18e205e3362b",
                  "parentUUID": "1e226eab-0af8-435b-b131-24a3c45a98da",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a0fbf56d-ca33-497c-8172-18e205e3362b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9f43c91c-ac38-4acb-b26d-b9beb7bfb33c",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3dad44a3-7364-4b1e-b65c-f84365da5311",
                  "parentUUID": "9f43c91c-ac38-4acb-b26d-b9beb7bfb33c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3dad44a3-7364-4b1e-b65c-f84365da5311"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dafe022b-9d07-48b0-ae80-8bd53a58a55c",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "51b1f648-c141-42ef-8aa5-15c88cfd46d2",
                  "parentUUID": "dafe022b-9d07-48b0-ae80-8bd53a58a55c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "51b1f648-c141-42ef-8aa5-15c88cfd46d2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5c34a844-903f-4087-9826-64a2442dbcb3",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d0cc6669-c6bd-4233-aed2-b5dd5a0e7da8",
                  "parentUUID": "5c34a844-903f-4087-9826-64a2442dbcb3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d0cc6669-c6bd-4233-aed2-b5dd5a0e7da8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2d928d07-c65e-4c9b-b4b6-33d2800d9094",
          "title": "Test TestDescriptor CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ae8f84da-bb83-4869-b8cd-af746de81285",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestDescriptor CRUD features removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "51aa6585-137a-4bc3-98d6-6a70c7c67edf",
                  "parentUUID": "ae8f84da-bb83-4869-b8cd-af746de81285",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "51aa6585-137a-4bc3-98d6-6a70c7c67edf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e68f0ef3-f7ed-478f-be6e-c06e344d95d4",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestDescriptor CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "4b6cb946-c6d5-4232-b559-6b2ce0808234",
                  "parentUUID": "e68f0ef3-f7ed-478f-be6e-c06e344d95d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b6cb946-c6d5-4232-b559-6b2ce0808234"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6a1d5b76-81db-42cc-9d23-80b1e9ac5f3c",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestDescriptor CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "105368d5-5c1b-4c72-a2e4-6a2c4eeeb2ec",
                  "parentUUID": "6a1d5b76-81db-42cc-9d23-80b1e9ac5f3c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "105368d5-5c1b-4c72-a2e4-6a2c4eeeb2ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6786b08d-8c7e-48ef-a2ea-918c610515db",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3799efb3-0206-449a-ad1c-e6f3841b356b",
                  "parentUUID": "6786b08d-8c7e-48ef-a2ea-918c610515db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3799efb3-0206-449a-ad1c-e6f3841b356b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bd448fbf-b63e-4375-907e-761d051f4de3",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d280872d-6859-430c-8c4b-411a26a031cf",
                  "parentUUID": "bd448fbf-b63e-4375-907e-761d051f4de3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d280872d-6859-430c-8c4b-411a26a031cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "049c4f25-1478-4037-9b64-443334b36818",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2fa9ad64-caca-4e23-9b76-7289b7436dea",
                  "parentUUID": "049c4f25-1478-4037-9b64-443334b36818",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2fa9ad64-caca-4e23-9b76-7289b7436dea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ec8bfc5b-1216-4659-a93e-699d4088b859",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a7aa5b42-33e0-4494-99d2-613225d28bc8",
                  "parentUUID": "ec8bfc5b-1216-4659-a93e-699d4088b859",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7aa5b42-33e0-4494-99d2-613225d28bc8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d9ec97ce-2bc5-4e48-a67d-14a500b1b62e",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c698011b-9fe2-4a01-a40f-fee402b9ac63",
                  "parentUUID": "d9ec97ce-2bc5-4e48-a67d-14a500b1b62e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c698011b-9fe2-4a01-a40f-fee402b9ac63"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ace1058e-484c-4df2-99c2-f766e325086e",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4a28cd8e-130b-4643-bcd5-e310fdd6824a",
                  "parentUUID": "ace1058e-484c-4df2-99c2-f766e325086e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4a28cd8e-130b-4643-bcd5-e310fdd6824a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e18d77f6-f02d-45ed-bc0d-10833329151a",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "da4ddf86-6a3c-41eb-9e99-05daadf05f17",
                  "parentUUID": "e18d77f6-f02d-45ed-bc0d-10833329151a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "da4ddf86-6a3c-41eb-9e99-05daadf05f17"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "48f73a19-46a5-4f8b-9b43-021803618e77",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "85a76c52-e0c8-4aae-aa27-bd62a2292618",
                  "parentUUID": "48f73a19-46a5-4f8b-9b43-021803618e77",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "85a76c52-e0c8-4aae-aa27-bd62a2292618"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4e332bd7-a6ee-4aa4-a3ca-bae586a698ea",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e1d429e3-55d0-4c84-b80f-322eb063f514",
                  "parentUUID": "4e332bd7-a6ee-4aa4-a3ca-bae586a698ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1d429e3-55d0-4c84-b80f-322eb063f514"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c6d98c15-a622-427a-b2aa-12584d70684b",
              "title": "test post test descriptor with not exixsting idsku",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a bad test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test post test descriptor with not exixsting idsku Creating a bad test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/testDescriptor')\n.send()\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8247ee70-e9e2-4b94-a7f7-688d491bdc6d",
                  "parentUUID": "c6d98c15-a622-427a-b2aa-12584d70684b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8247ee70-e9e2-4b94-a7f7-688d491bdc6d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "da3f8f13-da3b-481e-b1bb-1313172a48da",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "26b18e8e-3c90-466a-8972-c53f62626855",
                  "parentUUID": "da3f8f13-da3b-481e-b1bb-1313172a48da",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26b18e8e-3c90-466a-8972-c53f62626855"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9de01b9d-a876-4da0-b9e4-68dbe8ee2d6d",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "739d8e0e-3bef-4b35-91f5-ebc4e1e5a3e2",
                  "parentUUID": "9de01b9d-a876-4da0-b9e4-68dbe8ee2d6d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "739d8e0e-3bef-4b35-91f5-ebc4e1e5a3e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8d95bd61-23fe-4623-8d65-61b98855311b",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "687cf491-0b77-41e8-80ba-80ecfaa04fb8",
                  "parentUUID": "8d95bd61-23fe-4623-8d65-61b98855311b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "687cf491-0b77-41e8-80ba-80ecfaa04fb8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "66f6287f-252a-477c-be86-4dd7bac0fafa",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "e1a8add2-3f14-4a9b-b123-f4ce7b038600",
                  "parentUUID": "66f6287f-252a-477c-be86-4dd7bac0fafa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1a8add2-3f14-4a9b-b123-f4ce7b038600"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f6a0fb47-f40a-4ada-8396-81e2952747c6",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "c776ad6c-4d42-40e6-80a4-3a177ea0ce49",
                  "parentUUID": "f6a0fb47-f40a-4ada-8396-81e2952747c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c776ad6c-4d42-40e6-80a4-3a177ea0ce49"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "07c7e8f1-4594-4ff8-aee4-e37017fcefde",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ceae67f1-05b8-42d0-81b1-faf921231a41",
                  "parentUUID": "07c7e8f1-4594-4ff8-aee4-e37017fcefde",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ceae67f1-05b8-42d0-81b1-faf921231a41"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "74e740ee-2105-48cf-9c7a-dcdcb93ee657",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "7f6e740f-f5be-4642-b88a-54a478e4d42e",
                  "parentUUID": "74e740ee-2105-48cf-9c7a-dcdcb93ee657",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7f6e740f-f5be-4642-b88a-54a478e4d42e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "095cfad7-fe65-4cfb-9920-e5f5ff95f9c9",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1c4dd460-703e-4e4a-a524-02f1dd2b8b94",
                  "parentUUID": "095cfad7-fe65-4cfb-9920-e5f5ff95f9c9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c4dd460-703e-4e4a-a524-02f1dd2b8b94"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d42878b6-672c-4e68-bef0-282d059d2451",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f4f27cb3-1dea-4c28-9cfd-1afd6fa34c22",
                  "parentUUID": "d42878b6-672c-4e68-bef0-282d059d2451",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f4f27cb3-1dea-4c28-9cfd-1afd6fa34c22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6c94d53e-b450-4376-b4af-7069f3043c41",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    res.body.should.be.a('array');\n    agent.put('/api/testDescriptor/'+10000)\n    .send()\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));               \n});",
                  "err": {},
                  "uuid": "885a2283-00f2-4c5f-878c-88e2407f1029",
                  "parentUUID": "6c94d53e-b450-4376-b4af-7069f3043c41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "885a2283-00f2-4c5f-878c-88e2407f1029"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "111d6164-7b15-49fd-b48d-4eee516edae5",
              "title": "delete /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ad2a6e5d-470b-43ef-be0a-8392f390a8d3",
                  "parentUUID": "111d6164-7b15-49fd-b48d-4eee516edae5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad2a6e5d-470b-43ef-be0a-8392f390a8d3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "931d911f-0ece-46d2-92c5-8c2b9cf3937c",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0e6dc685-9ce2-4ba9-80ef-dfb63bd2fc97",
                  "parentUUID": "931d911f-0ece-46d2-92c5-8c2b9cf3937c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e6dc685-9ce2-4ba9-80ef-dfb63bd2fc97"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "69ea7d73-8d05-4443-b205-d7c887301cdf",
              "title": "delete /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e4a14469-b03f-4c35-8cb1-1f64456b0c58",
                  "parentUUID": "69ea7d73-8d05-4443-b205-d7c887301cdf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e4a14469-b03f-4c35-8cb1-1f64456b0c58"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "41bbef16-b786-429d-b421-e34c95cb7114",
          "title": "Test TestResult CRUD",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d1ea8415-4d90-4daa-8b4d-b1c6f9cfeec0",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestResult CRUD removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "749defb0-090a-49d6-b858-61e823d9b714",
                  "parentUUID": "d1ea8415-4d90-4daa-8b4d-b1c6f9cfeec0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "749defb0-090a-49d6-b858-61e823d9b714"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "54e1d24d-a752-4fd1-af8f-ad0054a08fa8",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestResult CRUD removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "180c6604-f02b-4c0d-bfba-da196ae589cc",
                  "parentUUID": "54e1d24d-a752-4fd1-af8f-ad0054a08fa8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "180c6604-f02b-4c0d-bfba-da196ae589cc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ce4b57f2-68c0-41fd-a5b3-9ba179263c64",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestResult CRUD removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "09daba19-53c6-4686-aafb-9b9fdf696232",
                  "parentUUID": "ce4b57f2-68c0-41fd-a5b3-9ba179263c64",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "09daba19-53c6-4686-aafb-9b9fdf696232"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8aed5e8f-2bf6-4c4f-915c-92a860c3698a",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "24989b96-01e5-4aa6-8bd2-b221e412609a",
                  "parentUUID": "8aed5e8f-2bf6-4c4f-915c-92a860c3698a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24989b96-01e5-4aa6-8bd2-b221e412609a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6586682b-424c-498d-958c-ac7aa3ad4561",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ffdf1e1f-765d-428c-adf9-bd8d8ab08d44",
                  "parentUUID": "6586682b-424c-498d-958c-ac7aa3ad4561",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ffdf1e1f-765d-428c-adf9-bd8d8ab08d44"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "316e87c1-ea28-4367-a584-d3c2584adddf",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test TestResult CRUD get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "12587697-fd07-477e-9aab-67baf63586ec",
                  "parentUUID": "316e87c1-ea28-4367-a584-d3c2584adddf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12587697-fd07-477e-9aab-67baf63586ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ee030e87-a2e0-4695-aff2-9f77ac438327",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "92070def-dc37-4541-98d2-3aab51634abc",
                  "parentUUID": "ee030e87-a2e0-4695-aff2-9f77ac438327",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "92070def-dc37-4541-98d2-3aab51634abc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8d2de9d0-5ac7-4861-8a44-e8527162bc13",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "31ca801f-a279-45a9-97fb-c50bd557ef95",
                  "parentUUID": "8d2de9d0-5ac7-4861-8a44-e8527162bc13",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31ca801f-a279-45a9-97fb-c50bd557ef95"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f714a2b2-a486-49bb-8176-9b20083111b7",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestResult CRUD test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8273a4aa-03db-4e6f-8f66-2f59e956db91",
                  "parentUUID": "f714a2b2-a486-49bb-8176-9b20083111b7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8273a4aa-03db-4e6f-8f66-2f59e956db91"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d9c15bcb-43e6-4df4-a7e2-b90e5258c3d3",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestResult CRUD get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "54cc2655-010c-4d3c-ab1f-be252685e12b",
                  "parentUUID": "d9c15bcb-43e6-4df4-a7e2-b90e5258c3d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "54cc2655-010c-4d3c-ab1f-be252685e12b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1962a019-9529-4104-b60a-7970de4d76ff",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1c673e38-1888-4194-8c79-2dda434b87ba",
                  "parentUUID": "1962a019-9529-4104-b60a-7970de4d76ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c673e38-1888-4194-8c79-2dda434b87ba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7a14103a-e1ba-4edc-be7d-75ec71d7e959",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "05714870-8458-40b6-9a18-78cc14c930be",
                  "parentUUID": "7a14103a-e1ba-4edc-be7d-75ec71d7e959",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05714870-8458-40b6-9a18-78cc14c930be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4c950f28-40dd-4a69-99f8-05963ab845ea",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.1 -> Add a quality test",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult FR 3.2.1 -> Add a quality test",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idtds = ids.getIdTestDescriptor();\nlet testResult = newTestResult(mytr.rfid, idtds[mytr.idTestDescriptor], mytr.Date, mytr.Result);\n//console.log(testResult);\nagent.post('/api/skuitems/testResult')\n.send(testResult)\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "50f2375a-544f-4848-9fb6-ce30eb54ba07",
                  "parentUUID": "4c950f28-40dd-4a69-99f8-05963ab845ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50f2375a-544f-4848-9fb6-ce30eb54ba07"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "74f87211-bd11-46aa-9d55-801b9ef6daf9",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creates a new test Result for a certain sku item defined by RFID",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "ef636201-9d0c-47da-9090-603ac253be0e",
                  "parentUUID": "74f87211-bd11-46aa-9d55-801b9ef6daf9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ef636201-9d0c-47da-9090-603ac253be0e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3423fb86-69c2-40d3-a662-19637c43ca24",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creates a new test Result for a certain sku item defined by RFID",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "3c2b4602-ce54-4798-90cb-0de958457e4a",
                  "parentUUID": "3423fb86-69c2-40d3-a662-19637c43ca24",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c2b4602-ce54-4798-90cb-0de958457e4a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "42990b17-95c3-4e0d-a038-56dd0e6ac015",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e494f261-66ec-43c0-a12c-42fa471b2f3c",
                  "parentUUID": "42990b17-95c3-4e0d-a038-56dd0e6ac015",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e494f261-66ec-43c0-a12c-42fa471b2f3c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2ebccab1-22e4-492f-abbc-684100006797",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "939474b3-70e9-4b01-a1dd-037e15727f21",
                  "parentUUID": "2ebccab1-22e4-492f-abbc-684100006797",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "939474b3-70e9-4b01-a1dd-037e15727f21"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "60ca454c-f8b6-4394-a962-4670d2908924",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3b66ccaf-5cdb-4382-82b7-cb6713f1e824",
                  "parentUUID": "60ca454c-f8b6-4394-a962-4670d2908924",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b66ccaf-5cdb-4382-82b7-cb6713f1e824"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f70cfdf0-45f9-41c3-9b2b-cf04bb1d6533",
              "title": " get /api/skuitems/:rfid/testResults/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get a specific test result with the rfid and id",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults/:id Get a specific test result with the rfid and id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    //console.log(res.body[0]);\n    agent.get('/api/skuitems/'+rfid+'/testResults/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "3221b4ed-3bf9-4b43-a584-7867133a50ab",
                  "parentUUID": "f70cfdf0-45f9-41c3-9b2b-cf04bb1d6533",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3221b4ed-3bf9-4b43-a584-7867133a50ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a825cad7-041b-4db4-89cb-6fde25542e3d",
              "title": " get /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get a specific test result with the rfid and id",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResult/:id Get a specific test result with the rfid and id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let alltdids = ids.getIdTestDescriptor();\n    console.log(alltdids);\n    agent.get('/api/skuitems/'+rfid+'/testResult/'+alltdids[0])\n    .then(function(res2){\n        console.log(res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "0aeb01a0-01a1-4f09-ae8a-9080af48676f",
                  "parentUUID": "a825cad7-041b-4db4-89cb-6fde25542e3d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0aeb01a0-01a1-4f09-ae8a-9080af48676f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "82e52176-2543-4158-8157-91c27032a2b5",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.2 -> Modify a quality test",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id FR 3.2.2 -> Modify a quality test",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    console.log(\"this is it\", res.body);\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        console.log(\"I'm heeeeereeee\", res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "ebbf1d0e-4686-460f-832f-3872796b31b3",
                  "parentUUID": "82e52176-2543-4158-8157-91c27032a2b5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ebbf1d0e-4686-460f-832f-3872796b31b3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "21a7d3b6-f7ab-42f4-ac6b-c71db2105b58",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a test results given its rfid and id and new fields",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "0ca08398-016b-48eb-8233-d58870b99d2e",
                  "parentUUID": "21a7d3b6-f7ab-42f4-ac6b-c71db2105b58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ca08398-016b-48eb-8233-d58870b99d2e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d67d9870-e8d4-414c-a9da-ec95176394be",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a test results given its rfid and id and new fields",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "cd8da88f-b097-4e63-aac5-6f551913687d",
                  "parentUUID": "d67d9870-e8d4-414c-a9da-ec95176394be",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd8da88f-b097-4e63-aac5-6f551913687d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8a47aee1-6932-4746-a76f-3a6c5aca325f",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8264c1c6-3d7c-4b85-8068-d2dc781f9434",
                  "parentUUID": "8a47aee1-6932-4746-a76f-3a6c5aca325f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8264c1c6-3d7c-4b85-8068-d2dc781f9434"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c112fa2e-3c78-4705-bb80-b064b68671ed",
              "title": " delete /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.3 -> Delete a quality test",
                  "fullTitle": "Test TestResult CRUD  delete /api/skuitems/:rfid/testResult/:id FR 3.2.3 -> Delete a quality test",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    // console.log(res.body);\n    agent.delete('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "7bbacc34-4fae-4133-ba3a-22cd2fb3e85b",
                  "parentUUID": "c112fa2e-3c78-4705-bb80-b064b68671ed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7bbacc34-4fae-4133-ba3a-22cd2fb3e85b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "23760402-e9c8-46ea-8644-878fabd64a6e",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "46bda57d-93c8-433b-ad5b-6c93c7781780",
                  "parentUUID": "23760402-e9c8-46ea-8644-878fabd64a6e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46bda57d-93c8-433b-ad5b-6c93c7781780"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cbf6fe3a-10f8-4128-aed8-2abfabd9b911",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestResult CRUD removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "91909463-bca8-4721-91d9-bbf57407ca74",
                  "parentUUID": "cbf6fe3a-10f8-4128-aed8-2abfabd9b911",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "91909463-bca8-4721-91d9-bbf57407ca74"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d6c09e2d-b11c-4827-850d-d28a3f56d99a",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestResult CRUD removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "b12676ae-fc22-4b9b-93ab-7b834caa3c24",
                  "parentUUID": "d6c09e2d-b11c-4827-850d-d28a3f56d99a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b12676ae-fc22-4b9b-93ab-7b834caa3c24"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "49be423a-9df5-47e5-89a6-7ae16b835fde",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestResult CRUD removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2e8389a6-1e40-42c0-8888-2bcc4b72fe6e",
                  "parentUUID": "49be423a-9df5-47e5-89a6-7ae16b835fde",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e8389a6-1e40-42c0-8888-2bcc4b72fe6e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "93c12cd3-b7ec-499a-90e6-40ba6addd1f7",
          "title": "Test user CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "19da721b-f407-4d14-a537-a2b52b7749f4",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "015eac72-7275-4e48-8c29-78fe5786f9c7",
                  "parentUUID": "19da721b-f407-4d14-a537-a2b52b7749f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "015eac72-7275-4e48-8c29-78fe5786f9c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bb1ed57d-ab27-491e-bfc0-cf8903bb2516",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6575d64b-5cd3-4a8b-a045-a9cab25876c9",
                  "parentUUID": "bb1ed57d-ab27-491e-bfc0-cf8903bb2516",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6575d64b-5cd3-4a8b-a045-a9cab25876c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1b285694-3704-4a27-829b-8cc198f7aa20",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7228ae60-273f-40d6-99d5-b2c4ea96b29f",
                  "parentUUID": "1b285694-3704-4a27-829b-8cc198f7aa20",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7228ae60-273f-40d6-99d5-b2c4ea96b29f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "28ef18a2-a700-41d4-b2ac-a58406530766",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "998a4e7f-43d3-4018-926d-3405a29575cb",
                  "parentUUID": "28ef18a2-a700-41d4-b2ac-a58406530766",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "998a4e7f-43d3-4018-926d-3405a29575cb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8a2b2a13-57f4-4762-bb91-a30d6808fa8e",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test user CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 59,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "71953363-d69e-4203-be0d-b582a3b21839",
                  "parentUUID": "8a2b2a13-57f4-4762-bb91-a30d6808fa8e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71953363-d69e-4203-be0d-b582a3b21839"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3fc47653-509e-4809-8a3a-352e64433df7",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4ca82ce2-6e78-48f8-a9cd-3fd4f82341bc",
                  "parentUUID": "3fc47653-509e-4809-8a3a-352e64433df7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ca82ce2-6e78-48f8-a9cd-3fd4f82341bc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d89c5e04-f16b-4b8b-8729-0cbb56a5ab82",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8cc7ea3e-8d0c-4f37-8553-bed4e757bb5d",
                  "parentUUID": "d89c5e04-f16b-4b8b-8729-0cbb56a5ab82",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8cc7ea3e-8d0c-4f37-8553-bed4e757bb5d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bb740b07-0d0f-4aa9-9156-a4b58a325a22",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7011abae-f00c-4245-92a5-f3bbc5e2cca6",
                  "parentUUID": "bb740b07-0d0f-4aa9-9156-a4b58a325a22",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7011abae-f00c-4245-92a5-f3bbc5e2cca6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cdf9a7f7-8fd9-4155-af93-012fc757bc67",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "101ef8d1-08de-48dd-b8ed-b2dc77074922",
                  "parentUUID": "cdf9a7f7-8fd9-4155-af93-012fc757bc67",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "101ef8d1-08de-48dd-b8ed-b2dc77074922"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3639910f-6b0d-4e51-b352-462023f49e78",
          "title": "Test RestockOrder CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f933e40b-aa14-47e4-9cfe-20c7451029eb",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "82ad54bc-7d0c-4aed-942a-225c50b20f98",
                  "parentUUID": "f933e40b-aa14-47e4-9cfe-20c7451029eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "82ad54bc-7d0c-4aed-942a-225c50b20f98"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b78ea9db-1f7e-4f7b-85b7-7901470d88f5",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "7deaec5e-9b4b-472f-819a-9ffa938f69b6",
                  "parentUUID": "b78ea9db-1f7e-4f7b-85b7-7901470d88f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7deaec5e-9b4b-472f-819a-9ffa938f69b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "84eef4d8-82a8-4d6a-95de-3765e5768793",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test RestockOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "539d2f8f-3abe-4e78-9716-be6a4dd8cb89",
                  "parentUUID": "84eef4d8-82a8-4d6a-95de-3765e5768793",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "539d2f8f-3abe-4e78-9716-be6a4dd8cb89"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bced4b1b-bf48-4cde-bf64-e36ded93b5ef",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test RestockOrder CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "90fd23e8-55aa-431a-927f-ace248baaf28",
                  "parentUUID": "bced4b1b-bf48-4cde-bf64-e36ded93b5ef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "90fd23e8-55aa-431a-927f-ace248baaf28"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1fbbbec4-eaa0-4456-9f28-62a44cf7bec6",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b11eb46a-5809-4cd3-824a-99d52b1e9a96",
                  "parentUUID": "1fbbbec4-eaa0-4456-9f28-62a44cf7bec6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b11eb46a-5809-4cd3-824a-99d52b1e9a96"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "18ce0773-64a9-47cd-a365-82249ceab7c2",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f1208cdb-2fe8-480b-85f9-0361e445ca31",
                  "parentUUID": "18ce0773-64a9-47cd-a365-82249ceab7c2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f1208cdb-2fe8-480b-85f9-0361e445ca31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1db19351-0f3c-4b3d-a2c9-5d4cfe69e36f",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test RestockOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b6038f17-773b-4f3b-a81c-329dcc0f9641",
                  "parentUUID": "1db19351-0f3c-4b3d-a2c9-5d4cfe69e36f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b6038f17-773b-4f3b-a81c-329dcc0f9641"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0e57f984-efdd-410e-bfbd-44418f567470",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 63,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2bd73154-2768-49ac-a1c3-817f84862ce1",
                  "parentUUID": "0e57f984-efdd-410e-bfbd-44418f567470",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2bd73154-2768-49ac-a1c3-817f84862ce1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 63,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "feccb7fe-262f-4a7a-a2ce-adfdf18e2ce6",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 59,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6d3373c2-e9b0-41c0-963d-ba00bdd6480c",
                  "parentUUID": "feccb7fe-262f-4a7a-a2ce-adfdf18e2ce6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d3373c2-e9b0-41c0-963d-ba00bdd6480c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ea873b71-dd2e-4a6f-889e-f4ac9002bfca",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1eae5370-0b26-4a2a-aefc-6007fdd6225e",
                  "parentUUID": "ea873b71-dd2e-4a6f-889e-f4ac9002bfca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1eae5370-0b26-4a2a-aefc-6007fdd6225e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5583c68e-0efa-4dbf-b453-747726c03b6f",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "44f80dae-918f-489b-9344-148b9a566de1",
                  "parentUUID": "5583c68e-0efa-4dbf-b453-747726c03b6f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "44f80dae-918f-489b-9344-148b9a566de1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "58572adc-d3e4-4f13-8a20-aadab8c8013e",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f20c0c7f-bd74-4472-acba-ad231eea30e3",
                  "parentUUID": "58572adc-d3e4-4f13-8a20-aadab8c8013e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f20c0c7f-bd74-4472-acba-ad231eea30e3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "74c9e16f-ad11-4686-aeda-0031b4703c20",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "18f94b8d-7165-4624-a08e-23e62ea35dbd",
                  "parentUUID": "74c9e16f-ad11-4686-aeda-0031b4703c20",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18f94b8d-7165-4624-a08e-23e62ea35dbd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "103f5438-a859-45de-8511-628b0fb3b74d",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "54f50bb8-9431-4fae-a3ff-90057a046ba8",
                  "parentUUID": "103f5438-a859-45de-8511-628b0fb3b74d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "54f50bb8-9431-4fae-a3ff-90057a046ba8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ecc7b346-7e7f-4a55-81a5-a9b10491e123",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "75039282-c1f5-48dc-b3e9-69f2d0c6d6ae",
                  "parentUUID": "ecc7b346-7e7f-4a55-81a5-a9b10491e123",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75039282-c1f5-48dc-b3e9-69f2d0c6d6ae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "61464b70-495f-41c8-ab00-4d30b1aa4766",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "19ad023c-1915-4a91-aaf7-49b45932c6bf",
                  "parentUUID": "61464b70-495f-41c8-ab00-4d30b1aa4766",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19ad023c-1915-4a91-aaf7-49b45932c6bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0f0c998b-e028-4592-9eec-4d7ed8ceb8ff",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet firstSupplierId;\nagent.get('/api/suppliers')\n.then(function(res){\n    firstSupplierId = res.body[0].id;\n    agent.post('/api/restockOrder')\n    .send(myrestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "71cb4393-6f01-457f-be42-45c2e32dcf1a",
                  "parentUUID": "0f0c998b-e028-4592-9eec-4d7ed8ceb8ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71cb4393-6f01-457f-be42-45c2e32dcf1a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f16c659f-11bc-4612-87db-71f992327edb",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1a36d6e1-157e-4fb8-8448-cb52b1933a24",
                  "parentUUID": "f16c659f-11bc-4612-87db-71f992327edb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a36d6e1-157e-4fb8-8448-cb52b1933a24"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6d2e1fd5-c316-4e34-9a25-917e2e9dca07",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "03268189-f007-4ec8-b73a-8db7dea18f7d",
                  "parentUUID": "6d2e1fd5-c316-4e34-9a25-917e2e9dca07",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "03268189-f007-4ec8-b73a-8db7dea18f7d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0ad247ac-5162-4f6f-beaf-de8442670a53",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "0a49b402-22de-4839-8f4a-cdf5871e809f",
                  "parentUUID": "0ad247ac-5162-4f6f-beaf-de8442670a53",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a49b402-22de-4839-8f4a-cdf5871e809f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f8474805-d264-447e-a08d-df0b394501d2",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "9bdccace-d5d1-4fbd-b37f-50e6493b5fbb",
                  "parentUUID": "f8474805-d264-447e-a08d-df0b394501d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9bdccace-d5d1-4fbd-b37f-50e6493b5fbb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a5392568-1493-45d0-8146-aa739c0fa289",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "18a967b2-2237-460a-b471-81bad8a4ebe9",
                  "parentUUID": "a5392568-1493-45d0-8146-aa739c0fa289",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18a967b2-2237-460a-b471-81bad8a4ebe9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b9eca665-9a02-4b64-9a9d-cd078e7bd1f9",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "dde80d55-f07c-48cc-adbd-40bdf12b1d78",
                  "parentUUID": "b9eca665-9a02-4b64-9a9d-cd078e7bd1f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dde80d55-f07c-48cc-adbd-40bdf12b1d78"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0d06dc4e-66c8-43c7-924f-99a1090231fb",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "cc5f2c9d-30ce-4505-b83a-7a29728e4e9e",
                  "parentUUID": "0d06dc4e-66c8-43c7-924f-99a1090231fb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc5f2c9d-30ce-4505-b83a-7a29728e4e9e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d3e66680-35fd-4653-b616-112e1a4fa51f",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c340bf17-436c-4f21-99c6-2557e707af44",
                  "parentUUID": "d3e66680-35fd-4653-b616-112e1a4fa51f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c340bf17-436c-4f21-99c6-2557e707af44"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f601252c-9c55-42f4-bf1d-90f5814be729",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":allskuitems})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "0961d29e-5775-4639-adbf-df0a3769cb76",
                  "parentUUID": "f601252c-9c55-42f4-bf1d-90f5814be729",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0961d29e-5775-4639-adbf-df0a3769cb76"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "63af0b5f-b85b-44f7-9fec-35f132c7c63f",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send(null)\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "05cbc568-a5c3-4eed-a8b0-6b0aad67fae8",
                  "parentUUID": "63af0b5f-b85b-44f7-9fec-35f132c7c63f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05cbc568-a5c3-4eed-a8b0-6b0aad67fae8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4c1d4a81-fa09-4035-b387-ed8269cf9031",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "8650ffed-8521-4f92-a21b-b88396a1b7cb",
                  "parentUUID": "4c1d4a81-fa09-4035-b387-ed8269cf9031",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8650ffed-8521-4f92-a21b-b88396a1b7cb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fee65f23-4bb4-4816-8108-f640735e06a8",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "1b5bae6b-0373-4683-b4c9-e039a4c1df4e",
                  "parentUUID": "fee65f23-4bb4-4816-8108-f640735e06a8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b5bae6b-0373-4683-b4c9-e039a4c1df4e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "86e1412f-89b1-493b-bf1f-7b7f8a11a153",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "26731583-1f9b-41ef-bfe7-0a72c9e21e78",
                  "parentUUID": "86e1412f-89b1-493b-bf1f-7b7f8a11a153",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26731583-1f9b-41ef-bfe7-0a72c9e21e78"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "24dcaa22-4bed-405f-a1f8-d153b670e5f7",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 10000;\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2021/12/29\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "ae125271-5190-4e7f-81c7-91696e09c64b",
                  "parentUUID": "24dcaa22-4bed-405f-a1f8-d153b670e5f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ae125271-5190-4e7f-81c7-91696e09c64b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b87c450e-c3a2-4920-b984-f17c9ed4a4d1",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "92281bd9-e9d1-4c9f-903d-56e68cd9d43a",
                  "parentUUID": "b87c450e-c3a2-4920-b984-f17c9ed4a4d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "92281bd9-e9d1-4c9f-903d-56e68cd9d43a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "76a1a817-96b0-434b-a3db-73f430da5e42",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "b9708a60-9ef5-4cf1-b092-f05719008bea",
                  "parentUUID": "76a1a817-96b0-434b-a3db-73f430da5e42",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9708a60-9ef5-4cf1-b092-f05719008bea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "668696a4-ab46-4032-a852-4d5bb460dccd",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test RestockOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "f2a24f13-2721-4ef7-aaa5-325a5d8d4061",
                  "parentUUID": "668696a4-ab46-4032-a852-4d5bb460dccd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f2a24f13-2721-4ef7-aaa5-325a5d8d4061"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "46b607a5-1ee0-494d-ba13-f93038fcad8a",
          "title": "Test ReturnOrder CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fedae146-1e6e-4527-bac4-973405d783c8",
              "title": "Removing all return orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test ReturnOrder CRUD features Removing all return orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/returnOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "649cae9f-77ce-4250-927e-e903c25dd9a3",
                  "parentUUID": "fedae146-1e6e-4527-bac4-973405d783c8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "649cae9f-77ce-4250-927e-e903c25dd9a3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f33daa77-153d-47c4-b841-c7680698777d",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test ReturnOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "45602bec-3199-48c2-b588-39c551278949",
                  "parentUUID": "f33daa77-153d-47c4-b841-c7680698777d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "45602bec-3199-48c2-b588-39c551278949"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "27b1a030-2877-4771-829d-54f0c8bf2a38",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test ReturnOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "f7a2c171-7c49-4c4c-a40f-ea0fa7a9b27a",
                  "parentUUID": "27b1a030-2877-4771-829d-54f0c8bf2a38",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f7a2c171-7c49-4c4c-a40f-ea0fa7a9b27a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "034bc612-aa15-4e69-b9f1-d40990c5e468",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test ReturnOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "6876b679-501f-4794-8eca-1d31ae6b86b7",
                  "parentUUID": "034bc612-aa15-4e69-b9f1-d40990c5e468",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6876b679-501f-4794-8eca-1d31ae6b86b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "afc16726-7f5a-411c-821e-fd3ccc08f845",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test ReturnOrder CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a1f8b22e-5394-4a6a-af9e-81ae6f9d00f9",
                  "parentUUID": "afc16726-7f5a-411c-821e-fd3ccc08f845",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1f8b22e-5394-4a6a-af9e-81ae6f9d00f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2b360bfe-1de2-4f6a-803f-4c7d5ea60ce9",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3a9e72b6-a9ca-449d-8b28-2a250292d152",
                  "parentUUID": "2b360bfe-1de2-4f6a-803f-4c7d5ea60ce9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3a9e72b6-a9ca-449d-8b28-2a250292d152"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a9d97ce4-782d-4dda-b6bb-357d1cd535fb",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5d7a3fb3-a98c-4756-930c-6b68710b532c",
                  "parentUUID": "a9d97ce4-782d-4dda-b6bb-357d1cd535fb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d7a3fb3-a98c-4756-930c-6b68710b532c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b33793f7-58a1-4607-81ec-cb38abe8d111",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test ReturnOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "eb9f192f-dc66-4a77-9666-2c9b099c0a80",
                  "parentUUID": "b33793f7-58a1-4607-81ec-cb38abe8d111",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eb9f192f-dc66-4a77-9666-2c9b099c0a80"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cedad467-cf9c-4eb7-ba7e-7a36d817ca25",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 62,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "805665f1-bfff-48f5-bb27-07848f8faa0f",
                  "parentUUID": "cedad467-cf9c-4eb7-ba7e-7a36d817ca25",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "805665f1-bfff-48f5-bb27-07848f8faa0f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 62,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8a4bf146-b410-435c-b65a-ad70e494e151",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 59,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3ca50856-5df6-4eda-856b-00ac85f83715",
                  "parentUUID": "8a4bf146-b410-435c-b65a-ad70e494e151",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3ca50856-5df6-4eda-856b-00ac85f83715"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8698b948-cb2d-4eee-9b2a-f85b1e84331f",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "942a3472-89fb-4fe3-bfa4-75df98f79bba",
                  "parentUUID": "8698b948-cb2d-4eee-9b2a-f85b1e84331f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "942a3472-89fb-4fe3-bfa4-75df98f79bba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cf496729-1cd0-44c0-976d-4bf70d1316df",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e75d9af4-84bf-4367-9d46-c8a87c566917",
                  "parentUUID": "cf496729-1cd0-44c0-976d-4bf70d1316df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e75d9af4-84bf-4367-9d46-c8a87c566917"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "498c1110-f5f1-4e09-9b7e-0bbca76ef0c4",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5d9ccbbe-66e1-4dde-b014-b8d35322d0d2",
                  "parentUUID": "498c1110-f5f1-4e09-9b7e-0bbca76ef0c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d9ccbbe-66e1-4dde-b014-b8d35322d0d2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3f79fc5f-0e60-41df-9c38-a8653ab14da1",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "24f87336-27f3-4437-ac7b-1830997bf6b9",
                  "parentUUID": "3f79fc5f-0e60-41df-9c38-a8653ab14da1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24f87336-27f3-4437-ac7b-1830997bf6b9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "353c0669-e00b-4792-a14d-c306444031dc",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "eb78099d-8ae9-422d-996b-fb93740ad1a8",
                  "parentUUID": "353c0669-e00b-4792-a14d-c306444031dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eb78099d-8ae9-422d-996b-fb93740ad1a8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dc8f20a7-1462-427a-9015-1c577b48ab21",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b1a4d28d-99eb-4b4b-aafc-cc4a72e74901",
                  "parentUUID": "dc8f20a7-1462-427a-9015-1c577b48ab21",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b1a4d28d-99eb-4b4b-aafc-cc4a72e74901"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6fa6d93f-dd10-4c61-a309-adcae4de104b",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3b36d635-474a-4dcf-b40f-fa0d9a67f950",
                  "parentUUID": "6fa6d93f-dd10-4c61-a309-adcae4de104b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b36d635-474a-4dcf-b40f-fa0d9a67f950"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ac0ff776-bca5-4c13-baa6-18e3db79119c",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "b65cbba5-78b9-439e-9e27-5f1ab889ecb5",
                  "parentUUID": "ac0ff776-bca5-4c13-baa6-18e3db79119c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b65cbba5-78b9-439e-9e27-5f1ab889ecb5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "67c07e01-8bf7-4eef-b8d1-5866a90a949b",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "e4a4ed0d-2be4-40c0-821c-2847b12a6736",
                  "parentUUID": "67c07e01-8bf7-4eef-b8d1-5866a90a949b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e4a4ed0d-2be4-40c0-821c-2847b12a6736"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7780815f-d953-42ff-85a9-800b86809fe2",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "04c572d5-ac4a-4421-8164-54cd0f1c905a",
                  "parentUUID": "7780815f-d953-42ff-85a9-800b86809fe2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "04c572d5-ac4a-4421-8164-54cd0f1c905a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c6b184a2-d4ff-4588-935d-9f11f0433566",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "343c2644-6491-424c-b8f8-bf8567047548",
                  "parentUUID": "c6b184a2-d4ff-4588-935d-9f11f0433566",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "343c2644-6491-424c-b8f8-bf8567047548"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "519fae0d-afd7-48c0-955b-27da52b31988",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9696a4e7-ce4d-418b-adc6-48d1f8077455",
                  "parentUUID": "519fae0d-afd7-48c0-955b-27da52b31988",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9696a4e7-ce4d-418b-adc6-48d1f8077455"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "89265326-92c5-4c7a-843d-124b6894145b",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9fd70e6e-325b-45c2-8a10-880d7a13cc1f",
                  "parentUUID": "89265326-92c5-4c7a-843d-124b6894145b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9fd70e6e-325b-45c2-8a10-880d7a13cc1f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8960737e-2d32-4644-8b6a-bfc34dcd121c",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/returnOrder')\n.send(myretord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ec198511-b1e4-42c5-a01f-a2294f68848a",
                  "parentUUID": "8960737e-2d32-4644-8b6a-bfc34dcd121c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ec198511-b1e4-42c5-a01f-a2294f68848a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "741c0cdf-3ecc-4fa4-a352-2215c2e56601",
              "title": " get /api/returnOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all return orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders  get all return orders",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idrestockorders = ids.getIdRestockOrdersIssued();\n    let idretord = [];\n    res.body.length.should.be.eql(myretord.length);\n    for(let i = 0; i<res.body.length; i++){\n        idretord[i] = res.body[i].id;\n        res.body[i].returnDate.should.equal(myretord[i].returnDate);\n        res.body[i].restockOrderId.should.equal(idrestockorders[myretord[i].restockOrderId]);\n    }\n    ids.setIdReturnOrders(idretord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "275a8626-fc36-48f2-8fe2-f974376966c5",
                  "parentUUID": "741c0cdf-3ecc-4fa4-a352-2215c2e56601",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "275a8626-fc36-48f2-8fe2-f974376966c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "53e42b6c-0002-4924-b776-8117c9bdf732",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsret = ids.getIdReturnOrders();\n//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+idsret[id])\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.returnDate.should.equal(myretord.returnDate);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7df0566d-5275-4e90-9ca9-16c161261199",
                  "parentUUID": "53e42b6c-0002-4924-b776-8117c9bdf732",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7df0566d-5275-4e90-9ca9-16c161261199"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "718c3555-327a-4eda-b321-9c1f49d1f50a",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b15d2004-efeb-4baa-82e4-7c368788a0d1",
                  "parentUUID": "718c3555-327a-4eda-b321-9c1f49d1f50a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b15d2004-efeb-4baa-82e4-7c368788a0d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "055e9b9c-9fa3-4071-9610-320ee1ac9f95",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8b1b07c5-a627-4c30-9376-a6268471616b",
                  "parentUUID": "055e9b9c-9fa3-4071-9610-320ee1ac9f95",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8b1b07c5-a627-4c30-9376-a6268471616b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f2f7c486-ffac-4f38-9a16-977520b8f8b5",
          "title": "Test Internal Order CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0b40fb16-e8f4-4a77-97b8-b73d1ef6b0b5",
              "title": "Removing all Internal Orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Interna Orders",
                  "fullTitle": "Test Internal Order CRUD features Removing all Internal Orders Getting Interna Orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/internalOrders/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "2464bf74-bcf4-491e-90d5-7abbb0b18ed7",
                  "parentUUID": "0b40fb16-e8f4-4a77-97b8-b73d1ef6b0b5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2464bf74-bcf4-491e-90d5-7abbb0b18ed7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4d02d0ab-5c8f-4a88-9007-f0bb191ed225",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Internal Order CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "399ad5de-b0a3-4941-b9d1-c7f505678506",
                  "parentUUID": "4d02d0ab-5c8f-4a88-9007-f0bb191ed225",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "399ad5de-b0a3-4941-b9d1-c7f505678506"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "67c4c39b-ba28-48aa-aecb-ab507c3f0839",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Internal Order CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "50a41edb-08f2-4f30-9a57-a86823e4cfb5",
                  "parentUUID": "67c4c39b-ba28-48aa-aecb-ab507c3f0839",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50a41edb-08f2-4f30-9a57-a86823e4cfb5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cc577b05-e5ed-46c7-a6fa-f7af26f40d08",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test Internal Order CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9a83419a-f6f6-4ccd-ba3c-ca2208b6069e",
                  "parentUUID": "cc577b05-e5ed-46c7-a6fa-f7af26f40d08",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a83419a-f6f6-4ccd-ba3c-ca2208b6069e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "46e7ed4d-b1da-4760-9966-3f4da9f49a91",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3bd5d091-0df8-40ac-8cee-2573fa9f50a1",
                  "parentUUID": "46e7ed4d-b1da-4760-9966-3f4da9f49a91",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3bd5d091-0df8-40ac-8cee-2573fa9f50a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4d0fc290-ea43-4490-9732-ab6b576ce802",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4e9feeea-ead9-4306-a621-e20a65c64ec1",
                  "parentUUID": "4d0fc290-ea43-4490-9732-ab6b576ce802",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e9feeea-ead9-4306-a621-e20a65c64ec1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "028fe70d-12d7-4821-a51b-85505bf892ec",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test Internal Order CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "239e4343-bb88-47e7-9761-696864f5cf2e",
                  "parentUUID": "028fe70d-12d7-4821-a51b-85505bf892ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "239e4343-bb88-47e7-9761-696864f5cf2e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0958854e-671e-4a69-9fda-af69fa55f9d7",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Internal Order CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7ecc3f74-0878-49bd-8457-deed397a10c6",
                  "parentUUID": "0958854e-671e-4a69-9fda-af69fa55f9d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7ecc3f74-0878-49bd-8457-deed397a10c6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4da5b24a-ce6a-4136-ab71-6176ae066b6a",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                  "err": {},
                  "uuid": "52a50b3e-9943-4106-8875-43729a23fbd5",
                  "parentUUID": "4da5b24a-ce6a-4136-ab71-6176ae066b6a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52a50b3e-9943-4106-8875-43729a23fbd5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "078d1465-0c0c-4713-99d9-0218f972b264",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                  "err": {},
                  "uuid": "81a048ee-3045-4476-8dec-a293715269df",
                  "parentUUID": "078d1465-0c0c-4713-99d9-0218f972b264",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "81a048ee-3045-4476-8dec-a293715269df"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "077e8539-2680-4833-84f9-1aec27856e09",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(currentInternalOrders[ith]);\nagent.post('/api/internalOrders')\n.send(intord)\n.then(function(res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "ef7f23b7-8efa-4402-b542-e0a984f76fdf",
                  "parentUUID": "077e8539-2680-4833-84f9-1aec27856e09",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ef7f23b7-8efa-4402-b542-e0a984f76fdf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2f29dec1-fb35-4c34-b472-4286afd888bc",
              "title": " get /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all internal orders",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e92fd6fe-4f52-4ea0-8964-d8703878caaa",
                  "parentUUID": "2f29dec1-fb35-4c34-b472-4286afd888bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e92fd6fe-4f52-4ea0-8964-d8703878caaa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ac28cd54-7dd9-4ec2-ba60-1ec4ab65149e",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ad4963d0-7845-4b81-a834-6d635b30fe0e",
                  "parentUUID": "ac28cd54-7dd9-4ec2-ba60-1ec4ab65149e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad4963d0-7845-4b81-a834-6d635b30fe0e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4f3b415f-0fb9-4570-b4d1-3c7775495e04",
              "title": " put /api/internalOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify the state of an IO",
                  "fullTitle": "Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "34a85c13-9bec-4036-8bc3-8abeb89d6254",
                  "parentUUID": "4f3b415f-0fb9-4570-b4d1-3c7775495e04",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "34a85c13-9bec-4036-8bc3-8abeb89d6254"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b9a61758-a9dc-4e84-ba07-c3fba0e8b9b0",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "01e6fdd0-64e1-4cae-9656-da9c48c2a5f0",
                  "parentUUID": "b9a61758-a9dc-4e84-ba07-c3fba0e8b9b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "01e6fdd0-64e1-4cae-9656-da9c48c2a5f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "97704d3d-0fa0-46a1-a6b5-1a70f88fc44e",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersAccepted')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order accepted', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2c407ea6-faaa-4282-b03d-fabf546ac751",
                  "parentUUID": "97704d3d-0fa0-46a1-a6b5-1a70f88fc44e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2c407ea6-faaa-4282-b03d-fabf546ac751"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3d05c130-4ec4-471b-a61b-955caf1e1e9e",
              "title": " put /api/internalOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify the state of an IO",
                  "fullTitle": "Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "f17a0e68-1ffe-4686-ae8c-4b4891094670",
                  "parentUUID": "3d05c130-4ec4-471b-a61b-955caf1e1e9e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f17a0e68-1ffe-4686-ae8c-4b4891094670"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5be4eabb-ce95-4fa4-9013-e43e329fa39a",
              "title": " get /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all internal orders",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bf7745a0-6d28-49fb-99df-2d1e3ee658d7",
                  "parentUUID": "5be4eabb-ce95-4fa4-9013-e43e329fa39a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bf7745a0-6d28-49fb-99df-2d1e3ee658d7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1dfc5db8-9db3-4fce-b356-bebf9579ddc6",
          "title": "Test Item CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "cb3042f6-f926-4d98-aaf2-51dc6c30318a",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Item CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "50208d61-d78f-4d80-ab2d-08ed6d09ef5a",
                  "parentUUID": "cb3042f6-f926-4d98-aaf2-51dc6c30318a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50208d61-d78f-4d80-ab2d-08ed6d09ef5a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0cc4b1cd-0482-4d5b-b39b-cdb732d23eb8",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Item CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "e583b0b7-aa6c-4329-b1e5-01d61f8562ff",
                  "parentUUID": "0cc4b1cd-0482-4d5b-b39b-cdb732d23eb8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e583b0b7-aa6c-4329-b1e5-01d61f8562ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e4e5bba5-7728-42f8-8728-bef74fcfed66",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test Item CRUD features removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7a84c921-6161-49fc-837d-ebb44a4e452c",
                  "parentUUID": "e4e5bba5-7728-42f8-8728-bef74fcfed66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7a84c921-6161-49fc-837d-ebb44a4e452c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4e8a8b4b-db18-4cc9-9875-f05c70dafad8",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test Item CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "010dce51-e31b-42d2-a066-9faa38ac359d",
                  "parentUUID": "4e8a8b4b-db18-4cc9-9875-f05c70dafad8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "010dce51-e31b-42d2-a066-9faa38ac359d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a840db4f-b63c-437b-b717-56d69187af1e",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ad18a1fb-71bb-4da5-993e-453883981beb",
                  "parentUUID": "a840db4f-b63c-437b-b717-56d69187af1e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad18a1fb-71bb-4da5-993e-453883981beb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ef49c95a-2226-4941-9c0d-c2f158beffc9",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "29e40902-4109-4cee-ad52-6ea0d6c9e423",
                  "parentUUID": "ef49c95a-2226-4941-9c0d-c2f158beffc9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "29e40902-4109-4cee-ad52-6ea0d6c9e423"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "00118181-310e-4971-8de4-73ad77433693",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test Item CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cceaebf4-4034-4185-8735-d38e3739a021",
                  "parentUUID": "00118181-310e-4971-8de4-73ad77433693",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cceaebf4-4034-4185-8735-d38e3739a021"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e019e2e4-2263-49ee-a941-86feff2f33d2",
              "title": "Removing all Items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Items",
                  "fullTitle": "Test Item CRUD features Removing all Items Getting Items",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "05232d72-9ba6-44b7-9f27-16c1e96c2995",
                  "parentUUID": "e019e2e4-2263-49ee-a941-86feff2f33d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05232d72-9ba6-44b7-9f27-16c1e96c2995"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "06d12ac5-9d24-4e65-b018-0c118ecc4a60",
              "title": " get /api/items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all items",
                  "fullTitle": "Test Item CRUD features  get /api/items Getting all items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "8d940265-f704-40f9-bf53-3fc3efa9bad0",
                  "parentUUID": "06d12ac5-9d24-4e65-b018-0c118ecc4a60",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d940265-f704-40f9-bf53-3fc3efa9bad0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "48eff5d2-1d56-4bba-9a03-80f7de95034b",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0b1f84b7-15da-4a01-b16f-60d99c041229",
                  "parentUUID": "48eff5d2-1d56-4bba-9a03-80f7de95034b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0b1f84b7-15da-4a01-b16f-60d99c041229"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7efbdba2-d7a3-4f21-8167-8cced05476c2",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e1684ea3-2882-4059-8467-f6fec8b17793",
                  "parentUUID": "7efbdba2-d7a3-4f21-8167-8cced05476c2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1684ea3-2882-4059-8467-f6fec8b17793"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6eefa8c6-25b8-4a8b-8633-547312bf3ce5",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test Item CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "01e28870-f0db-4056-b280-4651e2f01fa9",
                  "parentUUID": "6eefa8c6-25b8-4a8b-8633-547312bf3ce5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "01e28870-f0db-4056-b280-4651e2f01fa9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f2e24f97-8564-4620-be95-41b7a2469c79",
              "title": "post /api/item/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding item details",
                  "fullTitle": "Test Item CRUD features post /api/item/ Adding item details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "0af1c39f-aceb-41a4-8c44-5f3290a4c8fb",
                  "parentUUID": "f2e24f97-8564-4620-be95-41b7a2469c79",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0af1c39f-aceb-41a4-8c44-5f3290a4c8fb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d4615af2-b29c-48c5-9d31-5cf48cd633d9",
              "title": "post /api/item/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding item details",
                  "fullTitle": "Test Item CRUD features post /api/item/ Adding item details",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "2008b472-a120-4d32-b21a-a9c39e62eced",
                  "parentUUID": "d4615af2-b29c-48c5-9d31-5cf48cd633d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2008b472-a120-4d32-b21a-a9c39e62eced"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c3b6ed6b-287c-4b31-8a24-22b20466f2d7",
              "title": " get /api/items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all items",
                  "fullTitle": "Test Item CRUD features  get /api/items Getting all items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "2d7a9f6a-9ab7-4cbf-8d09-c89186fa3004",
                  "parentUUID": "c3b6ed6b-287c-4b31-8a24-22b20466f2d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2d7a9f6a-9ab7-4cbf-8d09-c89186fa3004"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9b9a608b-297a-4604-9447-0ab2b50bb970",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+itemid)\n.then(r => {\n    let idskus = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(r.status, expCode);\n    if (r.status == 200) {\n        r.body.should.be.a('object');\n        r.body.id.should.equal(itemid);\n        r.body.description.should.equal(myexpitem.description);\n        r.body.price.should.equal(myexpitem.price);\n        r.body.SKUId.should.equal(idskus[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "f037cbcd-4925-41b8-85c3-0882c15a6f95",
                  "parentUUID": "9b9a608b-297a-4604-9447-0ab2b50bb970",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f037cbcd-4925-41b8-85c3-0882c15a6f95"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fb1c4d95-5070-4206-9278-8eb99d669fa7",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "c1a45173-5342-47ad-8d37-90fec4af5234",
                  "parentUUID": "fb1c4d95-5070-4206-9278-8eb99d669fa7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c1a45173-5342-47ad-8d37-90fec4af5234"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7076a1ba-48b6-46ed-9f1d-fc83f0e9ebaa",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "bb9ed54f-297b-45d3-b8ce-49dc48ee4cdd",
                  "parentUUID": "7076a1ba-48b6-46ed-9f1d-fc83f0e9ebaa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bb9ed54f-297b-45d3-b8ce-49dc48ee4cdd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "64fb37f8-9e8c-42b7-8720-35dc9b644e88",
              "title": " put /api/item/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify an item given its ID and new fields",
                  "fullTitle": "Test Item CRUD features  put /api/item/:id Modify an item given its ID and new fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/item/'+ith)\n.send(updateItem(newDescription, newPrice))\n.then(res => {\n    let idsku = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(res.status, expCode);\n    agent.get('/api/items/'+ith)\n    .then (r => {\n        console.log(r.body);\n        assert.equal(r.status,200);\n        r.body.should.be.a('object');\n        r.body.id.should.equal(myexpitem.id);\n        r.body.description.should.equal(newDescription);\n        r.body.price.should.equal(newPrice);\n        r.body.SKUId.should.equal(idsku[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    });\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f2a67652-6b4a-41cc-9a7b-44e3b9fda319",
                  "parentUUID": "64fb37f8-9e8c-42b7-8720-35dc9b644e88",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f2a67652-6b4a-41cc-9a7b-44e3b9fda319"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d28f35a2-7c63-4ff1-9ab7-8ca31d886eb6",
              "title": " delete /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete an item given its id",
                  "fullTitle": "Test Item CRUD features  delete /api/items/:id Delete an item given its id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/items/'+ith)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "6db97072-f4dc-4cfb-a18e-130d2d23b565",
                  "parentUUID": "d28f35a2-7c63-4ff1-9ab7-8ca31d886eb6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6db97072-f4dc-4cfb-a18e-130d2d23b565"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "42b5b310-f77c-4887-b900-77b571bb061e",
              "title": "Removing all Items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Items",
                  "fullTitle": "Test Item CRUD features Removing all Items Getting Items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "8bf7d720-360d-46a5-bb2b-8c45d00bda4f",
                  "parentUUID": "42b5b310-f77c-4887-b900-77b571bb061e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8bf7d720-360d-46a5-bb2b-8c45d00bda4f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5777495b-69af-454f-a629-ff2fcdbd230d",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Item CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "71e5add9-2762-483a-b52c-b82cf49946d5",
                  "parentUUID": "5777495b-69af-454f-a629-ff2fcdbd230d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71e5add9-2762-483a-b52c-b82cf49946d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fc3b33f1-53bf-48c7-bc83-d870b009bfa3",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Item CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "0c0103bc-a413-4e84-ad3e-0a36fdc78791",
                  "parentUUID": "fc3b33f1-53bf-48c7-bc83-d870b009bfa3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0c0103bc-a413-4e84-ad3e-0a36fdc78791"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bca7c147-b787-4cb4-b8a6-fb95b44d0eba",
          "title": "Testing Functional requirements",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b10d0d41-fbbf-4890-baf8-5bea1fc6c142",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Testing Functional requirements  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "eb1f0bd2-f3a1-43ca-bc1d-d4a685bc7c6d",
                  "parentUUID": "b10d0d41-fbbf-4890-baf8-5bea1fc6c142",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eb1f0bd2-f3a1-43ca-bc1d-d4a685bc7c6d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1a8b7179-13fb-4a56-b6b5-005d878115dd",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "ba88dc14-f70a-4e64-a242-2d3142a76ea6",
                  "parentUUID": "1a8b7179-13fb-4a56-b6b5-005d878115dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba88dc14-f70a-4e64-a242-2d3142a76ea6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "110a8acd-e79d-456b-a155-e29a48d6130d",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "Testing Functional requirements Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "364d03fa-3008-414a-9d82-f4595f6720de",
                  "parentUUID": "110a8acd-e79d-456b-a155-e29a48d6130d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "364d03fa-3008-414a-9d82-f4595f6720de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "468f1e5e-cfe8-4080-8c06-019dc9209141",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Testing Functional requirements removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6c95b5fe-2fde-4233-9680-69ffbcae3901",
                  "parentUUID": "468f1e5e-cfe8-4080-8c06-019dc9209141",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6c95b5fe-2fde-4233-9680-69ffbcae3901"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "21e9d312-282c-4c2d-9694-be188cc10c0f",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "125fe85d-afb7-4ddf-bb37-c2054cb5b0b5",
                  "parentUUID": "21e9d312-282c-4c2d-9694-be188cc10c0f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "125fe85d-afb7-4ddf-bb37-c2054cb5b0b5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "01d648b7-2dcd-4867-a0ef-560e2d88a25e",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Testing Functional requirements Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "005df07f-57f7-47d9-889d-5c690488357a",
                  "parentUUID": "01d648b7-2dcd-4867-a0ef-560e2d88a25e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "005df07f-57f7-47d9-889d-5c690488357a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2dec4dc8-25cf-4d3b-b4f6-be812f673981",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f918ae2c-1d42-4947-b56b-94fe742563b6",
                  "parentUUID": "2dec4dc8-25cf-4d3b-b4f6-be812f673981",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f918ae2c-1d42-4947-b56b-94fe742563b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dcc4c913-788a-4eff-9ef3-b52aa7e2d463",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Testing Functional requirements  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3652f7f3-3727-471d-977c-2d9019abc6e0",
                  "parentUUID": "dcc4c913-788a-4eff-9ef3-b52aa7e2d463",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3652f7f3-3727-471d-977c-2d9019abc6e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6c09cf29-aa97-4047-ae8f-d8ffd97fd54a",
              "title": " get /api/users/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.3 -> List all users",
                  "fullTitle": "Testing Functional requirements  get /api/users/ FR 1.3 -> List all users",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9774911a-e460-4923-82ba-f90e0af517ed",
                  "parentUUID": "6c09cf29-aa97-4047-ae8f-d8ffd97fd54a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9774911a-e460-4923-82ba-f90e0af517ed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ec05dc8b-0a41-4c87-9525-b0d44ccd0cb2",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Testing Functional requirements  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "70d1daa2-ca47-438c-8cf3-bc1d29b4708a",
                  "parentUUID": "ec05dc8b-0a41-4c87-9525-b0d44ccd0cb2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70d1daa2-ca47-438c-8cf3-bc1d29b4708a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0ac267ca-b624-4c2a-b1d4-da3ec0b0fa2e",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "53b6ae2c-a6fa-4e6e-adae-f05b6c228779",
                  "parentUUID": "0ac267ca-b624-4c2a-b1d4-da3ec0b0fa2e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "53b6ae2c-a6fa-4e6e-adae-f05b6c228779"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3c77fb91-77ae-4d64-9689-0fe30a1362f2",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6bca339e-1133-4ebb-9ad4-2ca06324b947",
                  "parentUUID": "3c77fb91-77ae-4d64-9689-0fe30a1362f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6bca339e-1133-4ebb-9ad4-2ca06324b947"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "08b99267-7ec3-4f4e-ba31-793ff8d092f6",
              "title": "put /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 b -> Modify an existing SKU",
                  "fullTitle": "Testing Functional requirements put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4c33ef44-8d0b-4664-a7e2-ffe66a537cb6",
                  "parentUUID": "08b99267-7ec3-4f4e-ba31-793ff8d092f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c33ef44-8d0b-4664-a7e2-ffe66a537cb6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c05a4dd7-cfab-44d0-bdf5-f5409c461c36",
              "title": "delete /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.2 -> Delete a SKU",
                  "fullTitle": "Testing Functional requirements delete /api/sku/:id FR 2.2 -> Delete a SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9e991acc-fb13-4b2d-ac1b-41a8dd083b9d",
                  "parentUUID": "c05a4dd7-cfab-44d0-bdf5-f5409c461c36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9e991acc-fb13-4b2d-ac1b-41a8dd083b9d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5bcfee53-41e8-4075-a9a5-bd6116da8037",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ca704c84-e40c-48b9-8923-d0e592c33267",
                  "parentUUID": "5bcfee53-41e8-4075-a9a5-bd6116da8037",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ca704c84-e40c-48b9-8923-d0e592c33267"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fedec0b9-ec7f-4e5b-af1b-4b73367b3e41",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Testing Functional requirements get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ab64e9cc-4291-458e-b185-70698d678718",
                  "parentUUID": "fedec0b9-ec7f-4e5b-af1b-4b73367b3e41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab64e9cc-4291-458e-b185-70698d678718"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "251f84df-5af1-447e-b3e8-10e6e104d4b8",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0e6b50b2-3956-4b20-95be-1861808aa575",
                  "parentUUID": "251f84df-5af1-447e-b3e8-10e6e104d4b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e6b50b2-3956-4b20-95be-1861808aa575"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c0d0b2fb-5c07-423a-b332-da51310cfb11",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "Testing Functional requirements  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5bf9e186-d1b2-4786-a57d-64f9c66e3422",
                  "parentUUID": "c0d0b2fb-5c07-423a-b332-da51310cfb11",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bf9e186-d1b2-4786-a57d-64f9c66e3422"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9c5b1791-e091-4ecb-9390-d9a211d43431",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4fd56e5d-b1fd-47ce-8ad8-b3414abb4f43",
                  "parentUUID": "9c5b1791-e091-4ecb-9390-d9a211d43431",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4fd56e5d-b1fd-47ce-8ad8-b3414abb4f43"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ec01bfe8-ba2c-40a8-9b4f-845123908771",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "Testing Functional requirements  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "35b364b2-6f88-4095-8d87-caae615d2dc2",
                  "parentUUID": "ec01bfe8-ba2c-40a8-9b4f-845123908771",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "35b364b2-6f88-4095-8d87-caae615d2dc2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "60dc9542-83f5-42dd-9b8e-5e70537980b2",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "Testing Functional requirements Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "40f90a8d-ee52-45e8-bb03-0825f5c4b9b6",
                  "parentUUID": "60dc9542-83f5-42dd-9b8e-5e70537980b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "40f90a8d-ee52-45e8-bb03-0825f5c4b9b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "650eaa03-d34f-44ac-8221-d37a929647bf",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5a63b1d3-6edd-43da-beb9-dda86fd28520",
                  "parentUUID": "650eaa03-d34f-44ac-8221-d37a929647bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a63b1d3-6edd-43da-beb9-dda86fd28520"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "916eb2b4-70c0-43d8-8221-063e4f5db11e",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a1fbab33-52b8-4eb4-ae03-8ddf9a15e792",
                  "parentUUID": "916eb2b4-70c0-43d8-8221-063e4f5db11e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1fbab33-52b8-4eb4-ae03-8ddf9a15e792"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3d1f8a02-3ca0-4879-a864-365824b2c7a1",
              "title": " get /api/positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.3 -> List all positions",
                  "fullTitle": "Testing Functional requirements  get /api/positions FR 3.1.3 -> List all positions",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "31d585dc-fb3a-4da4-be6b-b6c3cb68cb8a",
                  "parentUUID": "3d1f8a02-3ca0-4879-a864-365824b2c7a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31d585dc-fb3a-4da4-be6b-b6c3cb68cb8a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bd0dec68-7331-4e45-8172-e2224b32b574",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "Testing Functional requirements  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "35b8ba35-70fb-4587-9bdc-3c41f1c53656",
                  "parentUUID": "bd0dec68-7331-4e45-8172-e2224b32b574",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "35b8ba35-70fb-4587-9bdc-3c41f1c53656"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cfffb2fb-4c95-4721-964d-c1f005be2ef8",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "e33659b0-3713-4eed-a653-1ae652f5f7a0",
                  "parentUUID": "cfffb2fb-4c95-4721-964d-c1f005be2ef8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e33659b0-3713-4eed-a653-1ae652f5f7a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "740cc030-cf24-4213-9365-0c336adadee2",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "008553af-6fe4-4169-9bcb-840efdfa4ba1",
                  "parentUUID": "740cc030-cf24-4213-9365-0c336adadee2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "008553af-6fe4-4169-9bcb-840efdfa4ba1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7e9241f7-4650-4862-9a5e-ee2babad8a17",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "796d3adc-f391-4288-8de8-0f38d7b37501",
                  "parentUUID": "7e9241f7-4650-4862-9a5e-ee2babad8a17",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "796d3adc-f391-4288-8de8-0f38d7b37501"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d29be230-1356-4575-b7a4-af90838a73ec",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4f0ac28d-fdfb-4457-b09f-d7f415d2ccf0",
                  "parentUUID": "d29be230-1356-4575-b7a4-af90838a73ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f0ac28d-fdfb-4457-b09f-d7f415d2ccf0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c36180cd-2c1d-4d49-b42a-f97b6d3a3bcd",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6e024b44-93dd-4387-bf57-9c6aa1178eb6",
                  "parentUUID": "c36180cd-2c1d-4d49-b42a-f97b6d3a3bcd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6e024b44-93dd-4387-bf57-9c6aa1178eb6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "57a03dbc-606d-4a62-b64b-5841161e2abf",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "93b04c8d-3ff6-43d9-afd1-8ffb0bff350c",
                  "parentUUID": "57a03dbc-606d-4a62-b64b-5841161e2abf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93b04c8d-3ff6-43d9-afd1-8ffb0bff350c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fd2eaf95-8a42-406c-a6ab-650c21e52cd2",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Testing Functional requirements test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "574cd0b2-dacd-403b-b504-00a7f388b82f",
                  "parentUUID": "fd2eaf95-8a42-406c-a6ab-650c21e52cd2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "574cd0b2-dacd-403b-b504-00a7f388b82f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b25464a7-36c7-479a-b874-d7f8943d724c",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Testing Functional requirements Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "1dc4e75c-8b92-4951-877c-ee7ac54b1a93",
                  "parentUUID": "b25464a7-36c7-479a-b874-d7f8943d724c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1dc4e75c-8b92-4951-877c-ee7ac54b1a93"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "35c83758-b916-4a17-998b-1d7e8e0ced44",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "c9020e60-924b-4191-831e-b28669fc3b56",
                  "parentUUID": "35c83758-b916-4a17-998b-1d7e8e0ced44",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9020e60-924b-4191-831e-b28669fc3b56"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cb301a60-bf3e-4d40-b948-229c5a479f58",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "e1e526af-101a-4e8a-8ba0-f3614c7a60e0",
                  "parentUUID": "cb301a60-bf3e-4d40-b948-229c5a479f58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1e526af-101a-4e8a-8ba0-f3614c7a60e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5a20a817-2662-489d-bffe-4748672fad3a",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Testing Functional requirements  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b3655bef-1b71-49be-aaed-3a70d88a013b",
                  "parentUUID": "5a20a817-2662-489d-bffe-4748672fad3a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b3655bef-1b71-49be-aaed-3a70d88a013b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d61baaae-312c-4d8e-acd6-d828bf916d8d",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2d60c338-2e93-4a04-ab8d-01d49754792b",
                  "parentUUID": "d61baaae-312c-4d8e-acd6-d828bf916d8d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2d60c338-2e93-4a04-ab8d-01d49754792b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a40af204-b0b7-45fe-9d8b-96e38183e34b",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "706c3794-dd21-425a-81bd-d2bb56c371b7",
                  "parentUUID": "a40af204-b0b7-45fe-9d8b-96e38183e34b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "706c3794-dd21-425a-81bd-d2bb56c371b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "82a6fa59-692e-49d4-92d6-a656f554044f",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fddb5d9f-49f1-4f41-bc0f-1898670d299d",
                  "parentUUID": "82a6fa59-692e-49d4-92d6-a656f554044f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fddb5d9f-49f1-4f41-bc0f-1898670d299d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c8296e70-16b0-4a48-9da5-f59e115d437e",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "04351f02-3940-4e57-a387-bc0f07f1c717",
                  "parentUUID": "c8296e70-16b0-4a48-9da5-f59e115d437e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "04351f02-3940-4e57-a387-bc0f07f1c717"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "07f94e1c-e3f8-4177-9cfc-672146679816",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "334878df-65ca-4057-818d-6145a3280015",
                  "parentUUID": "07f94e1c-e3f8-4177-9cfc-672146679816",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "334878df-65ca-4057-818d-6145a3280015"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c18b0c7b-8715-425e-af23-92c72cf717df",
              "title": " get /api/users/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.3 -> List all users",
                  "fullTitle": "Testing Functional requirements  get /api/users/ FR 1.3 -> List all users",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4b1690ab-10a1-4e57-8743-1a0233d1a4e1",
                  "parentUUID": "c18b0c7b-8715-425e-af23-92c72cf717df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b1690ab-10a1-4e57-8743-1a0233d1a4e1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bb360170-84d1-4d72-97be-7625037321d0",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cd6263fc-e95b-4c46-9a08-d326b9ff7887",
                  "parentUUID": "bb360170-84d1-4d72-97be-7625037321d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd6263fc-e95b-4c46-9a08-d326b9ff7887"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d1db15d1-209d-4940-9534-e2097fa98ba1",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "10f9d351-19b3-4237-a551-2d06e323d083",
                  "parentUUID": "d1db15d1-209d-4940-9534-e2097fa98ba1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "10f9d351-19b3-4237-a551-2d06e323d083"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1278df54-b322-405b-9dd2-c164ef06c8f9",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Testing Functional requirements  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "33111a0b-2fea-45d4-a3fb-6976cc9671c3",
                  "parentUUID": "1278df54-b322-405b-9dd2-c164ef06c8f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "33111a0b-2fea-45d4-a3fb-6976cc9671c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1485d83e-e58f-4d5e-9c5e-4d948e7e2930",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Testing Functional requirements post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "e0e57e00-5808-4be7-81f9-6990c7a32852",
                  "parentUUID": "1485d83e-e58f-4d5e-9c5e-4d948e7e2930",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e0e57e00-5808-4be7-81f9-6990c7a32852"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2b9c136e-9e56-4a1c-be4f-823ad29485c1",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f1c9d3fc-4b4e-4d69-b994-2f68ce60fa15",
                  "parentUUID": "2b9c136e-9e56-4a1c-be4f-823ad29485c1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f1c9d3fc-4b4e-4d69-b994-2f68ce60fa15"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e9ae4146-0905-47c6-9cd9-3ea2a70e056c",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "dc6f3758-2241-4d5c-b316-4ec3e2116e3c",
                  "parentUUID": "e9ae4146-0905-47c6-9cd9-3ea2a70e056c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc6f3758-2241-4d5c-b316-4ec3e2116e3c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3c96d058-c102-4876-83df-7104f92cfc77",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Testing Functional requirements put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "39848c0a-fb27-4b15-841b-3824bf5c2913",
                  "parentUUID": "3c96d058-c102-4876-83df-7104f92cfc77",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "39848c0a-fb27-4b15-841b-3824bf5c2913"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9f48f3c5-a0bc-4184-aa43-0287f43b4995",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Testing Functional requirements put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "ac162254-8180-4fb3-a327-cf8667c2ff31",
                  "parentUUID": "9f48f3c5-a0bc-4184-aa43-0287f43b4995",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac162254-8180-4fb3-a327-cf8667c2ff31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fe7ea41e-f97a-48a0-9110-90b7929ceb40",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "c59d2730-31ad-4521-b4a3-e6d1a7530aee",
                  "parentUUID": "fe7ea41e-f97a-48a0-9110-90b7929ceb40",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c59d2730-31ad-4521-b4a3-e6d1a7530aee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ee2352df-f13c-4cff-a5b7-6425436faa05",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "4d745c84-d3fb-4180-95d7-dee7addd37fa",
                  "parentUUID": "ee2352df-f13c-4cff-a5b7-6425436faa05",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4d745c84-d3fb-4180-95d7-dee7addd37fa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ac8c7334-9fa5-42fa-b439-1fca6033a061",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Testing Functional requirements removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8f2f0d37-b20b-4fd4-9018-6a97f4af5a8b",
                  "parentUUID": "ac8c7334-9fa5-42fa-b439-1fca6033a061",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f2f0d37-b20b-4fd4-9018-6a97f4af5a8b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8256dc77-0b56-415a-9f0f-5099b8b75d36",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b8d3af18-9436-4e6c-baab-a0aec9d8f0e9",
                  "parentUUID": "8256dc77-0b56-415a-9f0f-5099b8b75d36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8d3af18-9436-4e6c-baab-a0aec9d8f0e9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5f2f53da-3bad-4d6b-8736-33c9971ea0f1",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "25468a22-585b-4176-9907-425d5b84f80c",
                  "parentUUID": "5f2f53da-3bad-4d6b-8736-33c9971ea0f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25468a22-585b-4176-9907-425d5b84f80c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8d863d6f-4b7d-4544-a167-9a5cf764903d",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "19714da1-eb7a-4029-b782-9e7e99356c34",
                  "parentUUID": "8d863d6f-4b7d-4544-a167-9a5cf764903d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19714da1-eb7a-4029-b782-9e7e99356c34"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1f3bf8f8-fc17-4b0f-8893-8d88cc521ee1",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d5565275-9ced-454a-abf4-30637fecc8fd",
                  "parentUUID": "1f3bf8f8-fc17-4b0f-8893-8d88cc521ee1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5565275-9ced-454a-abf4-30637fecc8fd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "28d24dc0-12f7-4c6d-928e-ec1b19f70131",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "08597c55-7b51-412c-a010-1f85915bbd1b",
                  "parentUUID": "28d24dc0-12f7-4c6d-928e-ec1b19f70131",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "08597c55-7b51-412c-a010-1f85915bbd1b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "aa6adfc9-0f62-486c-815b-0793845e5056",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Testing Functional requirements test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7b977b83-c58f-4829-a241-7781006da94d",
                  "parentUUID": "aa6adfc9-0f62-486c-815b-0793845e5056",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b977b83-c58f-4829-a241-7781006da94d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3ff7f14f-e2e5-44f7-b4f8-e3930278ff14",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Testing Functional requirements put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3cd1ca0b-df01-4560-b884-57d43b4e7649",
                  "parentUUID": "3ff7f14f-e2e5-44f7-b4f8-e3930278ff14",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3cd1ca0b-df01-4560-b884-57d43b4e7649"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "075483ff-cc81-469b-9c43-862c11b09b7b",
          "title": "Testing Functional requirements pt2",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "45ffb937-de9f-4f72-a71e-ed004d61e2fc",
              "title": "Test sku CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "4c60df52-8122-4c70-8070-7e401116cca0",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "5bedf9d0-ae69-4571-8f0c-4c968eb69096",
                      "parentUUID": "4c60df52-8122-4c70-8070-7e401116cca0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5bedf9d0-ae69-4571-8f0c-4c968eb69096"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a444f4a7-c385-41e5-9aba-0480f42bf20a",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9ba958be-000b-4691-a939-ee303b35c707",
                      "parentUUID": "a444f4a7-c385-41e5-9aba-0480f42bf20a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9ba958be-000b-4691-a939-ee303b35c707"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "eb3559d6-28f5-49c9-a963-5b4a8cd91215",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1c9ee1d8-2b0d-429c-b9e6-cd027a7932bb",
                      "parentUUID": "eb3559d6-28f5-49c9-a963-5b4a8cd91215",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1c9ee1d8-2b0d-429c-b9e6-cd027a7932bb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "00fbd331-2803-4fa5-8093-261d8020a2be",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "69ac8dd3-4b49-4d8b-b787-877d1ce423de",
                      "parentUUID": "00fbd331-2803-4fa5-8093-261d8020a2be",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "69ac8dd3-4b49-4d8b-b787-877d1ce423de"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ff5c0686-a6b6-46a2-baa4-73d115beafa8",
                  "title": "put /api/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 b -> Modify an existing SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9a3c3356-ca70-47ad-8efc-65330278c44a",
                      "parentUUID": "ff5c0686-a6b6-46a2-baa4-73d115beafa8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9a3c3356-ca70-47ad-8efc-65330278c44a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "682565a4-7e8f-4eee-a93d-3fa0b0d6b5f3",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ae59653f-e916-4197-bc3c-2797e7f8a252",
                      "parentUUID": "682565a4-7e8f-4eee-a93d-3fa0b0d6b5f3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ae59653f-e916-4197-bc3c-2797e7f8a252"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8d6efc2d-da0e-4867-a823-15b44180470c",
                  "title": "put /api/sku/:id/position",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Changing SKU position passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features put /api/sku/:id/position Changing SKU position passing its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID+'/position')\n.send(pos)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a6836776-7f00-43ed-a3d6-d9d6b4b01e29",
                      "parentUUID": "8d6efc2d-da0e-4867-a823-15b44180470c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a6836776-7f00-43ed-a3d6-d9d6b4b01e29"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c622c51e-398d-48ca-ba68-0a11f4a27531",
                  "title": "delete /api/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.2 -> Delete a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features delete /api/sku/:id FR 2.2 -> Delete a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "aa62665b-66ef-4a4c-8a80-9c7152e2e2bd",
                      "parentUUID": "c622c51e-398d-48ca-ba68-0a11f4a27531",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "aa62665b-66ef-4a4c-8a80-9c7152e2e2bd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "289ac527-adf1-4d13-b4f6-e25bcdb2d47a",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2c2bb23e-4ba4-41ab-9a9f-b62e56420b33",
                      "parentUUID": "289ac527-adf1-4d13-b4f6-e25bcdb2d47a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2c2bb23e-4ba4-41ab-9a9f-b62e56420b33"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8c6cd99a-1412-455f-9b9c-b94f40ce9aea",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4532bf2a-8440-4a78-bacb-05c1bc734480",
                      "parentUUID": "8c6cd99a-1412-455f-9b9c-b94f40ce9aea",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4532bf2a-8440-4a78-bacb-05c1bc734480"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4195b329-d40e-4fb1-bdff-8703553326df",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b23d1a59-d783-4027-b874-f4ed1457691a",
                      "parentUUID": "4195b329-d40e-4fb1-bdff-8703553326df",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b23d1a59-d783-4027-b874-f4ed1457691a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b66a9f80-241a-4bbd-8d11-d771b0831942",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "cb4a5240-6b2f-4fcf-be02-a8825e15d7d7",
                      "parentUUID": "b66a9f80-241a-4bbd-8d11-d771b0831942",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cb4a5240-6b2f-4fcf-be02-a8825e15d7d7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4280f45b-bf15-4fb1-83c5-6e9a0d3cf996",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "638ca986-43d7-4c21-9dfb-08986fdb8cbb",
                      "parentUUID": "4280f45b-bf15-4fb1-83c5-6e9a0d3cf996",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "638ca986-43d7-4c21-9dfb-08986fdb8cbb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3fd26d6e-f7b7-4c0e-9122-c5262a8adad3",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a4c8d754-f8da-4b7a-ba8e-6058127b2806",
                      "parentUUID": "3fd26d6e-f7b7-4c0e-9122-c5262a8adad3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a4c8d754-f8da-4b7a-ba8e-6058127b2806"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9b35c63e-c8f7-4639-a68f-c70212996891",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f9803a96-050b-4b46-b51e-e768eb2e7899",
                      "parentUUID": "9b35c63e-c8f7-4639-a68f-c70212996891",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f9803a96-050b-4b46-b51e-e768eb2e7899"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f8385cd0-26d6-494d-bf94-fa20c84e5a8b",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "655bdd71-a358-4b2b-8db7-495b97f87622",
                      "parentUUID": "f8385cd0-26d6-494d-bf94-fa20c84e5a8b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "655bdd71-a358-4b2b-8db7-495b97f87622"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "73a1f60c-0da2-469e-9f70-7ad616ee4c16",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "81a7482a-e945-4e0d-84d7-4894e79f5cc0",
                      "parentUUID": "73a1f60c-0da2-469e-9f70-7ad616ee4c16",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "81a7482a-e945-4e0d-84d7-4894e79f5cc0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "abf83fbc-956f-4aa1-a86a-f1bec46a913b",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6cd8e490-c96f-4250-9226-140c47a5bd00",
                      "parentUUID": "abf83fbc-956f-4aa1-a86a-f1bec46a913b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6cd8e490-c96f-4250-9226-140c47a5bd00"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4b857628-f9ab-4837-b363-25da01551287",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2bcf9f25-e69f-4828-8a67-f4554968e403",
                      "parentUUID": "4b857628-f9ab-4837-b363-25da01551287",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2bcf9f25-e69f-4828-8a67-f4554968e403"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "43f0cada-a63b-4239-bc85-95df294541a6",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5f098649-22b9-4573-97de-c9ac4621b0bb",
                      "parentUUID": "43f0cada-a63b-4239-bc85-95df294541a6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5f098649-22b9-4573-97de-c9ac4621b0bb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6779b3d8-6823-4440-9c81-1ed1e0fcbff2",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7ca81017-29c5-444a-ad07-8021e949817b",
                      "parentUUID": "6779b3d8-6823-4440-9c81-1ed1e0fcbff2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7ca81017-29c5-444a-ad07-8021e949817b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6dea3c1b-2831-4b37-9dfe-a3f16f72eba3",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "95d1d4f1-0767-468b-92c3-5bcde7d3b3e9",
                      "parentUUID": "6dea3c1b-2831-4b37-9dfe-a3f16f72eba3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "95d1d4f1-0767-468b-92c3-5bcde7d3b3e9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b28a96a7-9144-4b08-8408-dd34881ae342",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "54e1bfec-f6e2-4c34-ad17-dd9a0c8672e7",
                      "parentUUID": "b28a96a7-9144-4b08-8408-dd34881ae342",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "54e1bfec-f6e2-4c34-ad17-dd9a0c8672e7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0c1bdcbf-5a57-4809-8105-be52c2b87dfb",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fc91b6ac-e435-42e1-ba84-41c821a98b13",
                      "parentUUID": "0c1bdcbf-5a57-4809-8105-be52c2b87dfb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fc91b6ac-e435-42e1-ba84-41c821a98b13"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b8a808f7-01f9-4a01-b6b5-ee48455699d5",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e247214f-5742-4a1d-8308-3d0b87f492b1",
                      "parentUUID": "b8a808f7-01f9-4a01-b6b5-ee48455699d5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e247214f-5742-4a1d-8308-3d0b87f492b1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c8f1a2b5-6d91-46f9-be84-25cd32ad319e",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4f5cbe1a-d682-45b4-a1d0-a423974171e8",
                      "parentUUID": "c8f1a2b5-6d91-46f9-be84-25cd32ad319e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4f5cbe1a-d682-45b4-a1d0-a423974171e8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "86f8b0a3-3d25-45c8-8279-42aff3ff3055",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1c9d7996-e07b-48ba-a157-c51a7baaf85d",
                      "parentUUID": "86f8b0a3-3d25-45c8-8279-42aff3ff3055",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1c9d7996-e07b-48ba-a157-c51a7baaf85d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "57e8e4ac-46a7-4067-976a-90e20f0c6aed",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "52715ec6-fb3f-4abd-9104-5a540ed77baa",
                      "parentUUID": "57e8e4ac-46a7-4067-976a-90e20f0c6aed",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "52715ec6-fb3f-4abd-9104-5a540ed77baa"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "35d7e3fd-acf1-42dc-8e10-1fec40783416",
              "title": "Test skuitem CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "6a092a47-b368-47b6-af4a-0b7dd7789419",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "ffaae4ae-c5e0-4f5e-a699-7b7562f87ec0",
                      "parentUUID": "6a092a47-b368-47b6-af4a-0b7dd7789419",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ffaae4ae-c5e0-4f5e-a699-7b7562f87ec0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "56db96d2-5c54-4eb6-88d0-017ffc25de36",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "079c5c30-ba96-44e0-a179-43d98c9a7e50",
                      "parentUUID": "56db96d2-5c54-4eb6-88d0-017ffc25de36",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "079c5c30-ba96-44e0-a179-43d98c9a7e50"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2770fba2-3396-4aa4-8e02-4ced19bf21c3",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "cd3e5034-8798-43a0-acaf-b28582ee19d1",
                      "parentUUID": "2770fba2-3396-4aa4-8e02-4ced19bf21c3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cd3e5034-8798-43a0-acaf-b28582ee19d1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b8aa808d-be13-4a52-a0cb-959578ed9694",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "53d98b75-c06a-4d5a-967f-65298076c16b",
                      "parentUUID": "b8aa808d-be13-4a52-a0cb-959578ed9694",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "53d98b75-c06a-4d5a-967f-65298076c16b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7ac53dc0-95c8-404b-a09c-cfef6bf57002",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b8682317-b38d-4d2b-98af-f0de2659a179",
                      "parentUUID": "7ac53dc0-95c8-404b-a09c-cfef6bf57002",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b8682317-b38d-4d2b-98af-f0de2659a179"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ccaed77e-0986-4495-a01c-a6f7ed992b9c",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "165af721-6dba-4302-8288-40eea674f194",
                      "parentUUID": "ccaed77e-0986-4495-a01c-a6f7ed992b9c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "165af721-6dba-4302-8288-40eea674f194"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e04790cf-9e49-4485-8199-629d0a19e408",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9be15115-0b0d-471e-8cd9-6df32a14fc48",
                      "parentUUID": "e04790cf-9e49-4485-8199-629d0a19e408",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9be15115-0b0d-471e-8cd9-6df32a14fc48"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ecf8b14d-9a4c-4b99-9a81-542dc2251fe6",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1fa1d078-0099-4d06-bcdd-919208ab528a",
                      "parentUUID": "ecf8b14d-9a4c-4b99-9a81-542dc2251fe6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1fa1d078-0099-4d06-bcdd-919208ab528a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fb4c2e29-2f53-4711-a846-53850c8835bd",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fc497393-b181-47d1-a6c0-2a488484b454",
                      "parentUUID": "fb4c2e29-2f53-4711-a846-53850c8835bd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fc497393-b181-47d1-a6c0-2a488484b454"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0550244b-024e-4055-b5fd-141d36dc707b",
                  "title": "get /api/skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2dfa7edb-9a9a-43e4-a9a8-850aeaedbdc5",
                      "parentUUID": "0550244b-024e-4055-b5fd-141d36dc707b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2dfa7edb-9a9a-43e4-a9a8-850aeaedbdc5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a64d9624-50c0-487d-8deb-7bd59774bd21",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a048cbb4-b7ec-4247-82f3-c801836e957c",
                      "parentUUID": "a64d9624-50c0-487d-8deb-7bd59774bd21",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a048cbb4-b7ec-4247-82f3-c801836e957c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cbc41a16-8ddc-488b-95b1-3ba8726aba4e",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3ceebec3-b264-4ec7-ac8e-b7d534c7cbe9",
                      "parentUUID": "cbc41a16-8ddc-488b-95b1-3ba8726aba4e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3ceebec3-b264-4ec7-ac8e-b7d534c7cbe9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "88e3993a-9aef-4228-b62a-cc7c6bcb4399",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c1a1178c-e1dc-4b06-8e66-353aea955084",
                      "parentUUID": "88e3993a-9aef-4228-b62a-cc7c6bcb4399",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c1a1178c-e1dc-4b06-8e66-353aea955084"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f730e565-2044-4754-8a83-70ca7c69b505",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "68848e3c-b0ac-46d6-bb72-d48f57490eb9",
                      "parentUUID": "f730e565-2044-4754-8a83-70ca7c69b505",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "68848e3c-b0ac-46d6-bb72-d48f57490eb9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "82871793-90c3-4406-ab3a-68a91155233b",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "a28c9b11-4525-4367-81a7-333517916da7",
                      "parentUUID": "82871793-90c3-4406-ab3a-68a91155233b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a28c9b11-4525-4367-81a7-333517916da7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7fd6d63d-c823-4552-8f92-fd16673e7bac",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "00ef6be0-5b8e-4b5f-9c4f-db49c93cec7a",
                      "parentUUID": "7fd6d63d-c823-4552-8f92-fd16673e7bac",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "00ef6be0-5b8e-4b5f-9c4f-db49c93cec7a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "518857a6-3e94-4e2c-93b1-ac3867b1db82",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "75af36b6-cb1b-4442-b003-87a5c9d3280c",
                      "parentUUID": "518857a6-3e94-4e2c-93b1-ac3867b1db82",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "75af36b6-cb1b-4442-b003-87a5c9d3280c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "881345b4-758e-4134-92c1-363037c6eacf",
                  "title": "get /api/skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4613de17-795b-4989-814c-83cd8bbe2cbf",
                      "parentUUID": "881345b4-758e-4134-92c1-363037c6eacf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4613de17-795b-4989-814c-83cd8bbe2cbf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "33213790-e70e-4329-be6e-aa4e3ee323af",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "829d95b3-6efd-4c07-9456-9abd04c51a75",
                      "parentUUID": "33213790-e70e-4329-be6e-aa4e3ee323af",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "829d95b3-6efd-4c07-9456-9abd04c51a75"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e2cdfe79-7e35-480a-bd74-e943ce164965",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ae813dc0-c677-440b-9c8d-634025fd5c07",
                      "parentUUID": "e2cdfe79-7e35-480a-bd74-e943ce164965",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ae813dc0-c677-440b-9c8d-634025fd5c07"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1689761f-9dfb-42ef-abd9-6136281b9fc7",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9ae99d4b-f8bf-4e5f-a0db-aca1b2fff037",
                      "parentUUID": "1689761f-9dfb-42ef-abd9-6136281b9fc7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9ae99d4b-f8bf-4e5f-a0db-aca1b2fff037"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ca2b83a6-05b5-443f-be35-6e0fbf684113",
              "title": "test positions CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "86adb905-f260-4a22-ab84-5f217ba9fa02",
                  "title": "Removing all Positions",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Positions",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features Removing all Positions Getting Positions",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "ff53d1d2-5b01-40bb-b74c-3f63fc016800",
                      "parentUUID": "86adb905-f260-4a22-ab84-5f217ba9fa02",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ff53d1d2-5b01-40bb-b74c-3f63fc016800"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b2ec5223-2b7e-499a-8792-9ff01abd7072",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1ceb1e45-5adc-47a8-933b-51bdc27e052a",
                      "parentUUID": "b2ec5223-2b7e-499a-8792-9ff01abd7072",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1ceb1e45-5adc-47a8-933b-51bdc27e052a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7ac5a7ea-bc7e-44dd-bb84-64afac401745",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fbc3a12c-666f-4e19-be75-e2af58d4153b",
                      "parentUUID": "7ac5a7ea-bc7e-44dd-bb84-64afac401745",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fbc3a12c-666f-4e19-be75-e2af58d4153b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b98aee86-e063-4a15-b3b0-285c99e3480d",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "129c2dec-6f06-45d8-9030-427f8d98d806",
                      "parentUUID": "b98aee86-e063-4a15-b3b0-285c99e3480d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "129c2dec-6f06-45d8-9030-427f8d98d806"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "58af30dc-bfed-4113-b445-b273e0663156",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "287ec78f-d86d-4be3-a8d8-8cfc4f3294ae",
                      "parentUUID": "58af30dc-bfed-4113-b445-b273e0663156",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "287ec78f-d86d-4be3-a8d8-8cfc4f3294ae"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "238aa7be-5e42-4f5a-abe1-934c8830a2ec",
                  "title": " get /api/positions",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.3 -> List all positions",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  get /api/positions FR 3.1.3 -> List all positions",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "6c2e4661-f32e-40a7-a84f-b8fc13f57b23",
                      "parentUUID": "238aa7be-5e42-4f5a-abe1-934c8830a2ec",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6c2e4661-f32e-40a7-a84f-b8fc13f57b23"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b7d9bcd9-ec93-443c-991e-c2768ee73ebf",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8ecf9a25-79ec-4f65-b683-b707b010b353",
                      "parentUUID": "b7d9bcd9-ec93-443c-991e-c2768ee73ebf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8ecf9a25-79ec-4f65-b683-b707b010b353"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a33d8d1d-b77f-4093-b38a-a89a8342c399",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8bb24f18-2e6a-4b8f-b93a-62930d982d85",
                      "parentUUID": "a33d8d1d-b77f-4093-b38a-a89a8342c399",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8bb24f18-2e6a-4b8f-b93a-62930d982d85"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8c6b67b7-81cc-4abb-871c-6742982768e8",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c42a8a2d-736f-45bd-ab58-a56738dd9b25",
                      "parentUUID": "8c6b67b7-81cc-4abb-871c-6742982768e8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c42a8a2d-736f-45bd-ab58-a56738dd9b25"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ae750d0c-3ffc-45ea-bb4a-105eff99a081",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0a756792-8113-4714-8417-fdfcbe43a343",
                      "parentUUID": "ae750d0c-3ffc-45ea-bb4a-105eff99a081",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0a756792-8113-4714-8417-fdfcbe43a343"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c598f6ba-5db9-4dc2-a0e3-40edec2c16d1",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c1da8c4a-b5d4-4304-9142-8360cc869075",
                      "parentUUID": "c598f6ba-5db9-4dc2-a0e3-40edec2c16d1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c1da8c4a-b5d4-4304-9142-8360cc869075"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5055e674-7748-4460-9183-d1931bc35aa8",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "cf1bb88b-15d8-45df-9f4d-1a7331b27d96",
                      "parentUUID": "5055e674-7748-4460-9183-d1931bc35aa8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cf1bb88b-15d8-45df-9f4d-1a7331b27d96"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1ac8dd30-2f79-4be6-aa33-ca440b5979e2",
                  "title": " delete /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.2 -> Delete a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f1a976ef-2403-4c10-9271-8cf847c4bc1f",
                      "parentUUID": "1ac8dd30-2f79-4be6-aa33-ca440b5979e2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f1a976ef-2403-4c10-9271-8cf847c4bc1f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fac75d1f-f54c-49d1-ab79-cd365843fb0a",
                  "title": " delete /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.2 -> Delete a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1f999c5f-6557-469d-ab06-f9b7c33c4779",
                      "parentUUID": "fac75d1f-f54c-49d1-ab79-cd365843fb0a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1f999c5f-6557-469d-ab06-f9b7c33c4779"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "867cfc4b-2831-48cd-aa0a-7aeac8089d65",
              "title": "Test TestDescriptor CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "05c2dd03-1dd9-4672-a734-5ff2716acf52",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "40c600e7-0ebe-41fa-98b9-c8749b5a880a",
                      "parentUUID": "05c2dd03-1dd9-4672-a734-5ff2716acf52",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "40c600e7-0ebe-41fa-98b9-c8749b5a880a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9f615b32-5694-4e98-9ecb-7a3d22f651f6",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "f20b2790-b75d-42d6-9dfc-a566216b86e2",
                      "parentUUID": "9f615b32-5694-4e98-9ecb-7a3d22f651f6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f20b2790-b75d-42d6-9dfc-a566216b86e2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bd578c79-ce5d-41c1-a34c-2129ca046fd6",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "ccb3bbc2-446d-46db-ba9e-75ef9b1fbd41",
                      "parentUUID": "bd578c79-ce5d-41c1-a34c-2129ca046fd6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ccb3bbc2-446d-46db-ba9e-75ef9b1fbd41"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f20320fa-526e-43b7-b1a1-ea0b4ac0df51",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "77adc4cf-4539-437a-8c6d-105e1f0aaf19",
                      "parentUUID": "f20320fa-526e-43b7-b1a1-ea0b4ac0df51",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "77adc4cf-4539-437a-8c6d-105e1f0aaf19"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "af52e88a-021b-4650-bc88-9eb8108a4282",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8da08c5f-315c-4fbe-ba1d-0ef37b5d6b74",
                      "parentUUID": "af52e88a-021b-4650-bc88-9eb8108a4282",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8da08c5f-315c-4fbe-ba1d-0ef37b5d6b74"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e1a84b28-7562-4f6a-a71c-cbe6c0fd826d",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fd91793e-97d7-4564-9a9d-dfb4639c7cea",
                      "parentUUID": "e1a84b28-7562-4f6a-a71c-cbe6c0fd826d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fd91793e-97d7-4564-9a9d-dfb4639c7cea"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "37bd70be-4aa8-4f56-82b5-44fd65fd7c4a",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f43008bd-0eab-4917-93b2-171250930a4b",
                      "parentUUID": "37bd70be-4aa8-4f56-82b5-44fd65fd7c4a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f43008bd-0eab-4917-93b2-171250930a4b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8875f273-927f-4046-a51b-d534ef6dbfe3",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f1deed5a-669e-4886-b589-52fe63ac6742",
                      "parentUUID": "8875f273-927f-4046-a51b-d534ef6dbfe3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f1deed5a-669e-4886-b589-52fe63ac6742"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "301d0c1e-70c7-459b-9a69-1aa4358d5aca",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3f45613f-e0dc-498a-9755-cc4589e9699d",
                      "parentUUID": "301d0c1e-70c7-459b-9a69-1aa4358d5aca",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3f45613f-e0dc-498a-9755-cc4589e9699d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1e492362-a97d-441d-9f2d-d26164b400d9",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4d79ceb6-b076-44d9-bfd8-c54726973691",
                      "parentUUID": "1e492362-a97d-441d-9f2d-d26164b400d9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4d79ceb6-b076-44d9-bfd8-c54726973691"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "062a092f-0c33-4b8b-81ff-6fd2f6d0d1bc",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "08463371-53d5-4d91-9760-4f0c966d9a15",
                      "parentUUID": "062a092f-0c33-4b8b-81ff-6fd2f6d0d1bc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "08463371-53d5-4d91-9760-4f0c966d9a15"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bb39d8cf-2975-449d-bc92-5671ea2dcf05",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0edc1534-249e-4c4f-bc7e-3639dafcf818",
                      "parentUUID": "bb39d8cf-2975-449d-bc92-5671ea2dcf05",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0edc1534-249e-4c4f-bc7e-3639dafcf818"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5f42651e-aba6-4408-8816-e5673b9917d7",
                  "title": "test post test descriptor with not exixsting idsku",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a bad test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test post test descriptor with not exixsting idsku Creating a bad test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/testDescriptor')\n.send()\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ffa107de-4b03-440d-b2ee-57b8ae3cdadc",
                      "parentUUID": "5f42651e-aba6-4408-8816-e5673b9917d7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ffa107de-4b03-440d-b2ee-57b8ae3cdadc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5a99ce62-4c5c-43f6-919b-62ad6fb8392b",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "236bcee5-c1c5-40ee-b0ed-93f74832c801",
                      "parentUUID": "5a99ce62-4c5c-43f6-919b-62ad6fb8392b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "236bcee5-c1c5-40ee-b0ed-93f74832c801"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e3193738-adcd-420f-bed9-0ccc3e933659",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1fc6432e-ba41-45fa-9149-caf14d9ec308",
                      "parentUUID": "e3193738-adcd-420f-bed9-0ccc3e933659",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1fc6432e-ba41-45fa-9149-caf14d9ec308"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b8e24442-4e50-482c-a040-2a587cdf8756",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "5160776d-970d-420b-b1a0-a6a6c501f30a",
                      "parentUUID": "b8e24442-4e50-482c-a040-2a587cdf8756",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5160776d-970d-420b-b1a0-a6a6c501f30a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4324523c-f0bb-465f-8ff1-ca5570e36e2a",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "7fd7c6b8-5a4c-4fd9-a824-e6dba9cacebe",
                      "parentUUID": "4324523c-f0bb-465f-8ff1-ca5570e36e2a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7fd7c6b8-5a4c-4fd9-a824-e6dba9cacebe"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ee29eaa5-5178-4c1e-b5c1-fed4f7991e9d",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "283b146c-4f92-4a0e-8ba4-ccb6eace56e6",
                      "parentUUID": "ee29eaa5-5178-4c1e-b5c1-fed4f7991e9d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "283b146c-4f92-4a0e-8ba4-ccb6eace56e6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4898ced8-be5f-421d-a52c-78a74cb9a4df",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "12d835c9-4a2f-4109-a48c-32a1bb1f978d",
                      "parentUUID": "4898ced8-be5f-421d-a52c-78a74cb9a4df",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "12d835c9-4a2f-4109-a48c-32a1bb1f978d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e444b551-c32e-4179-8c21-86a69d84d694",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "2c21ced7-55ab-462d-92cf-411546cfcded",
                      "parentUUID": "e444b551-c32e-4179-8c21-86a69d84d694",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2c21ced7-55ab-462d-92cf-411546cfcded"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fc0be681-850c-4ad8-bc35-aabf20f3dd22",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3057990a-3dde-4382-85e9-3994e662e559",
                      "parentUUID": "fc0be681-850c-4ad8-bc35-aabf20f3dd22",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3057990a-3dde-4382-85e9-3994e662e559"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "789a0503-3e24-4460-9bdb-178a450855b3",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c229db20-00a0-46cd-9d31-d8435b3e6ada",
                      "parentUUID": "789a0503-3e24-4460-9bdb-178a450855b3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c229db20-00a0-46cd-9d31-d8435b3e6ada"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2af14b8a-8861-4424-88ef-402a9dcf9503",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    res.body.should.be.a('array');\n    agent.put('/api/testDescriptor/'+10000)\n    .send()\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));               \n});",
                      "err": {},
                      "uuid": "da25c905-4d95-4285-b2c4-2a1675cee039",
                      "parentUUID": "2af14b8a-8861-4424-88ef-402a9dcf9503",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "da25c905-4d95-4285-b2c4-2a1675cee039"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a74454bf-936b-4505-81bf-9f35c637ca7b",
                  "title": "delete /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c0089479-f3a4-4f54-95f5-128225778708",
                      "parentUUID": "a74454bf-936b-4505-81bf-9f35c637ca7b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c0089479-f3a4-4f54-95f5-128225778708"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "dc0f1b53-e147-439c-a8da-607a0049b5ab",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6f39c14a-6222-4b7a-aa6d-e731e0366d9d",
                      "parentUUID": "dc0f1b53-e147-439c-a8da-607a0049b5ab",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6f39c14a-6222-4b7a-aa6d-e731e0366d9d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3deec5fd-89c6-4fd1-aa57-06353b188ba4",
                  "title": "delete /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0ae48559-e1fa-460d-8df4-ccc9fa0be228",
                      "parentUUID": "3deec5fd-89c6-4fd1-aa57-06353b188ba4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0ae48559-e1fa-460d-8df4-ccc9fa0be228"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9110df28-9524-42fc-8cfb-2e541c010acf",
              "title": "Test TestResult CRUD",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "69c93349-53ef-47b3-a81f-7f744de8e527",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "68bf4296-1e26-4bdb-8420-019832bdf236",
                      "parentUUID": "69c93349-53ef-47b3-a81f-7f744de8e527",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "68bf4296-1e26-4bdb-8420-019832bdf236"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e525e329-ac14-437b-b777-eaefa29b79a3",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "864247ad-b69a-43cc-816d-8bdfc00a1d5d",
                      "parentUUID": "e525e329-ac14-437b-b777-eaefa29b79a3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "864247ad-b69a-43cc-816d-8bdfc00a1d5d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3384df72-4625-4330-bc68-6e184b5f2027",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "25b605c9-7630-461b-9d36-eb13ed8f5e10",
                      "parentUUID": "3384df72-4625-4330-bc68-6e184b5f2027",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "25b605c9-7630-461b-9d36-eb13ed8f5e10"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bc3d33b1-ae34-45a4-823c-170260434dd5",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "dae1aa50-c6fb-4370-8240-8a54c14a5ac1",
                      "parentUUID": "bc3d33b1-ae34-45a4-823c-170260434dd5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "dae1aa50-c6fb-4370-8240-8a54c14a5ac1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5b92c568-ce36-47e9-9c30-2de88647f955",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b33dc18a-c192-43e5-be81-1df14c2cc302",
                      "parentUUID": "5b92c568-ce36-47e9-9c30-2de88647f955",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b33dc18a-c192-43e5-be81-1df14c2cc302"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "04c3c668-dfaa-4f8c-b3fc-99c7f50f1b03",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "da21ef55-76a2-46ad-9fec-30c7de386ba3",
                      "parentUUID": "04c3c668-dfaa-4f8c-b3fc-99c7f50f1b03",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "da21ef55-76a2-46ad-9fec-30c7de386ba3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d42de348-5271-4841-bf37-6f27b2b89739",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0ae5b7da-1310-4d94-b52c-44a79f8bc29f",
                      "parentUUID": "d42de348-5271-4841-bf37-6f27b2b89739",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0ae5b7da-1310-4d94-b52c-44a79f8bc29f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "50887eb4-a1ca-4117-a300-8c337e54c6e9",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a486dfe5-cec3-4188-9d9a-c4721c0235a7",
                      "parentUUID": "50887eb4-a1ca-4117-a300-8c337e54c6e9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a486dfe5-cec3-4188-9d9a-c4721c0235a7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "915895fe-7eb7-4714-bf69-9393a2af303e",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e1ea6460-5ff5-43f5-b5fb-6f1fed26f6c1",
                      "parentUUID": "915895fe-7eb7-4714-bf69-9393a2af303e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e1ea6460-5ff5-43f5-b5fb-6f1fed26f6c1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2e2995a6-1c6c-48c1-8a61-195fd8e80048",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d0cefe22-4d61-4fc5-a8be-8552daa0db90",
                      "parentUUID": "2e2995a6-1c6c-48c1-8a61-195fd8e80048",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d0cefe22-4d61-4fc5-a8be-8552daa0db90"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cf8df7ba-df48-47d0-9663-f1dc42c3b1a1",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "084df23e-3e1e-4c1b-91d5-49e4e7650830",
                      "parentUUID": "cf8df7ba-df48-47d0-9663-f1dc42c3b1a1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "084df23e-3e1e-4c1b-91d5-49e4e7650830"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "081afa06-a52b-4f6e-b8a7-41354838e710",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c438d6b1-ae7c-4a7c-b7f3-cc30033cb4c5",
                      "parentUUID": "081afa06-a52b-4f6e-b8a7-41354838e710",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c438d6b1-ae7c-4a7c-b7f3-cc30033cb4c5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8206f67f-7086-48b2-ab11-e1576c335a2c",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.1 -> Add a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult FR 3.2.1 -> Add a quality test",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idtds = ids.getIdTestDescriptor();\nlet testResult = newTestResult(mytr.rfid, idtds[mytr.idTestDescriptor], mytr.Date, mytr.Result);\n//console.log(testResult);\nagent.post('/api/skuitems/testResult')\n.send(testResult)\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f766e3ce-07a3-4be6-ac82-b3c188ac83f1",
                      "parentUUID": "8206f67f-7086-48b2-ab11-e1576c335a2c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f766e3ce-07a3-4be6-ac82-b3c188ac83f1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "30a25bed-219f-4319-862f-e9373f9678c0",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creates a new test Result for a certain sku item defined by RFID",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "b1d12758-4373-46e4-9563-c8b792b7348f",
                      "parentUUID": "30a25bed-219f-4319-862f-e9373f9678c0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b1d12758-4373-46e4-9563-c8b792b7348f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f2caed58-cc06-4f3f-9f92-a1aaeb497cc9",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creates a new test Result for a certain sku item defined by RFID",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "573e29bf-7723-4f99-aabb-d516ea2175af",
                      "parentUUID": "f2caed58-cc06-4f3f-9f92-a1aaeb497cc9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "573e29bf-7723-4f99-aabb-d516ea2175af"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7f1e89b8-f2da-40ff-8d26-bc31fcd267f8",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "89f363a6-3ad1-493f-bf47-fd2b0d947e97",
                      "parentUUID": "7f1e89b8-f2da-40ff-8d26-bc31fcd267f8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "89f363a6-3ad1-493f-bf47-fd2b0d947e97"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "54223124-f6c3-4276-9a02-0cb5ab32fa61",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "db349b21-b5c0-4981-8835-a694161dc309",
                      "parentUUID": "54223124-f6c3-4276-9a02-0cb5ab32fa61",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "db349b21-b5c0-4981-8835-a694161dc309"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9cab3149-6a99-408d-9b9f-37265c49d29a",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7549e875-2cac-4528-9e1d-2e2175a31b9d",
                      "parentUUID": "9cab3149-6a99-408d-9b9f-37265c49d29a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7549e875-2cac-4528-9e1d-2e2175a31b9d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "17fcd08a-9e9a-47de-8b45-adee4e4a6b3c",
                  "title": " get /api/skuitems/:rfid/testResults/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get a specific test result with the rfid and id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults/:id Get a specific test result with the rfid and id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    //console.log(res.body[0]);\n    agent.get('/api/skuitems/'+rfid+'/testResults/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "e24016e1-1605-48dc-9270-44fe955010f2",
                      "parentUUID": "17fcd08a-9e9a-47de-8b45-adee4e4a6b3c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e24016e1-1605-48dc-9270-44fe955010f2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a4d903a5-90f0-4965-92d7-d3eab7370430",
                  "title": " get /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get a specific test result with the rfid and id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResult/:id Get a specific test result with the rfid and id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let alltdids = ids.getIdTestDescriptor();\n    console.log(alltdids);\n    agent.get('/api/skuitems/'+rfid+'/testResult/'+alltdids[0])\n    .then(function(res2){\n        console.log(res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "9d2874b4-68f0-4ebf-a54f-9a67c7fdbf4d",
                      "parentUUID": "a4d903a5-90f0-4965-92d7-d3eab7370430",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9d2874b4-68f0-4ebf-a54f-9a67c7fdbf4d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "44bea4e2-981f-45fd-a20e-12e3cda07963",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.2 -> Modify a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id FR 3.2.2 -> Modify a quality test",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    console.log(\"this is it\", res.body);\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        console.log(\"I'm heeeeereeee\", res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "6ac9929f-08c4-4e03-8222-463136dc91d8",
                      "parentUUID": "44bea4e2-981f-45fd-a20e-12e3cda07963",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6ac9929f-08c4-4e03-8222-463136dc91d8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b009d19c-9b4f-4f79-9bfe-ba35a34e6b15",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a test results given its rfid and id and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "8f7b42e9-c1f5-4092-b6a6-a363f922636e",
                      "parentUUID": "b009d19c-9b4f-4f79-9bfe-ba35a34e6b15",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8f7b42e9-c1f5-4092-b6a6-a363f922636e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "37fa1a83-89f7-4be8-bf3b-f94278c6a4d3",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a test results given its rfid and id and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "0fb63238-ff1f-4ac1-baba-3df4027896eb",
                      "parentUUID": "37fa1a83-89f7-4be8-bf3b-f94278c6a4d3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0fb63238-ff1f-4ac1-baba-3df4027896eb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "38660a71-fb1c-4948-bc03-dede7bd7ecb8",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6026c81d-d9c7-49eb-8228-edd779391abd",
                      "parentUUID": "38660a71-fb1c-4948-bc03-dede7bd7ecb8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6026c81d-d9c7-49eb-8228-edd779391abd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "903d4083-58ab-475f-aec2-63a8c09185ce",
                  "title": " delete /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.3 -> Delete a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  delete /api/skuitems/:rfid/testResult/:id FR 3.2.3 -> Delete a quality test",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    // console.log(res.body);\n    agent.delete('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "580cd5a7-5cc2-4d27-9764-667b58e014f9",
                      "parentUUID": "903d4083-58ab-475f-aec2-63a8c09185ce",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "580cd5a7-5cc2-4d27-9764-667b58e014f9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cb21469b-a2ea-4f52-a239-7807997fecf1",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "412d9486-6880-45a9-bcf8-4c97a2c3b7f8",
                      "parentUUID": "cb21469b-a2ea-4f52-a239-7807997fecf1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "412d9486-6880-45a9-bcf8-4c97a2c3b7f8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8212a3c5-51d6-4a64-83cd-99ab59c7f48a",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "4bab6dd5-02f4-4865-8163-3b3483310b28",
                      "parentUUID": "8212a3c5-51d6-4a64-83cd-99ab59c7f48a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4bab6dd5-02f4-4865-8163-3b3483310b28"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0f7d518f-7fc7-43f7-b5e3-d5748b7eaa11",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "456e11e1-206e-4d96-b657-36c406168c2a",
                      "parentUUID": "0f7d518f-7fc7-43f7-b5e3-d5748b7eaa11",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "456e11e1-206e-4d96-b657-36c406168c2a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0ad5576b-30a7-43cb-b332-bcccfdb92adc",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0fba9a17-4758-4a98-a1cc-7548cb45cb99",
                      "parentUUID": "0ad5576b-30a7-43cb-b332-bcccfdb92adc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0fba9a17-4758-4a98-a1cc-7548cb45cb99"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3e03f037-6475-4a1d-b35d-d950d7470fc0",
              "title": "Test user CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "2a0adc6b-8bce-4086-b11d-9f6b64ec3c6d",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "71b4ad98-45de-4425-b5cd-477d47933480",
                      "parentUUID": "2a0adc6b-8bce-4086-b11d-9f6b64ec3c6d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "71b4ad98-45de-4425-b5cd-477d47933480"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e0f98020-88c9-41ff-b66f-bdf15002d913",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2639b1f4-eab5-4183-bb36-41f8313616bf",
                      "parentUUID": "e0f98020-88c9-41ff-b66f-bdf15002d913",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2639b1f4-eab5-4183-bb36-41f8313616bf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f8995edc-b9da-40e7-8815-dce04601df1a",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "913a6fdc-6f06-40de-b9df-8dbea2880263",
                      "parentUUID": "f8995edc-b9da-40e7-8815-dce04601df1a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "913a6fdc-6f06-40de-b9df-8dbea2880263"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6443129a-6701-48cd-9b4b-06a743319e9a",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3359dcd2-a4b7-434a-8a81-85e1f0efad1a",
                      "parentUUID": "6443129a-6701-48cd-9b4b-06a743319e9a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3359dcd2-a4b7-434a-8a81-85e1f0efad1a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5393fba8-d7c0-4274-a5a5-2fb4ccb50060",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 59,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d90fcfb9-1ec2-4434-998e-95027272012a",
                      "parentUUID": "5393fba8-d7c0-4274-a5a5-2fb4ccb50060",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d90fcfb9-1ec2-4434-998e-95027272012a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 59,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7c312325-8855-4a88-ab02-ef0ba786805b",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "46711d61-2a71-4c11-adb3-31437e7efbcd",
                      "parentUUID": "7c312325-8855-4a88-ab02-ef0ba786805b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "46711d61-2a71-4c11-adb3-31437e7efbcd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "28d04962-9905-432c-9d40-81ba5aebe23c",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "76ec76f4-9b08-43df-afcf-6485c76a5c4e",
                      "parentUUID": "28d04962-9905-432c-9d40-81ba5aebe23c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "76ec76f4-9b08-43df-afcf-6485c76a5c4e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "64c827d2-c76b-4f71-b2e9-20b2bb0150d5",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4766c31e-50b4-405f-a87e-8ab12509a60c",
                      "parentUUID": "64c827d2-c76b-4f71-b2e9-20b2bb0150d5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4766c31e-50b4-405f-a87e-8ab12509a60c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "03c1e90c-f1be-4bb4-9801-4c797a7ee6a1",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "50cfe240-5d71-4ad9-8d87-ac98fe7f3d2d",
                      "parentUUID": "03c1e90c-f1be-4bb4-9801-4c797a7ee6a1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "50cfe240-5d71-4ad9-8d87-ac98fe7f3d2d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a2aed835-d839-4046-bdc4-cb7da46534f4",
              "title": "Test RestockOrder CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "b5d9d752-dc4c-4924-a882-89f8386a3005",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "6c14c269-c5bc-4a9e-8f1a-f629f76dbb6c",
                      "parentUUID": "b5d9d752-dc4c-4924-a882-89f8386a3005",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6c14c269-c5bc-4a9e-8f1a-f629f76dbb6c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ac0cf3f5-5384-4272-8122-4a54ab63f24f",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "7eeb1d2e-dd93-405f-b944-480c05bccb40",
                      "parentUUID": "ac0cf3f5-5384-4272-8122-4a54ab63f24f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7eeb1d2e-dd93-405f-b944-480c05bccb40"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5def1a70-547b-4969-9de4-650942920da9",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "39840f97-9ce9-4fc6-8d79-19ed8d576199",
                      "parentUUID": "5def1a70-547b-4969-9de4-650942920da9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "39840f97-9ce9-4fc6-8d79-19ed8d576199"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a64c2cc6-ee00-4d85-8674-8773a19dc7cc",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b3c5eab1-7823-421f-9353-80ad9c146b75",
                      "parentUUID": "a64c2cc6-ee00-4d85-8674-8773a19dc7cc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b3c5eab1-7823-421f-9353-80ad9c146b75"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f02b7b68-01d7-4d1b-be1d-61d5d81094ba",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a7ae893d-a2f4-497c-ac26-580724580c41",
                      "parentUUID": "f02b7b68-01d7-4d1b-be1d-61d5d81094ba",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a7ae893d-a2f4-497c-ac26-580724580c41"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ab46140d-9ca3-459f-bf6b-00db5646f898",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "22a0f746-e70a-474f-87af-5f67b3e2343f",
                      "parentUUID": "ab46140d-9ca3-459f-bf6b-00db5646f898",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "22a0f746-e70a-474f-87af-5f67b3e2343f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "754c86bf-d835-4892-a532-b4d499d3afbe",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a20e5d43-4b89-4789-a320-a1ae12ceb97c",
                      "parentUUID": "754c86bf-d835-4892-a532-b4d499d3afbe",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a20e5d43-4b89-4789-a320-a1ae12ceb97c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d340b9cb-8019-41f6-867c-33d1b18fa582",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 58,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ee0d5f40-2f92-420d-b743-6ebdbeeefa7b",
                      "parentUUID": "d340b9cb-8019-41f6-867c-33d1b18fa582",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ee0d5f40-2f92-420d-b743-6ebdbeeefa7b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 58,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ae6fa8b7-3d21-463b-9d2a-e1d8497f81f1",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 58,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d8a5504f-a0dd-45d0-9344-463192ea739e",
                      "parentUUID": "ae6fa8b7-3d21-463b-9d2a-e1d8497f81f1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d8a5504f-a0dd-45d0-9344-463192ea739e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 58,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5fffd3c1-9095-44b8-9d18-d492f98be093",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "35d1fefd-3888-4690-94e1-e4b48f7ddb10",
                      "parentUUID": "5fffd3c1-9095-44b8-9d18-d492f98be093",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "35d1fefd-3888-4690-94e1-e4b48f7ddb10"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f911b51c-dd9f-4a32-b605-7462e9a65c44",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8992307c-417a-4824-9e39-abecf7f100f0",
                      "parentUUID": "f911b51c-dd9f-4a32-b605-7462e9a65c44",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8992307c-417a-4824-9e39-abecf7f100f0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "81982f1c-b545-401e-adb0-81b965e3112b",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d62834b6-58a4-4fa5-b511-f45afe5f2f57",
                      "parentUUID": "81982f1c-b545-401e-adb0-81b965e3112b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d62834b6-58a4-4fa5-b511-f45afe5f2f57"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "20a0cac1-6a19-415f-9cee-680127f9d51b",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "64f3b3ba-fa7b-4447-b4ef-a9f0cdc74c76",
                      "parentUUID": "20a0cac1-6a19-415f-9cee-680127f9d51b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "64f3b3ba-fa7b-4447-b4ef-a9f0cdc74c76"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4737bcec-7a06-4229-b002-993613bdc313",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "93c3676a-ad9b-4e58-829d-af671d4f322c",
                      "parentUUID": "4737bcec-7a06-4229-b002-993613bdc313",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "93c3676a-ad9b-4e58-829d-af671d4f322c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7864935c-870c-46bc-97e2-699ce2b25035",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 17,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "718d0778-c2a9-4ae6-a6d7-3d98b49d1873",
                      "parentUUID": "7864935c-870c-46bc-97e2-699ce2b25035",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "718d0778-c2a9-4ae6-a6d7-3d98b49d1873"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 17,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b0fe4090-16f0-4e07-8df1-b9d74f5c90f8",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "05e2322e-881b-4294-9733-f7d58a20ec3c",
                      "parentUUID": "b0fe4090-16f0-4e07-8df1-b9d74f5c90f8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "05e2322e-881b-4294-9733-f7d58a20ec3c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ced800ed-3dd3-43f9-a310-bb90fb825fc0",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet firstSupplierId;\nagent.get('/api/suppliers')\n.then(function(res){\n    firstSupplierId = res.body[0].id;\n    agent.post('/api/restockOrder')\n    .send(myrestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "6d121d91-9728-48e9-9244-62aaa563a9af",
                      "parentUUID": "ced800ed-3dd3-43f9-a310-bb90fb825fc0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6d121d91-9728-48e9-9244-62aaa563a9af"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "41615651-a1b3-438c-bdc9-763a5abd0534",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7c9dbb90-0437-41ad-965c-a388fcc79ec5",
                      "parentUUID": "41615651-a1b3-438c-bdc9-763a5abd0534",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7c9dbb90-0437-41ad-965c-a388fcc79ec5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ba3fa4de-4a9d-4b25-837f-888942c8aa0c",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a19419a9-101c-4d9f-ba42-3da99039c393",
                      "parentUUID": "ba3fa4de-4a9d-4b25-837f-888942c8aa0c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a19419a9-101c-4d9f-ba42-3da99039c393"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d46c3970-788c-4d69-96ca-6ab3c0383908",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "294b9794-ada6-4e50-acc6-40f5a4dcfff1",
                      "parentUUID": "d46c3970-788c-4d69-96ca-6ab3c0383908",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "294b9794-ada6-4e50-acc6-40f5a4dcfff1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "71d2b655-b9d7-4921-aa5c-e75f011eaf9d",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "4cce9499-4147-4481-bfa7-f2a9649f25c4",
                      "parentUUID": "71d2b655-b9d7-4921-aa5c-e75f011eaf9d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4cce9499-4147-4481-bfa7-f2a9649f25c4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5d57c65c-e9c3-4b1d-8222-d314f2d67d1d",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "8a9d60a4-ca21-41dc-b41a-534a8bebb7c5",
                      "parentUUID": "5d57c65c-e9c3-4b1d-8222-d314f2d67d1d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8a9d60a4-ca21-41dc-b41a-534a8bebb7c5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6cab6b46-e10d-4367-b4c9-355f2eab0aa2",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8f54d8b0-c6bd-44b8-90dc-451ead10c8ca",
                      "parentUUID": "6cab6b46-e10d-4367-b4c9-355f2eab0aa2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8f54d8b0-c6bd-44b8-90dc-451ead10c8ca"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "dcd86c5b-ff30-4ff3-81a2-9de86127cd60",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "a59c1123-f4af-4ffd-9a33-ab9594c29479",
                      "parentUUID": "dcd86c5b-ff30-4ff3-81a2-9de86127cd60",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a59c1123-f4af-4ffd-9a33-ab9594c29479"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "916d018f-9516-4a93-a426-2c00ae5229d9",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9ed4429b-a51f-49fb-925a-2ec9f025ccb7",
                      "parentUUID": "916d018f-9516-4a93-a426-2c00ae5229d9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9ed4429b-a51f-49fb-925a-2ec9f025ccb7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6c6273de-10d2-407f-8f3f-3ec0bcaa24f2",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":allskuitems})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "d8645e5a-2ab3-41fe-92f5-3dd213990d70",
                      "parentUUID": "6c6273de-10d2-407f-8f3f-3ec0bcaa24f2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d8645e5a-2ab3-41fe-92f5-3dd213990d70"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cf18f6cb-1a0c-4360-a0c6-a4629f923368",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send(null)\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "a6458747-dcc9-4c04-a6e0-2b6dc832067c",
                      "parentUUID": "cf18f6cb-1a0c-4360-a0c6-a4629f923368",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a6458747-dcc9-4c04-a6e0-2b6dc832067c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "aad78078-0b26-46a6-a2e6-bb1a61279652",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "088db1cf-a524-437d-b856-e2f657cf1993",
                      "parentUUID": "aad78078-0b26-46a6-a2e6-bb1a61279652",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "088db1cf-a524-437d-b856-e2f657cf1993"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9fee11f6-6406-4cb3-8d24-0c069afba511",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "7bd22bbd-6800-4f16-bd87-acfbc0037ffd",
                      "parentUUID": "9fee11f6-6406-4cb3-8d24-0c069afba511",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7bd22bbd-6800-4f16-bd87-acfbc0037ffd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9d2a5021-d2f5-4a2d-b4db-4e82ab748d1a",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "ce876cd7-d5d5-4663-9f07-8241c0010a08",
                      "parentUUID": "9d2a5021-d2f5-4a2d-b4db-4e82ab748d1a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ce876cd7-d5d5-4663-9f07-8241c0010a08"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ad11be28-77b5-45be-aa53-a07fd78d7d8f",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 10000;\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2021/12/29\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "fbbcc153-9741-4b77-9bcc-0cbe6344c692",
                      "parentUUID": "ad11be28-77b5-45be-aa53-a07fd78d7d8f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fbbcc153-9741-4b77-9bcc-0cbe6344c692"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "75dca42f-e05a-4d97-a5a2-a57ee3a697ca",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "84f6ee69-0f83-4cc5-bfa2-93cc0fdd9a2d",
                      "parentUUID": "75dca42f-e05a-4d97-a5a2-a57ee3a697ca",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "84f6ee69-0f83-4cc5-bfa2-93cc0fdd9a2d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5a8c6609-61c2-484a-a4fc-f496560257fb",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 5,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "18728e0e-ebc6-4509-b10d-210bf6eb66be",
                      "parentUUID": "5a8c6609-61c2-484a-a4fc-f496560257fb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "18728e0e-ebc6-4509-b10d-210bf6eb66be"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "579682cc-7c7a-4a48-bc08-8d546ac9187f",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "d83ee6c2-7897-4d40-b0b8-c7bdb47b9d84",
                      "parentUUID": "579682cc-7c7a-4a48-bc08-8d546ac9187f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d83ee6c2-7897-4d40-b0b8-c7bdb47b9d84"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "59dbc66c-62fa-4feb-b7c0-a9f677e1f023",
              "title": "Test ReturnOrder CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "c2cfff16-98fb-42f9-ab8f-5151eb5d14d5",
                  "title": "Removing all return orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features Removing all return orders Getting and removing",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/returnOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "912d898f-17fa-4efb-b9c4-5f5a5971bd4c",
                      "parentUUID": "c2cfff16-98fb-42f9-ab8f-5151eb5d14d5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "912d898f-17fa-4efb-b9c4-5f5a5971bd4c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cd8f6720-f1a5-4e11-9688-f49fa0ea98a9",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "a99a0256-cc08-4605-9557-92b23c7c3d17",
                      "parentUUID": "cd8f6720-f1a5-4e11-9688-f49fa0ea98a9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a99a0256-cc08-4605-9557-92b23c7c3d17"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "57368e39-ed95-4aa8-b416-524dd7c5d82b",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "95c650cd-d179-4036-af06-2f6cea6e21c8",
                      "parentUUID": "57368e39-ed95-4aa8-b416-524dd7c5d82b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "95c650cd-d179-4036-af06-2f6cea6e21c8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "aba667a6-2cc7-46ee-8fda-f80da535ce37",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "ef015b2a-79c4-4afd-829b-343bf0d44f30",
                      "parentUUID": "aba667a6-2cc7-46ee-8fda-f80da535ce37",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ef015b2a-79c4-4afd-829b-343bf0d44f30"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1b16a5f8-a21b-415e-9f41-160be6b57135",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f724d611-39d8-4ad5-93a1-e2f8d65fb4be",
                      "parentUUID": "1b16a5f8-a21b-415e-9f41-160be6b57135",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f724d611-39d8-4ad5-93a1-e2f8d65fb4be"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fef4d5ce-8ed6-4ae3-ac28-21cd1858fa52",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8d049cd3-6033-4c1e-8f52-f2d4db97a8d2",
                      "parentUUID": "fef4d5ce-8ed6-4ae3-ac28-21cd1858fa52",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8d049cd3-6033-4c1e-8f52-f2d4db97a8d2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7529fd83-9ad6-4c4d-8ff0-1c3dfcc40210",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e19d0224-a6fe-49bb-a942-7d131d5bc03c",
                      "parentUUID": "7529fd83-9ad6-4c4d-8ff0-1c3dfcc40210",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e19d0224-a6fe-49bb-a942-7d131d5bc03c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f2f6b5e2-5bcb-487e-8bb6-251533dc06ad",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "530c6c0e-b8f9-4c28-983c-e434ef7aa55f",
                      "parentUUID": "f2f6b5e2-5bcb-487e-8bb6-251533dc06ad",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "530c6c0e-b8f9-4c28-983c-e434ef7aa55f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6dbef839-ce6b-4e67-bb77-cfe8943f7121",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 60,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d6d9818c-fdb9-4ccc-8afb-b37b1d67159d",
                      "parentUUID": "6dbef839-ce6b-4e67-bb77-cfe8943f7121",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d6d9818c-fdb9-4ccc-8afb-b37b1d67159d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 60,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0f36da15-b66b-4543-a288-320a059e8d1f",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 58,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "58363775-63dc-4058-94e4-74aa02a7449e",
                      "parentUUID": "0f36da15-b66b-4543-a288-320a059e8d1f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "58363775-63dc-4058-94e4-74aa02a7449e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 58,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "89e90aa1-ed53-48de-8d2a-f8f3a78e9b79",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "28ed1183-f06f-4b8f-9c34-0d6c8e324467",
                      "parentUUID": "89e90aa1-ed53-48de-8d2a-f8f3a78e9b79",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "28ed1183-f06f-4b8f-9c34-0d6c8e324467"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0ea5a1d1-e25f-4e21-b9e4-e64c32f4620d",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "435d6e13-4509-4fe2-b778-4a0646a21e94",
                      "parentUUID": "0ea5a1d1-e25f-4e21-b9e4-e64c32f4620d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "435d6e13-4509-4fe2-b778-4a0646a21e94"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6fdf1b10-54e8-4a35-8364-739e099e0a3f",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "afefdac4-a061-49ba-a392-c732f5de57e8",
                      "parentUUID": "6fdf1b10-54e8-4a35-8364-739e099e0a3f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "afefdac4-a061-49ba-a392-c732f5de57e8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d1ca7bad-4031-4f34-be2f-f5688afb94ee",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "9af7c5b3-684a-491b-9c7a-0ff66dd19cb0",
                      "parentUUID": "d1ca7bad-4031-4f34-be2f-f5688afb94ee",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9af7c5b3-684a-491b-9c7a-0ff66dd19cb0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6b0fef0d-e8cb-486d-8cb2-0053fa2e3577",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 13,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "073cfec5-d658-406a-9526-f9af9ba09ef0",
                      "parentUUID": "6b0fef0d-e8cb-486d-8cb2-0053fa2e3577",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "073cfec5-d658-406a-9526-f9af9ba09ef0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 13,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b275aaf4-3e38-4a54-9a5c-4bc46da73567",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b5ca7ebc-a532-4c11-b4ad-d84d01947c01",
                      "parentUUID": "b275aaf4-3e38-4a54-9a5c-4bc46da73567",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b5ca7ebc-a532-4c11-b4ad-d84d01947c01"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "74beb1c0-fd78-43c9-865a-5b879d5c4250",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6421dadf-f882-48b0-b66b-bc4a53d221f5",
                      "parentUUID": "74beb1c0-fd78-43c9-865a-5b879d5c4250",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6421dadf-f882-48b0-b66b-bc4a53d221f5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "af998174-ebf7-4392-868d-0c32d2b01863",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "3c87babf-e7f1-45c0-b585-7f9d1de49039",
                      "parentUUID": "af998174-ebf7-4392-868d-0c32d2b01863",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3c87babf-e7f1-45c0-b585-7f9d1de49039"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ddc1b5f7-7958-4544-9f4c-1c4995a664a1",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "ec3e50a8-8648-4f27-aad3-6b1db3bf2b5e",
                      "parentUUID": "ddc1b5f7-7958-4544-9f4c-1c4995a664a1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ec3e50a8-8648-4f27-aad3-6b1db3bf2b5e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b65a78b0-5f7b-437b-bbc5-cb79677ac9d0",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3df5f127-e596-4f97-b977-34c990cd2a26",
                      "parentUUID": "b65a78b0-5f7b-437b-bbc5-cb79677ac9d0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3df5f127-e596-4f97-b977-34c990cd2a26"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "81300f79-3320-4f45-a7a1-134fea81c3d4",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c66536ff-4653-4756-8116-6ff640090842",
                      "parentUUID": "81300f79-3320-4f45-a7a1-134fea81c3d4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c66536ff-4653-4756-8116-6ff640090842"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "90ddc4e0-2392-4d47-be62-c6c44c79653e",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a72e2b6c-47dc-4403-9636-973d3cd6951f",
                      "parentUUID": "90ddc4e0-2392-4d47-be62-c6c44c79653e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a72e2b6c-47dc-4403-9636-973d3cd6951f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "61006259-b539-488f-ac5e-c4dbd6d0e105",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d124d2e9-4aef-42af-bf05-557609e9af87",
                      "parentUUID": "61006259-b539-488f-ac5e-c4dbd6d0e105",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d124d2e9-4aef-42af-bf05-557609e9af87"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e5fb2e43-e739-495d-b623-cb41b4333052",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/returnOrder')\n.send(myretord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f7bf3571-85a6-4ee4-9c04-f30a019d4ef7",
                      "parentUUID": "e5fb2e43-e739-495d-b623-cb41b4333052",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f7bf3571-85a6-4ee4-9c04-f30a019d4ef7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e23d657a-583f-41cc-9a6a-a53687790748",
                  "title": " get /api/returnOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all return orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders  get all return orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idrestockorders = ids.getIdRestockOrdersIssued();\n    let idretord = [];\n    res.body.length.should.be.eql(myretord.length);\n    for(let i = 0; i<res.body.length; i++){\n        idretord[i] = res.body[i].id;\n        res.body[i].returnDate.should.equal(myretord[i].returnDate);\n        res.body[i].restockOrderId.should.equal(idrestockorders[myretord[i].restockOrderId]);\n    }\n    ids.setIdReturnOrders(idretord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "903700aa-0a00-4cbd-a6b3-6950cf85f925",
                      "parentUUID": "e23d657a-583f-41cc-9a6a-a53687790748",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "903700aa-0a00-4cbd-a6b3-6950cf85f925"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "79c6a1da-165a-4c24-99fc-3705f0946a85",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsret = ids.getIdReturnOrders();\n//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+idsret[id])\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.returnDate.should.equal(myretord.returnDate);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7701fae4-d188-4a93-b812-8f4caa514223",
                      "parentUUID": "79c6a1da-165a-4c24-99fc-3705f0946a85",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7701fae4-d188-4a93-b812-8f4caa514223"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "29662bb5-5575-4d88-8910-fd6ee3973377",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1df98df4-1db6-4c0d-82db-6d85cc3218c3",
                      "parentUUID": "29662bb5-5575-4d88-8910-fd6ee3973377",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1df98df4-1db6-4c0d-82db-6d85cc3218c3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a01a463f-c29a-43e4-b88c-725c8227cfa0",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "13c10d56-92fc-49fb-921b-27ea8728763a",
                      "parentUUID": "a01a463f-c29a-43e4-b88c-725c8227cfa0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "13c10d56-92fc-49fb-921b-27ea8728763a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c1c9834b-8446-4ce1-b6ae-9d33be43f292",
              "title": "Test Internal Order CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "7bf8f6a5-6fab-482f-b262-c4912eb9f4d4",
                  "title": "Removing all Internal Orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Interna Orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features Removing all Internal Orders Getting Interna Orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/internalOrders/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "b8f39d8e-1d43-49a5-8b64-76a83e89fd6d",
                      "parentUUID": "7bf8f6a5-6fab-482f-b262-c4912eb9f4d4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b8f39d8e-1d43-49a5-8b64-76a83e89fd6d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "096d3cdb-addf-4091-8da7-71968675dbef",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "27dc5e98-5a80-4ab6-a208-dc7e18c9399b",
                      "parentUUID": "096d3cdb-addf-4091-8da7-71968675dbef",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "27dc5e98-5a80-4ab6-a208-dc7e18c9399b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cb896d4b-f086-4fd3-a417-fb794b642c6b",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "6326c466-dc55-441c-9cc6-0448cf9b500c",
                      "parentUUID": "cb896d4b-f086-4fd3-a417-fb794b642c6b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6326c466-dc55-441c-9cc6-0448cf9b500c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "25fc10dc-b9e5-4097-bee5-0befeca56971",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c3af71de-1343-453e-90a3-ddf0b30f7f60",
                      "parentUUID": "25fc10dc-b9e5-4097-bee5-0befeca56971",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c3af71de-1343-453e-90a3-ddf0b30f7f60"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7cf1c48b-c098-4566-92cb-59bd8f043a86",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ae53b934-3d82-419a-b071-b422fb8c1104",
                      "parentUUID": "7cf1c48b-c098-4566-92cb-59bd8f043a86",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ae53b934-3d82-419a-b071-b422fb8c1104"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2c2b3e5d-13de-4bd6-b2c4-25160fb48b5f",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8ad5082a-ebf0-4a4f-9eea-ed621e1b6bc6",
                      "parentUUID": "2c2b3e5d-13de-4bd6-b2c4-25160fb48b5f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8ad5082a-ebf0-4a4f-9eea-ed621e1b6bc6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7f93d3cc-1643-47b0-92de-03cf13452684",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f1bd01ec-d3a8-4d76-9213-a5c4dc009e20",
                      "parentUUID": "7f93d3cc-1643-47b0-92de-03cf13452684",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f1bd01ec-d3a8-4d76-9213-a5c4dc009e20"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c8ee0270-caff-4b54-98c3-350c6833c062",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3b9da4ab-cc38-4a2d-ae1b-4f982af8928b",
                      "parentUUID": "c8ee0270-caff-4b54-98c3-350c6833c062",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3b9da4ab-cc38-4a2d-ae1b-4f982af8928b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8042134f-a917-4cb0-9b93-7d2696a8aebe",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 14,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                      "err": {},
                      "uuid": "f0feafa8-4444-4071-9b64-a0f0b5392172",
                      "parentUUID": "8042134f-a917-4cb0-9b93-7d2696a8aebe",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f0feafa8-4444-4071-9b64-a0f0b5392172"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 14,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "dfec17a5-d642-4656-9f17-4bef86a0586e",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 17,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                      "err": {},
                      "uuid": "5a3dd254-5b74-4698-889d-3481d83bfc95",
                      "parentUUID": "dfec17a5-d642-4656-9f17-4bef86a0586e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5a3dd254-5b74-4698-889d-3481d83bfc95"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 17,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "81bf59c1-b783-4596-8ec1-9d4ced9da3bb",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(currentInternalOrders[ith]);\nagent.post('/api/internalOrders')\n.send(intord)\n.then(function(res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "aa497b06-39a2-43a5-a782-f354f31af050",
                      "parentUUID": "81bf59c1-b783-4596-8ec1-9d4ced9da3bb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "aa497b06-39a2-43a5-a782-f354f31af050"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e497b876-d4fd-4e4a-b8ac-2bbc0b2c9992",
                  "title": " get /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all internal orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b781b702-4a1d-456f-9c21-90dcd134925a",
                      "parentUUID": "e497b876-d4fd-4e4a-b8ac-2bbc0b2c9992",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b781b702-4a1d-456f-9c21-90dcd134925a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1169663d-570a-420d-9875-517444dfde09",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3515542e-e1b5-4355-a9f3-e4ea699b899c",
                      "parentUUID": "1169663d-570a-420d-9875-517444dfde09",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3515542e-e1b5-4355-a9f3-e4ea699b899c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5826e6f3-3c53-4721-bbad-0454f6130237",
                  "title": " put /api/internalOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify the state of an IO",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "e008bda3-88c2-487f-8555-4077cbd651a1",
                      "parentUUID": "5826e6f3-3c53-4721-bbad-0454f6130237",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e008bda3-88c2-487f-8555-4077cbd651a1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0ba56758-c6e4-4632-9a43-550d99763641",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "59d9e2e7-3f55-4a40-a744-10aca0b41eb8",
                      "parentUUID": "0ba56758-c6e4-4632-9a43-550d99763641",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "59d9e2e7-3f55-4a40-a744-10aca0b41eb8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "67f58ad3-79b2-4def-8cc6-1a459f622d83",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersAccepted')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order accepted', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "50550061-7b72-41d6-b7b6-6dc4df32b1a0",
                      "parentUUID": "67f58ad3-79b2-4def-8cc6-1a459f622d83",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "50550061-7b72-41d6-b7b6-6dc4df32b1a0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "818bbb3e-182a-4247-ba4a-7ce36718d7bf",
                  "title": " put /api/internalOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify the state of an IO",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "65dc238f-10d7-45ca-9584-a53f1d27822d",
                      "parentUUID": "818bbb3e-182a-4247-ba4a-7ce36718d7bf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "65dc238f-10d7-45ca-9584-a53f1d27822d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f7414285-ab0d-43a8-8cf4-f35ed63506ae",
                  "title": " get /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all internal orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b93f0434-a284-4f74-b70e-22185aa14bde",
                      "parentUUID": "f7414285-ab0d-43a8-8cf4-f35ed63506ae",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b93f0434-a284-4f74-b70e-22185aa14bde"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9812723a-3d6c-4ec5-a8d9-8c2d265f38d5",
              "title": "Test Item CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "50e2d8e4-2663-4687-92fd-c4fa6634281d",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "0c0d89f1-5b66-43ac-b14c-4987ef194ce8",
                      "parentUUID": "50e2d8e4-2663-4687-92fd-c4fa6634281d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0c0d89f1-5b66-43ac-b14c-4987ef194ce8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5df72d44-2b31-4b12-af06-aac8d3ced93d",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "8f2455b8-ca48-4460-8f78-bb03e2348eb0",
                      "parentUUID": "5df72d44-2b31-4b12-af06-aac8d3ced93d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8f2455b8-ca48-4460-8f78-bb03e2348eb0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "59cd9ad1-f53e-4d38-859d-1fd36481534a",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f06e69fe-c507-46d1-bb3b-2bb97003f2c3",
                      "parentUUID": "59cd9ad1-f53e-4d38-859d-1fd36481534a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f06e69fe-c507-46d1-bb3b-2bb97003f2c3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "66c2e492-01f7-4fad-93c2-7337f9c55fe7",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a1b9bf71-c0e3-4aa7-ae5f-898c05b1ee52",
                      "parentUUID": "66c2e492-01f7-4fad-93c2-7337f9c55fe7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a1b9bf71-c0e3-4aa7-ae5f-898c05b1ee52"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7afd7040-32ee-4048-b781-6646b57a6a69",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5e1f9eb0-2940-4f1a-a089-ff14e285cdfe",
                      "parentUUID": "7afd7040-32ee-4048-b781-6646b57a6a69",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5e1f9eb0-2940-4f1a-a089-ff14e285cdfe"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5e61d55f-c8c4-4984-a48a-88a0551bfe7e",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4233c3aa-37fe-48c5-a843-be0faa8dc387",
                      "parentUUID": "5e61d55f-c8c4-4984-a48a-88a0551bfe7e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4233c3aa-37fe-48c5-a843-be0faa8dc387"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "46e87048-6b8b-4345-beb0-ba84d374c3fa",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d289850e-d54c-494a-aada-e88871a94b4b",
                      "parentUUID": "46e87048-6b8b-4345-beb0-ba84d374c3fa",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d289850e-d54c-494a-aada-e88871a94b4b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bdd55fbd-ce7b-43da-a521-3618c0d2a3b3",
                  "title": "Removing all Items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features Removing all Items Getting Items",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "851f9d78-90e1-46a4-9447-2a50e4709326",
                      "parentUUID": "bdd55fbd-ce7b-43da-a521-3618c0d2a3b3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "851f9d78-90e1-46a4-9447-2a50e4709326"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "df3f5b9c-5a9d-455c-96b3-0bbe8f10d433",
                  "title": " get /api/items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/items Getting all items",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "4c63b4f8-ee69-4354-89fb-7a4dee851f21",
                      "parentUUID": "df3f5b9c-5a9d-455c-96b3-0bbe8f10d433",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4c63b4f8-ee69-4354-89fb-7a4dee851f21"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bcaefdfe-a12f-406c-ade2-62c7d4861844",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 58,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b947c1b7-1a64-438a-9171-ca1f38ebb56f",
                      "parentUUID": "bcaefdfe-a12f-406c-ade2-62c7d4861844",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b947c1b7-1a64-438a-9171-ca1f38ebb56f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 58,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bda64330-9ebb-4157-8e7d-d39b997c573e",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "543dd409-22cc-4b58-8b3c-9fd16b4e5fbd",
                      "parentUUID": "bda64330-9ebb-4157-8e7d-d39b997c573e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "543dd409-22cc-4b58-8b3c-9fd16b4e5fbd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "97a7252b-3740-46ac-8095-6ee1b68f3b0d",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7165e4c1-7a2a-4627-9b98-e38dc62c2be1",
                      "parentUUID": "97a7252b-3740-46ac-8095-6ee1b68f3b0d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7165e4c1-7a2a-4627-9b98-e38dc62c2be1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b2e0071a-0b0b-470e-960a-388f2f9ad09f",
                  "title": "post /api/item/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/item/ Adding item details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "9afb89e7-241e-4c01-af1c-46f98b18b312",
                      "parentUUID": "b2e0071a-0b0b-470e-960a-388f2f9ad09f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9afb89e7-241e-4c01-af1c-46f98b18b312"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "91df93a5-2838-4411-86e8-5f417548bdc0",
                  "title": "post /api/item/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/item/ Adding item details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "24910487-7fa8-4def-8957-ae95b5d99d61",
                      "parentUUID": "91df93a5-2838-4411-86e8-5f417548bdc0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "24910487-7fa8-4def-8957-ae95b5d99d61"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "43805ded-6bf4-4251-8c03-0a6d90037117",
                  "title": " get /api/items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/items Getting all items",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "6789a86e-4081-4e86-924b-4a616ae4b09e",
                      "parentUUID": "43805ded-6bf4-4251-8c03-0a6d90037117",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6789a86e-4081-4e86-924b-4a616ae4b09e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0b02d844-23b2-4258-ab55-45b6be6b3a85",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+itemid)\n.then(r => {\n    let idskus = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(r.status, expCode);\n    if (r.status == 200) {\n        r.body.should.be.a('object');\n        r.body.id.should.equal(itemid);\n        r.body.description.should.equal(myexpitem.description);\n        r.body.price.should.equal(myexpitem.price);\n        r.body.SKUId.should.equal(idskus[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "e9e9f189-c92f-4179-81fa-3940922c50dc",
                      "parentUUID": "0b02d844-23b2-4258-ab55-45b6be6b3a85",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e9e9f189-c92f-4179-81fa-3940922c50dc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ee43b388-ea6a-4c45-972f-f2564555683a",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "cbaa667e-bae5-487e-929e-fac341b4724b",
                      "parentUUID": "ee43b388-ea6a-4c45-972f-f2564555683a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cbaa667e-bae5-487e-929e-fac341b4724b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ed9e5c45-4f88-402f-921b-5164d6ce9db0",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "7bfab8f7-573c-4679-b3f6-530aac36a727",
                      "parentUUID": "ed9e5c45-4f88-402f-921b-5164d6ce9db0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7bfab8f7-573c-4679-b3f6-530aac36a727"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2f7b013e-7486-4358-a122-31b00fa4cfdd",
                  "title": " put /api/item/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify an item given its ID and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  put /api/item/:id Modify an item given its ID and new fields",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/item/'+ith)\n.send(updateItem(newDescription, newPrice))\n.then(res => {\n    let idsku = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(res.status, expCode);\n    agent.get('/api/items/'+ith)\n    .then (r => {\n        console.log(r.body);\n        assert.equal(r.status,200);\n        r.body.should.be.a('object');\n        r.body.id.should.equal(myexpitem.id);\n        r.body.description.should.equal(newDescription);\n        r.body.price.should.equal(newPrice);\n        r.body.SKUId.should.equal(idsku[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    });\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8243806d-391c-4521-b5bd-a23d2389ecb0",
                      "parentUUID": "2f7b013e-7486-4358-a122-31b00fa4cfdd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8243806d-391c-4521-b5bd-a23d2389ecb0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ff66f146-c8b5-4c12-b829-9e24d93abdec",
                  "title": " delete /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete an item given its id",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  delete /api/items/:id Delete an item given its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/items/'+ith)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "ad2c1443-38f9-478e-9786-3e006d938f96",
                      "parentUUID": "ff66f146-c8b5-4c12-b829-9e24d93abdec",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ad2c1443-38f9-478e-9786-3e006d938f96"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0d6c74e9-3262-4db0-9af8-71fed8d69bb7",
                  "title": "Removing all Items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features Removing all Items Getting Items",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "411d91bc-3f35-44b3-975d-e11d030b7a09",
                      "parentUUID": "0d6c74e9-3262-4db0-9af8-71fed8d69bb7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "411d91bc-3f35-44b3-975d-e11d030b7a09"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "712b0775-5533-42e1-97a3-d56113c093a0",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "098c1d03-cc9d-461a-b8e6-002e32c78bb0",
                      "parentUUID": "712b0775-5533-42e1-97a3-d56113c093a0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "098c1d03-cc9d-461a-b8e6-002e32c78bb0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5821991e-617d-42de-861a-bd1898628013",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "f68a65bf-32fc-4180-bb8b-5d81fd3e71ee",
                      "parentUUID": "5821991e-617d-42de-861a-bd1898628013",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f68a65bf-32fc-4180-bb8b-5d81fd3e71ee"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}