{
  "stats": {
    "suites": 542,
    "tests": 520,
    "passes": 520,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-06T19:31:07.311Z",
    "end": "2022-06-06T19:31:10.307Z",
    "duration": 2996,
    "testsRegistered": 520,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "05214848-1b56-463d-a7df-65e9163e859b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cdee2aa0-322c-45e3-afda-e74665340a8e",
          "title": "Test sku CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8219ffe4-1f15-4c04-ba30-1366a494759b",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test sku CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 929,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "8125c961-a08a-4a3a-95f0-ce07f1646436",
                  "parentUUID": "8219ffe4-1f15-4c04-ba30-1366a494759b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8125c961-a08a-4a3a-95f0-ce07f1646436"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 929,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "489c6ee8-815e-4fcb-969f-bcc143b76a4c",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "36897e96-a0f7-4aa8-84e9-be42693188a9",
                  "parentUUID": "489c6ee8-815e-4fcb-969f-bcc143b76a4c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "36897e96-a0f7-4aa8-84e9-be42693188a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "591422f8-7b56-483b-8598-dfbc31933df7",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6177ec4e-693d-4328-84e4-5c25b0e72744",
                  "parentUUID": "591422f8-7b56-483b-8598-dfbc31933df7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6177ec4e-693d-4328-84e4-5c25b0e72744"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e23b4dc0-311d-4a2d-928f-80e19561b7f2",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5c38d853-5c27-4cd6-be4e-3cfe585b4a33",
                  "parentUUID": "e23b4dc0-311d-4a2d-928f-80e19561b7f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5c38d853-5c27-4cd6-be4e-3cfe585b4a33"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "178fa9e6-8fd6-49dc-a763-8528fef3ae9e",
              "title": "put /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 b -> Modify an existing SKU",
                  "fullTitle": "Test sku CRUD features put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a54c8753-cf03-427e-9e6b-7e13f4c2df71",
                  "parentUUID": "178fa9e6-8fd6-49dc-a763-8528fef3ae9e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a54c8753-cf03-427e-9e6b-7e13f4c2df71"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "39fb2954-a077-44bd-961c-742d56d3a8c3",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2523bebc-73b1-431a-baba-70a1d9997fa6",
                  "parentUUID": "39fb2954-a077-44bd-961c-742d56d3a8c3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2523bebc-73b1-431a-baba-70a1d9997fa6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "97e944f1-887d-4bcf-8cae-9e31f856bd8a",
              "title": "put /api/sku/:id/position",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Changing SKU position passing its id",
                  "fullTitle": "Test sku CRUD features put /api/sku/:id/position Changing SKU position passing its id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID+'/position')\n.send(pos)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f65dbed6-5780-4ad5-99c8-c384e764e439",
                  "parentUUID": "97e944f1-887d-4bcf-8cae-9e31f856bd8a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f65dbed6-5780-4ad5-99c8-c384e764e439"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "34214ab3-9050-4805-9add-b36ac1bb67d9",
              "title": "delete /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.2 -> Delete a SKU",
                  "fullTitle": "Test sku CRUD features delete /api/sku/:id FR 2.2 -> Delete a SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "972ee04c-a0f1-4776-9b77-73d2445504d6",
                  "parentUUID": "34214ab3-9050-4805-9add-b36ac1bb67d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "972ee04c-a0f1-4776-9b77-73d2445504d6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5a3e424a-6b2c-4dfe-a9c0-0f6bd4a175e1",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "206839dc-663e-4930-a307-0e15fb45b78c",
                  "parentUUID": "5a3e424a-6b2c-4dfe-a9c0-0f6bd4a175e1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "206839dc-663e-4930-a307-0e15fb45b78c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "708d1b9f-81dc-453b-b9dc-56c7e34c4cfe",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9b411821-3d0c-4101-acc4-4e455cdf1e39",
                  "parentUUID": "708d1b9f-81dc-453b-b9dc-56c7e34c4cfe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9b411821-3d0c-4101-acc4-4e455cdf1e39"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "088e0018-e8cd-45eb-9737-5bb5a23ed1b7",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d461516b-0b32-4e4c-96de-58561ffe89fc",
                  "parentUUID": "088e0018-e8cd-45eb-9737-5bb5a23ed1b7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d461516b-0b32-4e4c-96de-58561ffe89fc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "348e9240-3032-44b1-b499-def7c29c0f4a",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "20a4eb05-6a01-4ea0-b362-d7e697dfe5c5",
                  "parentUUID": "348e9240-3032-44b1-b499-def7c29c0f4a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20a4eb05-6a01-4ea0-b362-d7e697dfe5c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "17c0069d-746c-4acf-8bd1-620931f1bf6d",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "aaa84330-5751-499c-a49a-ab190d7b9387",
                  "parentUUID": "17c0069d-746c-4acf-8bd1-620931f1bf6d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aaa84330-5751-499c-a49a-ab190d7b9387"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b0b9fcd5-35fa-4fe8-a9f2-8e0c3612fe10",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0b2b0d61-13a1-4b8b-871c-76cd4a2d0fa3",
                  "parentUUID": "b0b9fcd5-35fa-4fe8-a9f2-8e0c3612fe10",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0b2b0d61-13a1-4b8b-871c-76cd4a2d0fa3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "863dd033-5290-4f59-87b6-c63b8c1f57b4",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f76f2ca9-5493-4571-9911-1604b29add4f",
                  "parentUUID": "863dd033-5290-4f59-87b6-c63b8c1f57b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f76f2ca9-5493-4571-9911-1604b29add4f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c6a9c3b6-d6b2-45bd-a47c-e54a100c5550",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "24a9a0d8-155c-4f2f-bc17-c23194b42bb5",
                  "parentUUID": "c6a9c3b6-d6b2-45bd-a47c-e54a100c5550",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24a9a0d8-155c-4f2f-bc17-c23194b42bb5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8b12d452-bd4d-40e7-a4d4-f792c9277236",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b0d7ac54-b088-4109-9e2a-cfe71f1a29b5",
                  "parentUUID": "8b12d452-bd4d-40e7-a4d4-f792c9277236",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b0d7ac54-b088-4109-9e2a-cfe71f1a29b5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d02bf9cc-7120-429d-9715-2f49534236a1",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e2282fda-f33b-43f9-a9eb-954b5074f23b",
                  "parentUUID": "d02bf9cc-7120-429d-9715-2f49534236a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e2282fda-f33b-43f9-a9eb-954b5074f23b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2d1a95f1-bce9-4af4-97e9-32a4a6cce2c0",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "932b98a9-37c1-4b2d-94c1-5a7af1e1eb22",
                  "parentUUID": "2d1a95f1-bce9-4af4-97e9-32a4a6cce2c0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "932b98a9-37c1-4b2d-94c1-5a7af1e1eb22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c993c4bd-7312-4c61-8ac3-78090ff25b7f",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c378f64e-56d4-44e9-acc1-561345b9db3f",
                  "parentUUID": "c993c4bd-7312-4c61-8ac3-78090ff25b7f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c378f64e-56d4-44e9-acc1-561345b9db3f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b2261980-5fac-47ac-b8ee-6233e1ccf566",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5192f192-63a7-42fb-bf8c-a53fdbe44f92",
                  "parentUUID": "b2261980-5fac-47ac-b8ee-6233e1ccf566",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5192f192-63a7-42fb-bf8c-a53fdbe44f92"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "da211360-6f45-4836-b60b-093cafef6c2f",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "678cd9dc-9e5b-45dc-89c9-8b5702330abd",
                  "parentUUID": "da211360-6f45-4836-b60b-093cafef6c2f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "678cd9dc-9e5b-45dc-89c9-8b5702330abd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "af5547e8-45ac-4927-844f-22bddd76b76b",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "99a18b2b-1c20-44a7-9917-38bd97b42e60",
                  "parentUUID": "af5547e8-45ac-4927-844f-22bddd76b76b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "99a18b2b-1c20-44a7-9917-38bd97b42e60"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "10509690-0a39-4d24-bbad-bf29cc0c6ff0",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "25699591-6a63-4374-8573-c9a96f1d105c",
                  "parentUUID": "10509690-0a39-4d24-bbad-bf29cc0c6ff0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25699591-6a63-4374-8573-c9a96f1d105c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "884e0078-4200-49de-873c-b74b44f8a7c5",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "12a7cb12-d0f3-4884-bee6-c4b59b8e5c5e",
                  "parentUUID": "884e0078-4200-49de-873c-b74b44f8a7c5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12a7cb12-d0f3-4884-bee6-c4b59b8e5c5e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d8c2f68d-86dd-4011-9725-d152a2a3d0bb",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "38dbb7bc-b008-4772-9400-ea18af9c6c18",
                  "parentUUID": "d8c2f68d-86dd-4011-9725-d152a2a3d0bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "38dbb7bc-b008-4772-9400-ea18af9c6c18"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f430e8e5-4d78-4ac3-8724-bef00af2ac21",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3145ca07-b5a5-4da0-9eed-c17336d9b796",
                  "parentUUID": "f430e8e5-4d78-4ac3-8724-bef00af2ac21",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3145ca07-b5a5-4da0-9eed-c17336d9b796"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "11844888-6b0c-4fc2-b7a7-a6174253c5c1",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test sku CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "08c88c49-5805-4f04-9a26-d1b3bff4d626",
                  "parentUUID": "11844888-6b0c-4fc2-b7a7-a6174253c5c1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "08c88c49-5805-4f04-9a26-d1b3bff4d626"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "87fa8ea3-938a-4ec7-a283-0d60159c6b46",
          "title": "Test skuitem CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4c5095b7-499a-4c8f-8029-0de9413e317b",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "5006f24c-32ce-4782-b631-9569d753c90e",
                  "parentUUID": "4c5095b7-499a-4c8f-8029-0de9413e317b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5006f24c-32ce-4782-b631-9569d753c90e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b6ebc896-76c2-403b-acbf-34c5f74d711f",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test skuitem CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "1b2bbd8f-0002-4eda-864c-8dba04e8c224",
                  "parentUUID": "b6ebc896-76c2-403b-acbf-34c5f74d711f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b2bbd8f-0002-4eda-864c-8dba04e8c224"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d485f796-6bb6-4111-a4ba-bc9aefca423e",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "31998472-e1d4-48af-b792-ca4b29ccfd20",
                  "parentUUID": "d485f796-6bb6-4111-a4ba-bc9aefca423e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31998472-e1d4-48af-b792-ca4b29ccfd20"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2544a476-0ec9-4e69-9820-5a4ddcf39419",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "994705d1-2fde-43fe-a204-8eb5255567cf",
                  "parentUUID": "2544a476-0ec9-4e69-9820-5a4ddcf39419",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "994705d1-2fde-43fe-a204-8eb5255567cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "184735dd-e743-4cf9-8b2f-8451405234b5",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test skuitem CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "955ecbaf-789a-4cb5-b037-78d387c6ef56",
                  "parentUUID": "184735dd-e743-4cf9-8b2f-8451405234b5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "955ecbaf-789a-4cb5-b037-78d387c6ef56"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "93554bc0-374d-4c40-ac72-fd530848e8de",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2afca51e-e07e-4d03-8eca-82ce900a0592",
                  "parentUUID": "93554bc0-374d-4c40-ac72-fd530848e8de",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2afca51e-e07e-4d03-8eca-82ce900a0592"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "841d15c4-f6f3-4bf4-aa9d-33cf90a30420",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "504df0d4-08b3-4692-b56b-eab0a5d824c4",
                  "parentUUID": "841d15c4-f6f3-4bf4-aa9d-33cf90a30420",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "504df0d4-08b3-4692-b56b-eab0a5d824c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a100c7d6-e584-45ac-99e2-39b7873356c2",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "dcfe6544-b60c-430c-b04d-98e6c44b7ad2",
                  "parentUUID": "a100c7d6-e584-45ac-99e2-39b7873356c2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dcfe6544-b60c-430c-b04d-98e6c44b7ad2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "afd38e79-e10a-4477-a62e-e386b3b67989",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bae815cc-2473-4aa8-a631-4039053c16dc",
                  "parentUUID": "afd38e79-e10a-4477-a62e-e386b3b67989",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bae815cc-2473-4aa8-a631-4039053c16dc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6bbf42b3-fa5c-4c86-9490-7f169316e7b0",
              "title": "get /api/skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9fa962fd-c9f0-42f7-aad0-959ac10e807a",
                  "parentUUID": "6bbf42b3-fa5c-4c86-9490-7f169316e7b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9fa962fd-c9f0-42f7-aad0-959ac10e807a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "300d8681-cd33-46d1-8dba-a6c6dc267d2b",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9f34b5c7-d84e-4c1c-b385-7541a5034116",
                  "parentUUID": "300d8681-cd33-46d1-8dba-a6c6dc267d2b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f34b5c7-d84e-4c1c-b385-7541a5034116"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f0b1d62e-2336-411b-a540-9181fdc650e5",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "30855c20-8362-4c84-9600-7b49b6b8c2ae",
                  "parentUUID": "f0b1d62e-2336-411b-a540-9181fdc650e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "30855c20-8362-4c84-9600-7b49b6b8c2ae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bed6284b-55c8-40f0-a34d-a9d42a7fbcf1",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "319328fb-810d-4b68-9626-07204321423f",
                  "parentUUID": "bed6284b-55c8-40f0-a34d-a9d42a7fbcf1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "319328fb-810d-4b68-9626-07204321423f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a6aedb9d-ac49-472f-b7d8-443480ef5086",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7632e29a-b798-43f5-8803-984c355870ab",
                  "parentUUID": "a6aedb9d-ac49-472f-b7d8-443480ef5086",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7632e29a-b798-43f5-8803-984c355870ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "36e73f25-aeba-4710-b405-59b8c3e42a09",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "46ef4186-065b-4c58-b1d3-ec25cb07a97d",
                  "parentUUID": "36e73f25-aeba-4710-b405-59b8c3e42a09",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46ef4186-065b-4c58-b1d3-ec25cb07a97d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "772600ac-d5d8-4582-aa59-4d9ecc93f5b9",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "b88cdfbd-37ab-4adc-a7d0-3a0cbecb0294",
                  "parentUUID": "772600ac-d5d8-4582-aa59-4d9ecc93f5b9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b88cdfbd-37ab-4adc-a7d0-3a0cbecb0294"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "aa9796af-644c-4068-abfa-cf38dff3847a",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "39951c78-8917-4aec-b6d1-14e25658556c",
                  "parentUUID": "aa9796af-644c-4068-abfa-cf38dff3847a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "39951c78-8917-4aec-b6d1-14e25658556c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a12cc0dd-3d80-4499-adcb-aecd201c5c0e",
              "title": "get /api/skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ac7e42d6-6dc3-410e-b628-2717deb2d262",
                  "parentUUID": "a12cc0dd-3d80-4499-adcb-aecd201c5c0e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac7e42d6-6dc3-410e-b628-2717deb2d262"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e825f818-54e3-42a3-86a1-23e9a07ff586",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9a9c5007-44f8-4835-b7e9-1795be7930ba",
                  "parentUUID": "e825f818-54e3-42a3-86a1-23e9a07ff586",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a9c5007-44f8-4835-b7e9-1795be7930ba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1e927064-52ec-42d9-b4d2-0d2ef5a9afa9",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fdeab9ee-1686-4461-9f0f-a4a9ae05c196",
                  "parentUUID": "1e927064-52ec-42d9-b4d2-0d2ef5a9afa9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fdeab9ee-1686-4461-9f0f-a4a9ae05c196"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0e1514ee-ebfb-4287-8d1f-b7fb996a258f",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3d0e0c1d-b247-4779-8ccf-0fca804979a1",
                  "parentUUID": "0e1514ee-ebfb-4287-8d1f-b7fb996a258f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d0e0c1d-b247-4779-8ccf-0fca804979a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "47fb991e-4dfc-4a35-be59-1a89ecb80645",
          "title": "test positions CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "46c13f52-4796-48be-9804-93cbb75166ad",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "test positions CRUD features Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "5d617835-2617-4ca8-87ed-8674815f453b",
                  "parentUUID": "46c13f52-4796-48be-9804-93cbb75166ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d617835-2617-4ca8-87ed-8674815f453b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "94f79edf-51e3-433d-b463-048aed59cd3b",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fbc1b8b7-eb4c-4e27-ade2-5208b305a2a3",
                  "parentUUID": "94f79edf-51e3-433d-b463-048aed59cd3b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fbc1b8b7-eb4c-4e27-ade2-5208b305a2a3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9496522d-8f34-4d7a-9bb2-8ebde2b1c506",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b77f2a69-b9a9-48c3-b5a2-ff6022c64a55",
                  "parentUUID": "9496522d-8f34-4d7a-9bb2-8ebde2b1c506",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b77f2a69-b9a9-48c3-b5a2-ff6022c64a55"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7cb81c60-63fd-43ff-9493-8b40d98fb1d2",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "60a01058-c006-4a57-b48f-69a3a3f2aaeb",
                  "parentUUID": "7cb81c60-63fd-43ff-9493-8b40d98fb1d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "60a01058-c006-4a57-b48f-69a3a3f2aaeb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d50bcc5f-6821-4448-87dd-61c28b00ad36",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2bb9df74-6e91-4bd0-a46f-ab985ec65b20",
                  "parentUUID": "d50bcc5f-6821-4448-87dd-61c28b00ad36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2bb9df74-6e91-4bd0-a46f-ab985ec65b20"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "367a58ce-e7f8-4e40-89ad-147589aa375d",
              "title": " get /api/positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.3 -> List all positions",
                  "fullTitle": "test positions CRUD features  get /api/positions FR 3.1.3 -> List all positions",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "217c786d-44b4-40b0-bef1-7931ed8eef70",
                  "parentUUID": "367a58ce-e7f8-4e40-89ad-147589aa375d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "217c786d-44b4-40b0-bef1-7931ed8eef70"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d8725bb2-404b-46bc-845e-ead92bf31bb5",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ba19cc07-b324-4a69-9dbb-86bc3c4e4efd",
                  "parentUUID": "d8725bb2-404b-46bc-845e-ead92bf31bb5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba19cc07-b324-4a69-9dbb-86bc3c4e4efd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8fa4c179-51f7-4a65-a50b-7adc9fe9186f",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2d009b5c-dccb-4f7e-a56b-a163c46531ef",
                  "parentUUID": "8fa4c179-51f7-4a65-a50b-7adc9fe9186f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2d009b5c-dccb-4f7e-a56b-a163c46531ef"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "14481216-d69b-4cad-906d-daf99e915296",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "607a9234-f607-4086-ba90-fa9717cf8baf",
                  "parentUUID": "14481216-d69b-4cad-906d-daf99e915296",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "607a9234-f607-4086-ba90-fa9717cf8baf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "faac74ac-b7e6-41c4-b505-422d1fea242a",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b2568795-8076-49fb-8e2e-6c3cc47fe5a0",
                  "parentUUID": "faac74ac-b7e6-41c4-b505-422d1fea242a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2568795-8076-49fb-8e2e-6c3cc47fe5a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c82d0890-b19e-4c3e-a04f-1ea8a4d7308f",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8e3b6b8f-995f-4455-98da-7defd60b6553",
                  "parentUUID": "c82d0890-b19e-4c3e-a04f-1ea8a4d7308f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8e3b6b8f-995f-4455-98da-7defd60b6553"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7ec60345-0739-4f46-84ff-e295a6859468",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0566ba3f-89f0-47cc-a816-da8e5b23d2e5",
                  "parentUUID": "7ec60345-0739-4f46-84ff-e295a6859468",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0566ba3f-89f0-47cc-a816-da8e5b23d2e5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3d93c014-f384-4521-b81e-ec3bb00b34ae",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9f5ecc75-cd4f-4a4d-8077-6d150ef997c1",
                  "parentUUID": "3d93c014-f384-4521-b81e-ec3bb00b34ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f5ecc75-cd4f-4a4d-8077-6d150ef997c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d46141df-083e-4b49-9393-8f6158bb006b",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "43022625-658b-4e19-b95b-79443364fd77",
                  "parentUUID": "d46141df-083e-4b49-9393-8f6158bb006b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "43022625-658b-4e19-b95b-79443364fd77"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e27ecc24-6bfe-4289-952a-2c3e3726a7f0",
          "title": "Test TestDescriptor CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "888750c1-29cf-49b5-a712-5418a7ff1320",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestDescriptor CRUD features removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0f2a675f-3878-45a9-8a8d-4081d8c129f7",
                  "parentUUID": "888750c1-29cf-49b5-a712-5418a7ff1320",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0f2a675f-3878-45a9-8a8d-4081d8c129f7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9cd8e475-0dfd-4000-b774-13fc186418f5",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestDescriptor CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "605adab5-d494-41aa-9341-7d4478e90f00",
                  "parentUUID": "9cd8e475-0dfd-4000-b774-13fc186418f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "605adab5-d494-41aa-9341-7d4478e90f00"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5d7ce6f5-e1a9-4243-b652-a3cc17c2404a",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestDescriptor CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "fc70703a-23d8-4272-bcf6-bd9567370606",
                  "parentUUID": "5d7ce6f5-e1a9-4243-b652-a3cc17c2404a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fc70703a-23d8-4272-bcf6-bd9567370606"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "082c9a22-d64e-4eef-b104-83145529693d",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "929a0c55-2d4f-42dc-bf1a-bd735880ebca",
                  "parentUUID": "082c9a22-d64e-4eef-b104-83145529693d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "929a0c55-2d4f-42dc-bf1a-bd735880ebca"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2ea8c88b-360c-4799-b082-5532ef99e88d",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "993d1de7-be7b-43a8-aedc-f585bae5413b",
                  "parentUUID": "2ea8c88b-360c-4799-b082-5532ef99e88d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "993d1de7-be7b-43a8-aedc-f585bae5413b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "433f34ba-0bfd-45a7-aa8b-0dbe11e4f1e4",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "883bc082-42f9-4901-af39-073d37fa1d65",
                  "parentUUID": "433f34ba-0bfd-45a7-aa8b-0dbe11e4f1e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "883bc082-42f9-4901-af39-073d37fa1d65"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b73e90c5-7c03-488c-a70b-cb432498b826",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "268e1057-974a-4d3a-a250-d872c132d81e",
                  "parentUUID": "b73e90c5-7c03-488c-a70b-cb432498b826",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "268e1057-974a-4d3a-a250-d872c132d81e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fc1498cf-353d-470d-ae09-3484bf151612",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "86e25b19-49b2-4f2b-88e8-5289ad5b9a50",
                  "parentUUID": "fc1498cf-353d-470d-ae09-3484bf151612",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "86e25b19-49b2-4f2b-88e8-5289ad5b9a50"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8194d17c-8c78-47ad-8080-9aeae965f949",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d21f8520-fcdb-4d8e-8f02-498db80f16e9",
                  "parentUUID": "8194d17c-8c78-47ad-8080-9aeae965f949",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d21f8520-fcdb-4d8e-8f02-498db80f16e9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ff20d9e1-ab2a-4673-8669-5b1c437f0588",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0197a36b-e322-4799-99f3-8e470230d1a1",
                  "parentUUID": "ff20d9e1-ab2a-4673-8669-5b1c437f0588",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0197a36b-e322-4799-99f3-8e470230d1a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5ac84435-2a2b-4f29-8329-f181f4e9c333",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "98ca0ee9-38d5-4edf-8bb7-cd854e8009e6",
                  "parentUUID": "5ac84435-2a2b-4f29-8329-f181f4e9c333",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "98ca0ee9-38d5-4edf-8bb7-cd854e8009e6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2aafc5ee-40fc-4a4f-8ced-4a6e0b9618e9",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b9903a09-1521-4557-b602-aa7260bec93f",
                  "parentUUID": "2aafc5ee-40fc-4a4f-8ced-4a6e0b9618e9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9903a09-1521-4557-b602-aa7260bec93f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bac1f3bb-b1ac-4d40-9a14-3b322a33880c",
              "title": "test post test descriptor with not exixsting idsku",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a bad test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test post test descriptor with not exixsting idsku Creating a bad test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/testDescriptor')\n.send()\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3c3897ea-a644-4e34-a5c5-d36af8b256b8",
                  "parentUUID": "bac1f3bb-b1ac-4d40-9a14-3b322a33880c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c3897ea-a644-4e34-a5c5-d36af8b256b8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "66827189-0912-4676-8cf7-5ccd4ed168d9",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d67918d5-6fba-4da0-b56c-11313d5d9c6f",
                  "parentUUID": "66827189-0912-4676-8cf7-5ccd4ed168d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d67918d5-6fba-4da0-b56c-11313d5d9c6f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "04ebc7ca-c440-4521-9f8b-cd095a6b416e",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6adcf67f-0be0-4113-9eef-b8c7cc6af458",
                  "parentUUID": "04ebc7ca-c440-4521-9f8b-cd095a6b416e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6adcf67f-0be0-4113-9eef-b8c7cc6af458"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "96dc7987-7a7e-4349-900d-f381cffd0891",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "5d5d6c21-caf0-4fdc-a206-abdc300f65cd",
                  "parentUUID": "96dc7987-7a7e-4349-900d-f381cffd0891",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d5d6c21-caf0-4fdc-a206-abdc300f65cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "98aa98d6-9370-4a48-b2f4-c4e3fb88cf0d",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "fc77d7b8-cc2d-4fff-9a45-6571840fc9d9",
                  "parentUUID": "98aa98d6-9370-4a48-b2f4-c4e3fb88cf0d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fc77d7b8-cc2d-4fff-9a45-6571840fc9d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5ccb5b01-f8ea-402b-9e82-eb428d31571b",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "26443af7-6994-43f3-8443-38b9e6062a2a",
                  "parentUUID": "5ccb5b01-f8ea-402b-9e82-eb428d31571b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26443af7-6994-43f3-8443-38b9e6062a2a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fc2e5e10-423c-4d39-b7b9-5e96e79511d9",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5d9ddc2c-0b00-4488-b805-689ce38418cd",
                  "parentUUID": "fc2e5e10-423c-4d39-b7b9-5e96e79511d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d9ddc2c-0b00-4488-b805-689ce38418cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "95fdd90a-c1ff-4253-a210-c07601db5a92",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "939108e7-f105-4b7b-84dc-dae35e761267",
                  "parentUUID": "95fdd90a-c1ff-4253-a210-c07601db5a92",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "939108e7-f105-4b7b-84dc-dae35e761267"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2524b0a5-2ea4-45fc-869c-cb7a7c01fb4a",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "387b1adb-03ff-48fe-be48-adc5a714e0d2",
                  "parentUUID": "2524b0a5-2ea4-45fc-869c-cb7a7c01fb4a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "387b1adb-03ff-48fe-be48-adc5a714e0d2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5873ce94-425c-49f6-a51a-b758a29c1c1d",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ab3f2caa-1054-4e8a-9afd-83bc9aefa93e",
                  "parentUUID": "5873ce94-425c-49f6-a51a-b758a29c1c1d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab3f2caa-1054-4e8a-9afd-83bc9aefa93e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "51a23a7d-4ecb-4414-876c-f7edf9fe8336",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    res.body.should.be.a('array');\n    agent.put('/api/testDescriptor/'+10000)\n    .send()\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));               \n});",
                  "err": {},
                  "uuid": "06009088-664d-488d-bc8b-a0cc34d05e00",
                  "parentUUID": "51a23a7d-4ecb-4414-876c-f7edf9fe8336",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "06009088-664d-488d-bc8b-a0cc34d05e00"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "68cafe7a-4515-41ed-9874-9a8e3c35e4c4",
              "title": "delete /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "55d0a68f-1f94-4638-9336-73a329c4b61f",
                  "parentUUID": "68cafe7a-4515-41ed-9874-9a8e3c35e4c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "55d0a68f-1f94-4638-9336-73a329c4b61f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "89134e7b-0991-4587-9146-79b76723b4e3",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2fd887f4-43e7-45e0-8e79-d81a6006ba39",
                  "parentUUID": "89134e7b-0991-4587-9146-79b76723b4e3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2fd887f4-43e7-45e0-8e79-d81a6006ba39"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "108f01e2-3b25-48d5-86d5-4c9b72b4a728",
              "title": "delete /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "90636074-2a64-4f31-b16d-dc480cbe8160",
                  "parentUUID": "108f01e2-3b25-48d5-86d5-4c9b72b4a728",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "90636074-2a64-4f31-b16d-dc480cbe8160"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8e8ddbb5-d6f2-480e-a70b-218194f273e5",
          "title": "Test TestResult CRUD",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fd7a8208-0eba-4f33-8bb9-03ded7c61bf5",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestResult CRUD removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cf75c671-df13-4825-8c29-551a89103375",
                  "parentUUID": "fd7a8208-0eba-4f33-8bb9-03ded7c61bf5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf75c671-df13-4825-8c29-551a89103375"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5bccaf4e-c863-4cee-b11d-ab33778850a2",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestResult CRUD removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "c769816a-2b38-4406-a799-5c59bb90aa08",
                  "parentUUID": "5bccaf4e-c863-4cee-b11d-ab33778850a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c769816a-2b38-4406-a799-5c59bb90aa08"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a9e99cf7-7ea5-4489-b2f9-821d888a5a72",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestResult CRUD removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "d1217c4e-303a-4caf-928a-409c41d35f45",
                  "parentUUID": "a9e99cf7-7ea5-4489-b2f9-821d888a5a72",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d1217c4e-303a-4caf-928a-409c41d35f45"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3376e5c5-c639-4d6b-973c-9908c337d151",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b3437458-8787-4d09-b4b1-4749ba1069c4",
                  "parentUUID": "3376e5c5-c639-4d6b-973c-9908c337d151",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b3437458-8787-4d09-b4b1-4749ba1069c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "07c9a40e-32d6-40c3-8ea3-6859cceafad9",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1cfd71b2-9f2b-4164-85c6-9f1ec0e08535",
                  "parentUUID": "07c9a40e-32d6-40c3-8ea3-6859cceafad9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1cfd71b2-9f2b-4164-85c6-9f1ec0e08535"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "940992ba-87af-4e27-ae99-b9cce3ce3eaa",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test TestResult CRUD get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3d760206-6ae4-4c43-b11e-8f6d617dcc68",
                  "parentUUID": "940992ba-87af-4e27-ae99-b9cce3ce3eaa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d760206-6ae4-4c43-b11e-8f6d617dcc68"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "63429e52-79f9-4d9f-9360-b9e388bdfeac",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cff8fa16-2996-45e7-a866-dff6b2886472",
                  "parentUUID": "63429e52-79f9-4d9f-9360-b9e388bdfeac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cff8fa16-2996-45e7-a866-dff6b2886472"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a89425a6-7c09-4ff9-a45c-424f35b2df60",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "224510fd-ef0e-41bb-9fee-344bebe38596",
                  "parentUUID": "a89425a6-7c09-4ff9-a45c-424f35b2df60",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "224510fd-ef0e-41bb-9fee-344bebe38596"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0b0ac174-468f-4250-91c9-6f7d6039f5ad",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestResult CRUD test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "814a3c03-56d1-4d93-bf6d-149ca1ce1e03",
                  "parentUUID": "0b0ac174-468f-4250-91c9-6f7d6039f5ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "814a3c03-56d1-4d93-bf6d-149ca1ce1e03"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4fdbb45c-c9fc-4998-a381-abff51abb7b3",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestResult CRUD get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d2f38be5-231e-4332-a0bc-dc4b8f863e53",
                  "parentUUID": "4fdbb45c-c9fc-4998-a381-abff51abb7b3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d2f38be5-231e-4332-a0bc-dc4b8f863e53"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "77fbec44-90f9-497d-979a-02507b3cd744",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3d9ec3ff-571b-4a13-af22-04853163b53d",
                  "parentUUID": "77fbec44-90f9-497d-979a-02507b3cd744",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d9ec3ff-571b-4a13-af22-04853163b53d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d4c2cffe-598a-4af0-94b6-cfc4e576de06",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "829aca7a-d9b0-43be-a4f9-ce253e2a1023",
                  "parentUUID": "d4c2cffe-598a-4af0-94b6-cfc4e576de06",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "829aca7a-d9b0-43be-a4f9-ce253e2a1023"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "834d9292-08cc-4653-927d-ec7c5651aefc",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.1 -> Add a quality test",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult FR 3.2.1 -> Add a quality test",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idtds = ids.getIdTestDescriptor();\nlet testResult = newTestResult(mytr.rfid, idtds[mytr.idTestDescriptor], mytr.Date, mytr.Result);\n//console.log(testResult);\nagent.post('/api/skuitems/testResult')\n.send(testResult)\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "68784873-905a-43d1-ae33-acd292969076",
                  "parentUUID": "834d9292-08cc-4653-927d-ec7c5651aefc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "68784873-905a-43d1-ae33-acd292969076"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cb67bde5-7975-4c23-839d-6d073a9c9b5e",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creates a new test Result for a certain sku item defined by RFID",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "383ee73d-12e1-4cd2-a089-4a1b229b78dc",
                  "parentUUID": "cb67bde5-7975-4c23-839d-6d073a9c9b5e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "383ee73d-12e1-4cd2-a089-4a1b229b78dc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "935b1bb4-45df-4e07-8253-1f2bbbc95a99",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creates a new test Result for a certain sku item defined by RFID",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "0b8d4990-5f01-438b-8379-7d81cfaf131d",
                  "parentUUID": "935b1bb4-45df-4e07-8253-1f2bbbc95a99",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0b8d4990-5f01-438b-8379-7d81cfaf131d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "69552161-eccf-41a1-9962-7b73b506285f",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8d3990e8-8ff7-430e-a6a8-e120cf4de585",
                  "parentUUID": "69552161-eccf-41a1-9962-7b73b506285f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d3990e8-8ff7-430e-a6a8-e120cf4de585"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7e0f1d30-42c2-45d4-b363-61ee9d8fcabc",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f5f59546-e75e-404f-b4a7-8fa4ae6db2c3",
                  "parentUUID": "7e0f1d30-42c2-45d4-b363-61ee9d8fcabc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f5f59546-e75e-404f-b4a7-8fa4ae6db2c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "82c214c1-53c2-4f19-8e62-0e125fd90bee",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a6ca7c04-5396-4082-8792-23b700e71d92",
                  "parentUUID": "82c214c1-53c2-4f19-8e62-0e125fd90bee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a6ca7c04-5396-4082-8792-23b700e71d92"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e4128afe-7fb8-4f3a-a480-ef5b86352a99",
              "title": " get /api/skuitems/:rfid/testResults/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get a specific test result with the rfid and id",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults/:id Get a specific test result with the rfid and id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    //console.log(res.body[0]);\n    agent.get('/api/skuitems/'+rfid+'/testResults/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "f2bb8e20-19df-48c3-9493-9738d9ceba0f",
                  "parentUUID": "e4128afe-7fb8-4f3a-a480-ef5b86352a99",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f2bb8e20-19df-48c3-9493-9738d9ceba0f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "98be7092-1d52-4dda-ae1d-2bea6efd3d6e",
              "title": " get /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get a specific test result with the rfid and id",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResult/:id Get a specific test result with the rfid and id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let alltdids = ids.getIdTestDescriptor();\n    console.log(alltdids);\n    agent.get('/api/skuitems/'+rfid+'/testResult/'+alltdids[0])\n    .then(function(res2){\n        console.log(res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "6da1b4b7-a956-4c2e-be98-b07bd12f1c53",
                  "parentUUID": "98be7092-1d52-4dda-ae1d-2bea6efd3d6e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6da1b4b7-a956-4c2e-be98-b07bd12f1c53"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f2154f94-ebd5-4dc3-832b-18732d5ebbcb",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.2 -> Modify a quality test",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id FR 3.2.2 -> Modify a quality test",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    console.log(\"this is it\", res.body);\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        console.log(\"I'm heeeeereeee\", res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "e9b51f7e-8b59-4b71-ae5d-9eadbe456949",
                  "parentUUID": "f2154f94-ebd5-4dc3-832b-18732d5ebbcb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9b51f7e-8b59-4b71-ae5d-9eadbe456949"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2cc59586-3f84-45bd-865f-311f8bf74a00",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a test results given its rfid and id and new fields",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "52a625fe-57d0-4532-ae93-a92b3bd4a8ec",
                  "parentUUID": "2cc59586-3f84-45bd-865f-311f8bf74a00",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52a625fe-57d0-4532-ae93-a92b3bd4a8ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "18f8a04c-9999-4fb4-a9eb-2382ed55a36b",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a test results given its rfid and id and new fields",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "e0b16019-c16d-4f62-842b-054e1f9e803f",
                  "parentUUID": "18f8a04c-9999-4fb4-a9eb-2382ed55a36b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e0b16019-c16d-4f62-842b-054e1f9e803f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c9a437fe-deff-4061-9aeb-fb001c735927",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5bf88a22-e807-4a8d-8fe0-d338c0ca7d3a",
                  "parentUUID": "c9a437fe-deff-4061-9aeb-fb001c735927",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bf88a22-e807-4a8d-8fe0-d338c0ca7d3a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4bf5427a-4034-4064-843a-920d05e76d27",
              "title": " delete /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.3 -> Delete a quality test",
                  "fullTitle": "Test TestResult CRUD  delete /api/skuitems/:rfid/testResult/:id FR 3.2.3 -> Delete a quality test",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    // console.log(res.body);\n    agent.delete('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "ffe81ae0-d983-4786-9c0b-0b3551662a79",
                  "parentUUID": "4bf5427a-4034-4064-843a-920d05e76d27",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ffe81ae0-d983-4786-9c0b-0b3551662a79"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1dced644-27f4-4341-8d21-ae8c366f06ae",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cea9bf59-0724-459a-b112-ab5756465cff",
                  "parentUUID": "1dced644-27f4-4341-8d21-ae8c366f06ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cea9bf59-0724-459a-b112-ab5756465cff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "55d10c1e-5cb7-4a5e-9421-907b710d26c6",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestResult CRUD removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "9526677c-32b3-410b-a581-b7c47ecbeea7",
                  "parentUUID": "55d10c1e-5cb7-4a5e-9421-907b710d26c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9526677c-32b3-410b-a581-b7c47ecbeea7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "57ba0173-4713-4f9c-aa0f-31131ef075e2",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestResult CRUD removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "a4bc3176-6451-4378-a94f-e897386dcaac",
                  "parentUUID": "57ba0173-4713-4f9c-aa0f-31131ef075e2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4bc3176-6451-4378-a94f-e897386dcaac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8efbea0a-0eb6-48b2-a2f1-e53bbe74ef9c",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestResult CRUD removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7d37566d-be09-4c1b-9e61-6a5658faefe8",
                  "parentUUID": "8efbea0a-0eb6-48b2-a2f1-e53bbe74ef9c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d37566d-be09-4c1b-9e61-6a5658faefe8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dfeab297-0d4e-47d0-a8f2-6792f08061c7",
          "title": "Test user CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d1e3d965-9bce-41d9-bbc4-7ad44ffb6e0e",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "408823bf-db9f-42a1-90c5-ee5468897d4e",
                  "parentUUID": "d1e3d965-9bce-41d9-bbc4-7ad44ffb6e0e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "408823bf-db9f-42a1-90c5-ee5468897d4e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bc780fe8-3c67-460c-b645-c9f345ba8953",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "305ea0b6-3b8a-48b4-aabe-06deae0302f5",
                  "parentUUID": "bc780fe8-3c67-460c-b645-c9f345ba8953",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "305ea0b6-3b8a-48b4-aabe-06deae0302f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "edfcd489-68c0-4d9c-8db0-342175dc7b66",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "dcad4890-135f-4302-a1c3-e205d33d0ca8",
                  "parentUUID": "edfcd489-68c0-4d9c-8db0-342175dc7b66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dcad4890-135f-4302-a1c3-e205d33d0ca8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "47d31faa-0493-4d2d-ac2a-a919ec33b9cc",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4b8df86e-977c-4732-b158-5c8d2015726c",
                  "parentUUID": "47d31faa-0493-4d2d-ac2a-a919ec33b9cc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b8df86e-977c-4732-b158-5c8d2015726c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0a2ec1b8-08c3-4e3a-91e1-7e0b92a36e53",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test user CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 60,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e0b80dc7-5877-45eb-8d48-6fbc9373642c",
                  "parentUUID": "0a2ec1b8-08c3-4e3a-91e1-7e0b92a36e53",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e0b80dc7-5877-45eb-8d48-6fbc9373642c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 60,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b316599d-9e61-47b1-926a-bf2150e02425",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "26906e9f-f095-4088-94fa-c4d3b7fbc29c",
                  "parentUUID": "b316599d-9e61-47b1-926a-bf2150e02425",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26906e9f-f095-4088-94fa-c4d3b7fbc29c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f22c6de4-e4c9-488f-b3d1-6e93e83809e6",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "31aab5cb-dbc1-4db9-880d-6c23b93331d4",
                  "parentUUID": "f22c6de4-e4c9-488f-b3d1-6e93e83809e6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31aab5cb-dbc1-4db9-880d-6c23b93331d4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f58efdb8-bec2-46ed-aae6-cf9fd09475ce",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2dcad7a1-0181-417a-a2f9-c3dc7ab28e17",
                  "parentUUID": "f58efdb8-bec2-46ed-aae6-cf9fd09475ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2dcad7a1-0181-417a-a2f9-c3dc7ab28e17"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "88ab2f12-6b32-4007-8dfc-4af7f2797809",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d8d80853-d94c-4e0e-a625-f064bf03f605",
                  "parentUUID": "88ab2f12-6b32-4007-8dfc-4af7f2797809",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d8d80853-d94c-4e0e-a625-f064bf03f605"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6cb6209a-7434-4ae7-a552-f01b433a5b94",
          "title": "Test RestockOrder CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ce3f82e0-9579-4216-9e61-790162f0b662",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "437482e5-1637-4403-bc1f-d17d54d13917",
                  "parentUUID": "ce3f82e0-9579-4216-9e61-790162f0b662",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "437482e5-1637-4403-bc1f-d17d54d13917"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "763dbfc4-6865-469e-8390-7085f5da042a",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "4c75b4b9-7c5b-4e9d-8e95-9915bbbe1895",
                  "parentUUID": "763dbfc4-6865-469e-8390-7085f5da042a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c75b4b9-7c5b-4e9d-8e95-9915bbbe1895"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b9db8aa0-e7ea-415b-b5f9-9204d0fc1844",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test RestockOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "99a605fa-3dbe-4bc8-b172-a25b562e46da",
                  "parentUUID": "b9db8aa0-e7ea-415b-b5f9-9204d0fc1844",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "99a605fa-3dbe-4bc8-b172-a25b562e46da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b3654cf9-98f4-40d8-be0c-49b6ce443ecb",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test RestockOrder CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "72dd0ac8-c705-4392-815e-53165c6f467b",
                  "parentUUID": "b3654cf9-98f4-40d8-be0c-49b6ce443ecb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "72dd0ac8-c705-4392-815e-53165c6f467b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bb2c6536-4468-4b6c-a335-6a59ade5f0d4",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9917ae4e-d4fe-4b9f-bc9b-8d88530eabe5",
                  "parentUUID": "bb2c6536-4468-4b6c-a335-6a59ade5f0d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9917ae4e-d4fe-4b9f-bc9b-8d88530eabe5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b69f7f39-283d-47f6-af97-2a86f951eeaf",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "971369c8-efd3-4576-b4ad-4156df2ec933",
                  "parentUUID": "b69f7f39-283d-47f6-af97-2a86f951eeaf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "971369c8-efd3-4576-b4ad-4156df2ec933"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1d5d634b-64b8-40b0-90e1-49eb43031648",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test RestockOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "64009d5d-460b-4544-9bef-49f187e57fb9",
                  "parentUUID": "1d5d634b-64b8-40b0-90e1-49eb43031648",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "64009d5d-460b-4544-9bef-49f187e57fb9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cc7c4f8e-1f13-4892-bfa1-aa18f24ca8a5",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2ed88ea6-d444-4d1e-a404-ded78a05a345",
                  "parentUUID": "cc7c4f8e-1f13-4892-bfa1-aa18f24ca8a5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2ed88ea6-d444-4d1e-a404-ded78a05a345"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0ac0d42d-3178-49de-8be9-83fc0740bf2b",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 60,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "13cd247f-b280-427c-a7fd-8163fd982c63",
                  "parentUUID": "0ac0d42d-3178-49de-8be9-83fc0740bf2b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "13cd247f-b280-427c-a7fd-8163fd982c63"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 60,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "188b139c-a9da-40c0-991a-c2bce23e817d",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6142613d-77bb-4188-9f6f-5d69a9285fa5",
                  "parentUUID": "188b139c-a9da-40c0-991a-c2bce23e817d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6142613d-77bb-4188-9f6f-5d69a9285fa5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cf09cc9a-96d2-4f74-8cf8-114b2e9411b9",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8b4ef37c-6b64-456f-827e-da004cf3614a",
                  "parentUUID": "cf09cc9a-96d2-4f74-8cf8-114b2e9411b9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8b4ef37c-6b64-456f-827e-da004cf3614a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e12e5c0b-5f1a-4dbb-8ea7-5713b39b58a2",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cbe5201f-f65c-4a3e-a1eb-6e6c705e2379",
                  "parentUUID": "e12e5c0b-5f1a-4dbb-8ea7-5713b39b58a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cbe5201f-f65c-4a3e-a1eb-6e6c705e2379"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9fd46025-71e8-435a-a7a5-4e4d2264a1ec",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "410bb7fd-3c05-4da3-a6f4-54e810b98613",
                  "parentUUID": "9fd46025-71e8-435a-a7a5-4e4d2264a1ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "410bb7fd-3c05-4da3-a6f4-54e810b98613"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ca8107c8-e803-4b4c-8a90-f403364285b1",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "de3dd293-5c68-4127-9165-55acd4998d18",
                  "parentUUID": "ca8107c8-e803-4b4c-8a90-f403364285b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de3dd293-5c68-4127-9165-55acd4998d18"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e6a3e988-5ad8-4871-88ee-9e0a3cb6d0b9",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bd8ee13d-5796-456d-8ef3-8062cfeb3a80",
                  "parentUUID": "e6a3e988-5ad8-4871-88ee-9e0a3cb6d0b9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd8ee13d-5796-456d-8ef3-8062cfeb3a80"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "65ce91cf-986c-40a7-80ea-a12ff83ce400",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a243be01-767b-43f1-9cf7-3cdbec05782f",
                  "parentUUID": "65ce91cf-986c-40a7-80ea-a12ff83ce400",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a243be01-767b-43f1-9cf7-3cdbec05782f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "53d3e1e7-5c40-4a57-bf6c-51e58f0d324c",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet firstSupplierId;\nagent.get('/api/suppliers')\n.then(function(res){\n    firstSupplierId = res.body[0].id;\n    agent.post('/api/restockOrder')\n    .send(myrestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "6a9ab63c-d7ef-4aeb-b3af-262dd2fdb602",
                  "parentUUID": "53d3e1e7-5c40-4a57-bf6c-51e58f0d324c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6a9ab63c-d7ef-4aeb-b3af-262dd2fdb602"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3bebdd1f-1bf0-4003-8085-4f3677195b04",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "05dce1a7-defa-43c5-9ab6-9e3a886171d9",
                  "parentUUID": "3bebdd1f-1bf0-4003-8085-4f3677195b04",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05dce1a7-defa-43c5-9ab6-9e3a886171d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f134821a-316b-4766-951e-c60fa0fc5adf",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0ccc2ce3-de91-4981-aa64-e79dc2d9b0f5",
                  "parentUUID": "f134821a-316b-4766-951e-c60fa0fc5adf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ccc2ce3-de91-4981-aa64-e79dc2d9b0f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3178f4dd-4298-4e75-93c4-48495fb9e0b8",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "1ecad4fe-8512-4610-ba7c-56b0f12274c3",
                  "parentUUID": "3178f4dd-4298-4e75-93c4-48495fb9e0b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ecad4fe-8512-4610-ba7c-56b0f12274c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cad03fdc-383d-40a7-a236-7881093adbda",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "6ce83dc4-c5b8-495c-bbc7-11982692e5be",
                  "parentUUID": "cad03fdc-383d-40a7-a236-7881093adbda",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6ce83dc4-c5b8-495c-bbc7-11982692e5be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e8e1d460-d9b1-4fa3-9a94-9a9123b7846f",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "1ee719ee-dfac-4883-9e0c-721dc4bc8952",
                  "parentUUID": "e8e1d460-d9b1-4fa3-9a94-9a9123b7846f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ee719ee-dfac-4883-9e0c-721dc4bc8952"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "93acf6cd-80a7-420f-82ca-fbedab19cc66",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "88a759ce-c745-498b-8ad0-fb09e204b690",
                  "parentUUID": "93acf6cd-80a7-420f-82ca-fbedab19cc66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "88a759ce-c745-498b-8ad0-fb09e204b690"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e91c21dd-0e80-42f4-86cd-59fc36d6935d",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "2f5bbe8a-7b20-4cf8-bb2d-980562f0fb14",
                  "parentUUID": "e91c21dd-0e80-42f4-86cd-59fc36d6935d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2f5bbe8a-7b20-4cf8-bb2d-980562f0fb14"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "19a9606f-29e0-4d5a-b588-55c00e8b6da2",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bb647e21-a1a1-4245-ad34-f18586f8875c",
                  "parentUUID": "19a9606f-29e0-4d5a-b588-55c00e8b6da2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bb647e21-a1a1-4245-ad34-f18586f8875c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "349cd69d-642b-4893-9adf-0e7edf149a76",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":allskuitems})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "3f6fe4b0-83b0-406c-a641-e0c185853825",
                  "parentUUID": "349cd69d-642b-4893-9adf-0e7edf149a76",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3f6fe4b0-83b0-406c-a641-e0c185853825"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8e801730-bcb8-427b-b5c3-4db2ac5b5d12",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send(null)\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "7147aab7-888f-45b8-a7dc-6ea727b648ee",
                  "parentUUID": "8e801730-bcb8-427b-b5c3-4db2ac5b5d12",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7147aab7-888f-45b8-a7dc-6ea727b648ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6705b68d-0cbb-4729-bfac-d20df0c949d1",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "31c8d9d4-cd9b-4664-81da-58e4c9ad85ff",
                  "parentUUID": "6705b68d-0cbb-4729-bfac-d20df0c949d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31c8d9d4-cd9b-4664-81da-58e4c9ad85ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "57ae54e2-a0d6-4c82-9c4b-9fbaab912bfb",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "9f3c5127-e175-4c0a-b7e2-c98ecf2d8c2e",
                  "parentUUID": "57ae54e2-a0d6-4c82-9c4b-9fbaab912bfb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f3c5127-e175-4c0a-b7e2-c98ecf2d8c2e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cccbd564-ab14-4a1e-ad48-058f75cab2bd",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "92bcd402-01d3-4647-9861-0f9ef7cd2375",
                  "parentUUID": "cccbd564-ab14-4a1e-ad48-058f75cab2bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "92bcd402-01d3-4647-9861-0f9ef7cd2375"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "58e6aa90-ce8e-4ed7-8832-09379f9d1c7b",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 10000;\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2021/12/29\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "b2eb8a6b-d5c6-4409-893c-d511c4a93c8d",
                  "parentUUID": "58e6aa90-ce8e-4ed7-8832-09379f9d1c7b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2eb8a6b-d5c6-4409-893c-d511c4a93c8d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3b9aee22-73c2-4324-a64a-cdf4edcd9551",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "a00b4f6b-7f73-4991-9f15-3cd1de1e8c78",
                  "parentUUID": "3b9aee22-73c2-4324-a64a-cdf4edcd9551",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a00b4f6b-7f73-4991-9f15-3cd1de1e8c78"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d4938aaa-740e-4e0f-ac0f-5f22571704dc",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "cb5b48ef-cf8e-416d-b8df-c7565f40b588",
                  "parentUUID": "d4938aaa-740e-4e0f-ac0f-5f22571704dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb5b48ef-cf8e-416d-b8df-c7565f40b588"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b38d8536-19f5-41d5-8570-e9a1a421bac7",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test RestockOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "1bcff967-f0c2-412c-aeca-f820852ac51b",
                  "parentUUID": "b38d8536-19f5-41d5-8570-e9a1a421bac7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1bcff967-f0c2-412c-aeca-f820852ac51b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b64227b3-04c4-4d9b-9005-32291ab067f3",
          "title": "Test ReturnOrder CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "91d6687b-1293-4012-82f7-94ba54e0c108",
              "title": "Removing all return orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test ReturnOrder CRUD features Removing all return orders Getting and removing",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/returnOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e1326604-939a-45e4-bc32-a921c62aa5fe",
                  "parentUUID": "91d6687b-1293-4012-82f7-94ba54e0c108",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1326604-939a-45e4-bc32-a921c62aa5fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8e2918a5-0329-4d57-88cf-c523b78a8723",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test ReturnOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "3ce13671-275a-4fea-ad79-95636e27930c",
                  "parentUUID": "8e2918a5-0329-4d57-88cf-c523b78a8723",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3ce13671-275a-4fea-ad79-95636e27930c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c82aa03f-744b-4385-95b6-eda974108a55",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test ReturnOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "04160dc2-df59-4b1a-a778-6b2a0575c7e2",
                  "parentUUID": "c82aa03f-744b-4385-95b6-eda974108a55",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "04160dc2-df59-4b1a-a778-6b2a0575c7e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "348686cc-85eb-4394-877b-76290afc6065",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test ReturnOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "29df748b-d0ff-47ef-a9e4-bc3f3e585600",
                  "parentUUID": "348686cc-85eb-4394-877b-76290afc6065",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "29df748b-d0ff-47ef-a9e4-bc3f3e585600"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e675fb72-c0d5-401a-b287-b294cf79403d",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test ReturnOrder CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4bb52ba0-9fda-4842-9ac8-08c2049bd3ff",
                  "parentUUID": "e675fb72-c0d5-401a-b287-b294cf79403d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4bb52ba0-9fda-4842-9ac8-08c2049bd3ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "585a777c-b267-477a-aeda-3f1f3a237216",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d08b99df-b09e-4075-938c-c152ab85d967",
                  "parentUUID": "585a777c-b267-477a-aeda-3f1f3a237216",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d08b99df-b09e-4075-938c-c152ab85d967"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a4fa5a47-bd48-4c5f-9764-e8a6700d00a2",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "34b2cfd2-67f0-4db9-a881-dfc9d045aab6",
                  "parentUUID": "a4fa5a47-bd48-4c5f-9764-e8a6700d00a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "34b2cfd2-67f0-4db9-a881-dfc9d045aab6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "903a6f2e-3d83-4455-8c22-a3e3009664ed",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test ReturnOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9dc82587-eb21-44b7-9314-4ce53a2f1309",
                  "parentUUID": "903a6f2e-3d83-4455-8c22-a3e3009664ed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9dc82587-eb21-44b7-9314-4ce53a2f1309"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b62daf79-daf7-43dd-b46f-88cb65734730",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ea3e6161-5452-4a23-a0ac-7a848ca8a848",
                  "parentUUID": "b62daf79-daf7-43dd-b46f-88cb65734730",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ea3e6161-5452-4a23-a0ac-7a848ca8a848"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f34cad34-ea01-404e-9181-f1ece28d8be1",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 61,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3211142c-b0ed-4903-ae3f-9415df743648",
                  "parentUUID": "f34cad34-ea01-404e-9181-f1ece28d8be1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3211142c-b0ed-4903-ae3f-9415df743648"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 61,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c2cf203d-5bd8-45d5-8c96-60e11a6b471f",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d5b2c32e-bb75-405c-ac18-9e6d786eaa12",
                  "parentUUID": "c2cf203d-5bd8-45d5-8c96-60e11a6b471f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5b2c32e-bb75-405c-ac18-9e6d786eaa12"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "330c2522-4f87-4fbe-a4b1-47dd703647e9",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9ceda0b9-e43b-455c-a880-358f1d04a5f9",
                  "parentUUID": "330c2522-4f87-4fbe-a4b1-47dd703647e9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9ceda0b9-e43b-455c-a880-358f1d04a5f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "57cf9dc7-61c7-44e4-b682-7521cc3523bd",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "777d4978-e913-4059-b773-bb589c5e52f2",
                  "parentUUID": "57cf9dc7-61c7-44e4-b682-7521cc3523bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "777d4978-e913-4059-b773-bb589c5e52f2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c7637757-8426-45f9-836c-a4981baf4266",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "7e19398a-b1ba-455e-9c2e-69312074f5a1",
                  "parentUUID": "c7637757-8426-45f9-836c-a4981baf4266",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7e19398a-b1ba-455e-9c2e-69312074f5a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "451aae06-dbf4-4980-a790-6fe5523280d7",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "00e225a5-5e63-4b33-bf15-9811d0a78ca9",
                  "parentUUID": "451aae06-dbf4-4980-a790-6fe5523280d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "00e225a5-5e63-4b33-bf15-9811d0a78ca9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e4063f28-9ac0-4590-bc30-b7a2b15052d5",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "71d78448-9d5b-4a09-8668-999f41f0bc31",
                  "parentUUID": "e4063f28-9ac0-4590-bc30-b7a2b15052d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71d78448-9d5b-4a09-8668-999f41f0bc31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1a5f5ddc-2320-4185-bb2f-60ea4eb65019",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7b331051-c752-41a2-b155-6cc47c330aa2",
                  "parentUUID": "1a5f5ddc-2320-4185-bb2f-60ea4eb65019",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b331051-c752-41a2-b155-6cc47c330aa2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cce2c754-2130-4345-b270-bcd24d443176",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "30e06d4d-c2a2-413b-8899-61c789ac543b",
                  "parentUUID": "cce2c754-2130-4345-b270-bcd24d443176",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "30e06d4d-c2a2-413b-8899-61c789ac543b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f70ecd8b-35e2-47ee-86ac-881761634de5",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "ed77db57-ca7d-4b21-9d50-34c35e9a178b",
                  "parentUUID": "f70ecd8b-35e2-47ee-86ac-881761634de5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed77db57-ca7d-4b21-9d50-34c35e9a178b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "06f872ad-6d2d-4dd6-8674-df7c858fd57a",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5a800146-32e9-486d-8b08-3e6dfaccf1f3",
                  "parentUUID": "06f872ad-6d2d-4dd6-8674-df7c858fd57a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a800146-32e9-486d-8b08-3e6dfaccf1f3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d4d5d85f-2c14-49d1-a830-bf5e9414b42e",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7f2a629c-9c48-4abf-b67c-d1dcf5a83051",
                  "parentUUID": "d4d5d85f-2c14-49d1-a830-bf5e9414b42e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7f2a629c-9c48-4abf-b67c-d1dcf5a83051"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "beff80d0-3940-4511-a11d-8cf0362b1345",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9816de6e-1dc7-4ed6-9df6-a264f037b3ed",
                  "parentUUID": "beff80d0-3940-4511-a11d-8cf0362b1345",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9816de6e-1dc7-4ed6-9df6-a264f037b3ed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c839ce35-8644-4358-a1e4-cf51f2f9ae09",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b9f9ddec-a323-4edc-9341-ba4977bc32f5",
                  "parentUUID": "c839ce35-8644-4358-a1e4-cf51f2f9ae09",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9f9ddec-a323-4edc-9341-ba4977bc32f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4a0cca03-4f7f-4c87-bc14-628f6c63f5d8",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/returnOrder')\n.send(myretord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "52af1168-1863-4e13-9c70-a210c37b5d1a",
                  "parentUUID": "4a0cca03-4f7f-4c87-bc14-628f6c63f5d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52af1168-1863-4e13-9c70-a210c37b5d1a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2bcbbb73-7a8a-449a-a316-d9e55d40a825",
              "title": " get /api/returnOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all return orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders  get all return orders",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idrestockorders = ids.getIdRestockOrdersIssued();\n    let idretord = [];\n    res.body.length.should.be.eql(myretord.length);\n    for(let i = 0; i<res.body.length; i++){\n        idretord[i] = res.body[i].id;\n        res.body[i].returnDate.should.equal(myretord[i].returnDate);\n        res.body[i].restockOrderId.should.equal(idrestockorders[myretord[i].restockOrderId]);\n    }\n    ids.setIdReturnOrders(idretord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5d21c79d-f008-404a-8db9-4e9ed15f574f",
                  "parentUUID": "2bcbbb73-7a8a-449a-a316-d9e55d40a825",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d21c79d-f008-404a-8db9-4e9ed15f574f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "46d29557-7d03-411d-a76f-191576c5d608",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsret = ids.getIdReturnOrders();\n//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+idsret[id])\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.returnDate.should.equal(myretord.returnDate);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ee6780df-05c9-4d8e-8448-ab65edfd9362",
                  "parentUUID": "46d29557-7d03-411d-a76f-191576c5d608",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ee6780df-05c9-4d8e-8448-ab65edfd9362"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "218b6a86-be0f-4f9c-bc7f-8df44ea98a38",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7b643747-47c2-4c04-8d18-9f00b9604f89",
                  "parentUUID": "218b6a86-be0f-4f9c-bc7f-8df44ea98a38",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b643747-47c2-4c04-8d18-9f00b9604f89"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2ff150b7-3368-4bec-aea1-7fe352b3e6de",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "49ebf0fb-65fe-44be-b194-6bd770c5fd26",
                  "parentUUID": "2ff150b7-3368-4bec-aea1-7fe352b3e6de",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49ebf0fb-65fe-44be-b194-6bd770c5fd26"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3393f668-48a4-46fe-87ec-c9094463baec",
          "title": "Test Internal Order CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f562042e-4e24-41d9-9a18-da5e03fa2eee",
              "title": "Removing all Internal Orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Interna Orders",
                  "fullTitle": "Test Internal Order CRUD features Removing all Internal Orders Getting Interna Orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/internalOrders/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "9c4135e2-b66d-4c09-bb85-910788ccfaf3",
                  "parentUUID": "f562042e-4e24-41d9-9a18-da5e03fa2eee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c4135e2-b66d-4c09-bb85-910788ccfaf3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "91043db4-78f1-49c0-8626-edeaba97dc4a",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Internal Order CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "086b9344-be50-488a-aa16-ef5b663ccb8e",
                  "parentUUID": "91043db4-78f1-49c0-8626-edeaba97dc4a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "086b9344-be50-488a-aa16-ef5b663ccb8e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "892ddeaf-0dbd-4cc7-973f-4b55cf68d76b",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Internal Order CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "8bd5bc43-b9f4-4c4f-b8f2-30f0078668c6",
                  "parentUUID": "892ddeaf-0dbd-4cc7-973f-4b55cf68d76b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8bd5bc43-b9f4-4c4f-b8f2-30f0078668c6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "124e453e-ac21-4275-8d39-4f41bb83e1cd",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test Internal Order CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d45671cf-c014-4f94-89e8-ba836b26b820",
                  "parentUUID": "124e453e-ac21-4275-8d39-4f41bb83e1cd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d45671cf-c014-4f94-89e8-ba836b26b820"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "039256e2-8dc1-4d49-a94a-576a90dcbdb6",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "89ca9e8d-0f48-4097-bc10-334052297fde",
                  "parentUUID": "039256e2-8dc1-4d49-a94a-576a90dcbdb6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "89ca9e8d-0f48-4097-bc10-334052297fde"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "34f4a574-2578-4889-92aa-171acf432d41",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f0e1821a-9ebb-4ea9-aad7-b21b7fc628e0",
                  "parentUUID": "34f4a574-2578-4889-92aa-171acf432d41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0e1821a-9ebb-4ea9-aad7-b21b7fc628e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2de0c8ed-1a1e-49bf-b191-339781a8adde",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test Internal Order CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5d3837fa-e162-4810-88e9-8357f0082d72",
                  "parentUUID": "2de0c8ed-1a1e-49bf-b191-339781a8adde",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d3837fa-e162-4810-88e9-8357f0082d72"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "42108442-a733-47b0-8576-1ac2f3c41a87",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Internal Order CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 59,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1d376d9d-148b-4cab-b33a-1ca989bcc9a4",
                  "parentUUID": "42108442-a733-47b0-8576-1ac2f3c41a87",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1d376d9d-148b-4cab-b33a-1ca989bcc9a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d1c18419-5c0b-4471-a032-399e3d3fc5fb",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                  "err": {},
                  "uuid": "8efb5a53-a3bf-4467-afc2-419524c9b074",
                  "parentUUID": "d1c18419-5c0b-4471-a032-399e3d3fc5fb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8efb5a53-a3bf-4467-afc2-419524c9b074"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 20,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2389bf17-ab7b-41be-a109-e2bddc53c3ee",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                  "err": {},
                  "uuid": "27e6a425-5662-4b50-991b-5facf33c9b51",
                  "parentUUID": "2389bf17-ab7b-41be-a109-e2bddc53c3ee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27e6a425-5662-4b50-991b-5facf33c9b51"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 24,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f0560131-8f2e-42d2-b3da-1189a94427f6",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(currentInternalOrders[ith]);\nagent.post('/api/internalOrders')\n.send(intord)\n.then(function(res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "79ae822a-3443-4d33-af8c-1629955f6e94",
                  "parentUUID": "f0560131-8f2e-42d2-b3da-1189a94427f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79ae822a-3443-4d33-af8c-1629955f6e94"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4b085718-53cb-46cb-a6d0-bbcdc15bdc6b",
              "title": " get /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all internal orders",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1200c6cf-7bfd-4f1f-a967-7f0c0a8dfc09",
                  "parentUUID": "4b085718-53cb-46cb-a6d0-bbcdc15bdc6b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1200c6cf-7bfd-4f1f-a967-7f0c0a8dfc09"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f2bedf2d-0ed5-439a-9060-195eb1c105a8",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1ef147b6-ea4b-441a-87d0-d06d19b0b853",
                  "parentUUID": "f2bedf2d-0ed5-439a-9060-195eb1c105a8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ef147b6-ea4b-441a-87d0-d06d19b0b853"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "85d1c4ef-c7b0-4589-8255-2bebc8bd28a4",
              "title": " put /api/internalOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify the state of an IO",
                  "fullTitle": "Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "dc7be58b-d52e-4dbe-bccb-17213d6109c6",
                  "parentUUID": "85d1c4ef-c7b0-4589-8255-2bebc8bd28a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc7be58b-d52e-4dbe-bccb-17213d6109c6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0f636a56-8338-404f-be6f-4540104fc2ac",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0838777f-fdce-4bd0-979d-5ab5ae2ebd49",
                  "parentUUID": "0f636a56-8338-404f-be6f-4540104fc2ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0838777f-fdce-4bd0-979d-5ab5ae2ebd49"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "73f4f67e-b92b-4c60-a0c0-7d9883b2a04e",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersAccepted')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order accepted', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "707499ef-b476-4c52-9136-02583f4558ac",
                  "parentUUID": "73f4f67e-b92b-4c60-a0c0-7d9883b2a04e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "707499ef-b476-4c52-9136-02583f4558ac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7002e39d-d3f8-46c0-a008-d058b337122a",
              "title": " put /api/internalOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify the state of an IO",
                  "fullTitle": "Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "142ba2c7-20c7-4e37-beb5-807cb792bd56",
                  "parentUUID": "7002e39d-d3f8-46c0-a008-d058b337122a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "142ba2c7-20c7-4e37-beb5-807cb792bd56"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "16b1b30d-4237-48b8-967b-767899680454",
              "title": " get /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all internal orders",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ce38870a-ba93-43e8-b685-2ccdfd250778",
                  "parentUUID": "16b1b30d-4237-48b8-967b-767899680454",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ce38870a-ba93-43e8-b685-2ccdfd250778"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c22fbde3-8175-4818-80f1-a8fe1b9b9b9a",
          "title": "Test Item CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c2ca00c1-9554-4bdd-8eee-cc8da0af8115",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Item CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "5bf4bba8-056f-4abe-9590-1e56c4368675",
                  "parentUUID": "c2ca00c1-9554-4bdd-8eee-cc8da0af8115",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bf4bba8-056f-4abe-9590-1e56c4368675"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c572f2b1-b1fd-4972-a463-1d3f34f84783",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Item CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "3f8670fd-3e5d-42d7-8564-6a4182e0b92f",
                  "parentUUID": "c572f2b1-b1fd-4972-a463-1d3f34f84783",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3f8670fd-3e5d-42d7-8564-6a4182e0b92f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6766dc46-b0b6-42e9-a16b-75210b4b81f1",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test Item CRUD features removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5f60cc5c-7cbf-4824-b4c7-c1dbda5f73af",
                  "parentUUID": "6766dc46-b0b6-42e9-a16b-75210b4b81f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f60cc5c-7cbf-4824-b4c7-c1dbda5f73af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "452eb5b6-1b78-46bd-95f7-7ce039283f59",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test Item CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1b3ad1fd-fb99-499e-82fb-4b16d3088e87",
                  "parentUUID": "452eb5b6-1b78-46bd-95f7-7ce039283f59",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b3ad1fd-fb99-499e-82fb-4b16d3088e87"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c0e9ae51-019b-43b6-bcd0-0cc8b9144a34",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "90f4f2a6-86e6-4648-9fa8-7c6c57e086d9",
                  "parentUUID": "c0e9ae51-019b-43b6-bcd0-0cc8b9144a34",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "90f4f2a6-86e6-4648-9fa8-7c6c57e086d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "60472a3a-59d1-44e5-8ae0-bc26da6aa0cb",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b563ee29-aa4a-41fa-b855-b5512a25d71c",
                  "parentUUID": "60472a3a-59d1-44e5-8ae0-bc26da6aa0cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b563ee29-aa4a-41fa-b855-b5512a25d71c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a34a5ae9-b1e8-4ed2-889e-6bc4a6d29614",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test Item CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b49131ab-54e9-4da4-80d1-047d03cef4ad",
                  "parentUUID": "a34a5ae9-b1e8-4ed2-889e-6bc4a6d29614",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b49131ab-54e9-4da4-80d1-047d03cef4ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7f632419-5eeb-4ed7-9bbd-02590cf2e6a6",
              "title": "Removing all Items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Items",
                  "fullTitle": "Test Item CRUD features Removing all Items Getting Items",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "e1161918-ad10-4d40-b981-c6da8a368353",
                  "parentUUID": "7f632419-5eeb-4ed7-9bbd-02590cf2e6a6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1161918-ad10-4d40-b981-c6da8a368353"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cb3d5330-7984-4984-bc74-3de5bd14e952",
              "title": " get /api/items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all items",
                  "fullTitle": "Test Item CRUD features  get /api/items Getting all items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "10205859-5820-4752-8c2f-d601cf0ae3ea",
                  "parentUUID": "cb3d5330-7984-4984-bc74-3de5bd14e952",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "10205859-5820-4752-8c2f-d601cf0ae3ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "359a09b1-b3bf-42f9-b504-9541053553bf",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4b6b99eb-b0be-446a-8df6-586cf604bea5",
                  "parentUUID": "359a09b1-b3bf-42f9-b504-9541053553bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b6b99eb-b0be-446a-8df6-586cf604bea5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "85d0b99a-9642-4bdb-9415-b271c255964f",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b6b93433-7b3a-4109-9fbf-f7da820b9d55",
                  "parentUUID": "85d0b99a-9642-4bdb-9415-b271c255964f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b6b93433-7b3a-4109-9fbf-f7da820b9d55"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ba0ed58d-6dd0-4cd3-be34-d4ca0b3af611",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test Item CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8eb4661b-4b58-407e-8100-1a9afdb84d5c",
                  "parentUUID": "ba0ed58d-6dd0-4cd3-be34-d4ca0b3af611",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8eb4661b-4b58-407e-8100-1a9afdb84d5c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "342d4ee3-5690-4f1a-9cb2-3bd7b298afaf",
              "title": "post /api/item/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding item details",
                  "fullTitle": "Test Item CRUD features post /api/item/ Adding item details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "3071f0db-5199-441d-b07d-ec3802812995",
                  "parentUUID": "342d4ee3-5690-4f1a-9cb2-3bd7b298afaf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3071f0db-5199-441d-b07d-ec3802812995"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "24958578-4216-41e9-be43-c05d4b77d298",
              "title": "post /api/item/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding item details",
                  "fullTitle": "Test Item CRUD features post /api/item/ Adding item details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "b6da6abb-c013-4635-ac2a-3033eac4f843",
                  "parentUUID": "24958578-4216-41e9-be43-c05d4b77d298",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b6da6abb-c013-4635-ac2a-3033eac4f843"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fc6659c0-e5cb-45b8-b17b-c147e9f46534",
              "title": " get /api/items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all items",
                  "fullTitle": "Test Item CRUD features  get /api/items Getting all items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "c3654472-a3e0-4def-8c76-d4352649e1d3",
                  "parentUUID": "fc6659c0-e5cb-45b8-b17b-c147e9f46534",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c3654472-a3e0-4def-8c76-d4352649e1d3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bb963e2d-5ff0-4aeb-9098-c7d1af5b7e56",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+itemid)\n.then(r => {\n    let idskus = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(r.status, expCode);\n    if (r.status == 200) {\n        r.body.should.be.a('object');\n        r.body.id.should.equal(itemid);\n        r.body.description.should.equal(myexpitem.description);\n        r.body.price.should.equal(myexpitem.price);\n        r.body.SKUId.should.equal(idskus[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "9aead046-8e56-4341-b471-73bf6070c3c1",
                  "parentUUID": "bb963e2d-5ff0-4aeb-9098-c7d1af5b7e56",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9aead046-8e56-4341-b471-73bf6070c3c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bac9d131-8b07-4b2d-a90d-41d368ada7cc",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "05b1cf5c-28b6-49aa-9d8d-9e3392adfe05",
                  "parentUUID": "bac9d131-8b07-4b2d-a90d-41d368ada7cc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05b1cf5c-28b6-49aa-9d8d-9e3392adfe05"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1a33d138-38b0-4d72-804e-92732768ec62",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "46a2f4c1-e5b9-42f0-93cb-c8273b8e92c2",
                  "parentUUID": "1a33d138-38b0-4d72-804e-92732768ec62",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46a2f4c1-e5b9-42f0-93cb-c8273b8e92c2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c7847853-447f-47d3-8f11-19c019238063",
              "title": " put /api/item/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify an item given its ID and new fields",
                  "fullTitle": "Test Item CRUD features  put /api/item/:id Modify an item given its ID and new fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/item/'+ith)\n.send(updateItem(newDescription, newPrice))\n.then(res => {\n    let idsku = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(res.status, expCode);\n    agent.get('/api/items/'+ith)\n    .then (r => {\n        console.log(r.body);\n        assert.equal(r.status,200);\n        r.body.should.be.a('object');\n        r.body.id.should.equal(myexpitem.id);\n        r.body.description.should.equal(newDescription);\n        r.body.price.should.equal(newPrice);\n        r.body.SKUId.should.equal(idsku[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    });\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "484e7a91-0f1c-4c91-9ebf-4953b434e27b",
                  "parentUUID": "c7847853-447f-47d3-8f11-19c019238063",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "484e7a91-0f1c-4c91-9ebf-4953b434e27b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "24864ad0-1ced-4bdc-87cf-c0e212bcf35f",
              "title": " delete /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete an item given its id",
                  "fullTitle": "Test Item CRUD features  delete /api/items/:id Delete an item given its id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/items/'+ith)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "9f7df382-9966-4890-87e3-5f8bf7d1f8c0",
                  "parentUUID": "24864ad0-1ced-4bdc-87cf-c0e212bcf35f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f7df382-9966-4890-87e3-5f8bf7d1f8c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dbedf3af-5bb4-472c-a2f2-87b604067869",
              "title": "Removing all Items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Items",
                  "fullTitle": "Test Item CRUD features Removing all Items Getting Items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "be782344-fdcb-40db-9c2b-236632af6f70",
                  "parentUUID": "dbedf3af-5bb4-472c-a2f2-87b604067869",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "be782344-fdcb-40db-9c2b-236632af6f70"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8e25ee8d-be8b-43c6-a5f6-2696dd067fd0",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Item CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "fd9e0e0e-dd9c-48bc-a8fc-a54bc8b34ba2",
                  "parentUUID": "8e25ee8d-be8b-43c6-a5f6-2696dd067fd0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fd9e0e0e-dd9c-48bc-a8fc-a54bc8b34ba2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3554de37-ea7b-4388-9f18-aa50ad842c94",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Item CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "c2c8ac6b-cac4-4479-b524-fba3d10113ac",
                  "parentUUID": "3554de37-ea7b-4388-9f18-aa50ad842c94",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c2c8ac6b-cac4-4479-b524-fba3d10113ac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fb9223d2-22e9-4989-846d-3e933c929bfd",
          "title": "Testing Functional requirements",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "59b1ab36-ead2-47e1-a578-5a37669642dd",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Testing Functional requirements  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9de99ba4-e5e5-41f9-813f-7d5b3e170f70",
                  "parentUUID": "59b1ab36-ead2-47e1-a578-5a37669642dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9de99ba4-e5e5-41f9-813f-7d5b3e170f70"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fdb80c5c-44ef-4214-b3f1-61492127ee38",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "e3e02428-6fa7-429b-9846-41799876cc9e",
                  "parentUUID": "fdb80c5c-44ef-4214-b3f1-61492127ee38",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e3e02428-6fa7-429b-9846-41799876cc9e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9f52544d-dbd1-4710-8d63-2a69ac5eeacb",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "Testing Functional requirements Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "4f40f18d-ba2c-4f70-ae0d-9d1537032bf6",
                  "parentUUID": "9f52544d-dbd1-4710-8d63-2a69ac5eeacb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f40f18d-ba2c-4f70-ae0d-9d1537032bf6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "23b1f4a2-842d-444a-859b-a9aba0c6093e",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Testing Functional requirements removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "64c9dade-9fa1-484c-9825-6be47b6800ee",
                  "parentUUID": "23b1f4a2-842d-444a-859b-a9aba0c6093e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "64c9dade-9fa1-484c-9825-6be47b6800ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7e57fe24-c597-4305-8d95-0b6b11746d4f",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "20e1d9cb-1283-4282-ba54-1eb9b6f37984",
                  "parentUUID": "7e57fe24-c597-4305-8d95-0b6b11746d4f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20e1d9cb-1283-4282-ba54-1eb9b6f37984"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7de676fe-d5ac-46aa-81d2-9a8b32a0d9dd",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Testing Functional requirements Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "b7932e1b-7584-4a65-ac61-2453bdb49052",
                  "parentUUID": "7de676fe-d5ac-46aa-81d2-9a8b32a0d9dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b7932e1b-7584-4a65-ac61-2453bdb49052"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "60816a23-37a6-4869-9819-bd34bc3ceb5f",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6236b446-2290-4b26-bac3-bbdaba3b370a",
                  "parentUUID": "60816a23-37a6-4869-9819-bd34bc3ceb5f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6236b446-2290-4b26-bac3-bbdaba3b370a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "648ff018-8215-49c4-9be6-bee5edd96aeb",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Testing Functional requirements  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9652df3c-d0c5-43cc-8e43-cfb3a66bbe3f",
                  "parentUUID": "648ff018-8215-49c4-9be6-bee5edd96aeb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9652df3c-d0c5-43cc-8e43-cfb3a66bbe3f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9cc39ec8-f07c-4878-96c4-07d4d1683d50",
              "title": " get /api/users/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.3 -> List all users",
                  "fullTitle": "Testing Functional requirements  get /api/users/ FR 1.3 -> List all users",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cc5339f9-4f9e-4554-abfa-367420c06b30",
                  "parentUUID": "9cc39ec8-f07c-4878-96c4-07d4d1683d50",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc5339f9-4f9e-4554-abfa-367420c06b30"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e029e9fd-e48d-4b0b-bac7-bab5cfbf2a92",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Testing Functional requirements  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "02169a38-74a1-4add-bf0a-5757e54943ea",
                  "parentUUID": "e029e9fd-e48d-4b0b-bac7-bab5cfbf2a92",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "02169a38-74a1-4add-bf0a-5757e54943ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "72457755-ba6d-470e-997c-f668b65f6510",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c616b1cb-6425-40cc-a661-44ab6877447b",
                  "parentUUID": "72457755-ba6d-470e-997c-f668b65f6510",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c616b1cb-6425-40cc-a661-44ab6877447b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ff19b2c7-3fae-4e74-8b07-eff1146c024e",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "071dc686-ef05-4eb1-9d49-7026d7462ece",
                  "parentUUID": "ff19b2c7-3fae-4e74-8b07-eff1146c024e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "071dc686-ef05-4eb1-9d49-7026d7462ece"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "94aa1c39-e4ce-4312-b5f5-8d0437c988da",
              "title": "put /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 b -> Modify an existing SKU",
                  "fullTitle": "Testing Functional requirements put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "246ff66a-0a18-4792-a2d9-527cb36c0edb",
                  "parentUUID": "94aa1c39-e4ce-4312-b5f5-8d0437c988da",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "246ff66a-0a18-4792-a2d9-527cb36c0edb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f3ced456-f3bd-480f-9d37-b5942f4dfe93",
              "title": "delete /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.2 -> Delete a SKU",
                  "fullTitle": "Testing Functional requirements delete /api/sku/:id FR 2.2 -> Delete a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "833c84a7-60f4-4493-a72a-312cf8a4bbee",
                  "parentUUID": "f3ced456-f3bd-480f-9d37-b5942f4dfe93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "833c84a7-60f4-4493-a72a-312cf8a4bbee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6dec848b-d0b1-420d-8b0b-e075a20450cd",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8a9d4836-39f4-4e46-9983-cd113c052a31",
                  "parentUUID": "6dec848b-d0b1-420d-8b0b-e075a20450cd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8a9d4836-39f4-4e46-9983-cd113c052a31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f46efedd-d41a-47f9-8498-b890baa15ef2",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Testing Functional requirements get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "07ad3437-d933-4c7a-9807-6ce53c9e0992",
                  "parentUUID": "f46efedd-d41a-47f9-8498-b890baa15ef2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "07ad3437-d933-4c7a-9807-6ce53c9e0992"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4c879b5d-be31-417a-9732-3ac847fa608a",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c2723b7e-d2f6-4086-8909-7ed80eb4765f",
                  "parentUUID": "4c879b5d-be31-417a-9732-3ac847fa608a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c2723b7e-d2f6-4086-8909-7ed80eb4765f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "34699a7d-795e-4da0-bc9c-ea17858e1b36",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "Testing Functional requirements  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "df7fb345-4d68-44a2-a7e2-bf7bd3ed7af7",
                  "parentUUID": "34699a7d-795e-4da0-bc9c-ea17858e1b36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "df7fb345-4d68-44a2-a7e2-bf7bd3ed7af7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2a163a7b-8c7e-4556-830a-657fab2b12f1",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e3f66289-cc0a-41d1-97fc-fe6bef3d68eb",
                  "parentUUID": "2a163a7b-8c7e-4556-830a-657fab2b12f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e3f66289-cc0a-41d1-97fc-fe6bef3d68eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3d1c1ef2-47b5-4678-a03f-ad0ddedeb577",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "Testing Functional requirements  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5990aa58-1a3d-4a8c-a51a-41247cd65c78",
                  "parentUUID": "3d1c1ef2-47b5-4678-a03f-ad0ddedeb577",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5990aa58-1a3d-4a8c-a51a-41247cd65c78"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8e8e479b-9912-4044-a0fd-2dac5dd64ef5",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "Testing Functional requirements Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "3cfb206e-5236-46de-babf-36d18de8b97b",
                  "parentUUID": "8e8e479b-9912-4044-a0fd-2dac5dd64ef5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3cfb206e-5236-46de-babf-36d18de8b97b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5fbc3a21-3eaa-463c-b55b-08a6cc278153",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "845308a3-6dee-48a0-b32c-fa4b435d6efa",
                  "parentUUID": "5fbc3a21-3eaa-463c-b55b-08a6cc278153",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "845308a3-6dee-48a0-b32c-fa4b435d6efa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1bd8f6fc-90e0-42b1-90e6-0449aa8aad90",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f18adcf4-812e-466f-ac51-e48e7d2a5022",
                  "parentUUID": "1bd8f6fc-90e0-42b1-90e6-0449aa8aad90",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f18adcf4-812e-466f-ac51-e48e7d2a5022"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0572ee9f-836e-4222-adce-5ce56bc0ce70",
              "title": " get /api/positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.3 -> List all positions",
                  "fullTitle": "Testing Functional requirements  get /api/positions FR 3.1.3 -> List all positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "2f390618-c22c-4193-bd10-15e9ac70a900",
                  "parentUUID": "0572ee9f-836e-4222-adce-5ce56bc0ce70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2f390618-c22c-4193-bd10-15e9ac70a900"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1c9df88c-d04b-4157-9a3f-b8d8d6a30aed",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "Testing Functional requirements  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3db48b84-b89c-46e7-88f9-aba060e941e7",
                  "parentUUID": "1c9df88c-d04b-4157-9a3f-b8d8d6a30aed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3db48b84-b89c-46e7-88f9-aba060e941e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9aca64bc-8449-4ef0-98d8-0feb27089f33",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "c9933608-212d-440b-95b3-522fc0a2a8a4",
                  "parentUUID": "9aca64bc-8449-4ef0-98d8-0feb27089f33",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9933608-212d-440b-95b3-522fc0a2a8a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4fa9a368-6111-4289-8e8c-ad9d531a19f6",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "12629bdf-9f6a-4f3b-8bba-33e09648116e",
                  "parentUUID": "4fa9a368-6111-4289-8e8c-ad9d531a19f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12629bdf-9f6a-4f3b-8bba-33e09648116e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1f88d894-e52d-4823-a8bd-f1d2642a3702",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "04450882-c291-444f-9f78-f9724ad28e2c",
                  "parentUUID": "1f88d894-e52d-4823-a8bd-f1d2642a3702",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "04450882-c291-444f-9f78-f9724ad28e2c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c445a230-3385-488d-8ff6-6f69ba254c74",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "997c0088-110d-4b47-bb63-565741e2ac3a",
                  "parentUUID": "c445a230-3385-488d-8ff6-6f69ba254c74",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "997c0088-110d-4b47-bb63-565741e2ac3a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8dd5ad4c-876a-42a4-87f9-4aed705da07c",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "138aaaa8-8232-4a90-a795-dccf76565b69",
                  "parentUUID": "8dd5ad4c-876a-42a4-87f9-4aed705da07c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "138aaaa8-8232-4a90-a795-dccf76565b69"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4d06c4e7-37cc-43a2-b6a9-ea2b92d1a892",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c030b3c2-8997-4f06-aa05-7a90ea797fe3",
                  "parentUUID": "4d06c4e7-37cc-43a2-b6a9-ea2b92d1a892",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c030b3c2-8997-4f06-aa05-7a90ea797fe3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "116dd569-3228-4246-99e9-98b81bfff9c7",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Testing Functional requirements test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4f48776b-94b4-443e-9f83-030f7b254f4e",
                  "parentUUID": "116dd569-3228-4246-99e9-98b81bfff9c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f48776b-94b4-443e-9f83-030f7b254f4e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dcd8349a-9322-4b9a-bfa1-ed444fe8a9ba",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Testing Functional requirements Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "ea5d554b-facf-46c1-b38c-67108c009524",
                  "parentUUID": "dcd8349a-9322-4b9a-bfa1-ed444fe8a9ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ea5d554b-facf-46c1-b38c-67108c009524"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "00d2330d-6ded-4405-86a1-b121f3eee979",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "26828611-7c30-4efd-a117-1e493ff70b60",
                  "parentUUID": "00d2330d-6ded-4405-86a1-b121f3eee979",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26828611-7c30-4efd-a117-1e493ff70b60"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f9e825d5-174f-4b3b-a7bb-c6967bd3ce6d",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "dbdda346-424a-4273-a199-3e547cc39bb8",
                  "parentUUID": "f9e825d5-174f-4b3b-a7bb-c6967bd3ce6d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dbdda346-424a-4273-a199-3e547cc39bb8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e144dc8a-cb81-4f2a-baf3-5aa93a9b29ea",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Testing Functional requirements  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c378a3ef-c71f-4f74-820b-0b326d5963b1",
                  "parentUUID": "e144dc8a-cb81-4f2a-baf3-5aa93a9b29ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c378a3ef-c71f-4f74-820b-0b326d5963b1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "52aceddb-5df6-43d8-a9fa-8393d4f8f7bc",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "be5d8984-8e91-46d5-ad98-a6fb59ab9866",
                  "parentUUID": "52aceddb-5df6-43d8-a9fa-8393d4f8f7bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "be5d8984-8e91-46d5-ad98-a6fb59ab9866"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e3bcc62e-f5e0-4a9c-b302-e6e82a936f82",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ef2b08d5-b719-4035-8959-d24934a99ddc",
                  "parentUUID": "e3bcc62e-f5e0-4a9c-b302-e6e82a936f82",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ef2b08d5-b719-4035-8959-d24934a99ddc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ecc03704-297c-46dc-990b-a3daf5ee48da",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "29803e70-12c6-4dd0-938c-168479baf119",
                  "parentUUID": "ecc03704-297c-46dc-990b-a3daf5ee48da",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "29803e70-12c6-4dd0-938c-168479baf119"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "262f3183-6e4f-451e-b8b8-3a428f3ab37c",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 62,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "37cda12d-2f02-4177-a096-68b0fbf9d470",
                  "parentUUID": "262f3183-6e4f-451e-b8b8-3a428f3ab37c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "37cda12d-2f02-4177-a096-68b0fbf9d470"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 62,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "283c4a5d-8a8b-4e64-bd7c-8fc02269881f",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 59,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "633c4a8f-5473-461c-9fc4-8bb5d790551c",
                  "parentUUID": "283c4a5d-8a8b-4e64-bd7c-8fc02269881f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "633c4a8f-5473-461c-9fc4-8bb5d790551c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a6aac94e-a61e-41ef-a202-572517da636c",
              "title": " get /api/users/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.3 -> List all users",
                  "fullTitle": "Testing Functional requirements  get /api/users/ FR 1.3 -> List all users",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "94719686-df10-4a0a-a802-ea86e1b6164c",
                  "parentUUID": "a6aac94e-a61e-41ef-a202-572517da636c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "94719686-df10-4a0a-a802-ea86e1b6164c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8f4be205-527c-443a-a851-76ac5307c74a",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "07943635-977c-441f-824d-b4264f68bef1",
                  "parentUUID": "8f4be205-527c-443a-a851-76ac5307c74a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "07943635-977c-441f-824d-b4264f68bef1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "01ad1e3d-c08a-42be-bb88-a3f06f9d3f77",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e11138e1-58b0-4ed5-939d-eb789e4a79a5",
                  "parentUUID": "01ad1e3d-c08a-42be-bb88-a3f06f9d3f77",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e11138e1-58b0-4ed5-939d-eb789e4a79a5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "588f4fd4-a227-4337-a304-3e629cbd70a4",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Testing Functional requirements  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "680083f0-9693-4cca-a0ff-31f69c0d302f",
                  "parentUUID": "588f4fd4-a227-4337-a304-3e629cbd70a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "680083f0-9693-4cca-a0ff-31f69c0d302f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "55fa6e82-7248-4f12-9bd9-ff9728d8a13e",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Testing Functional requirements post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "34c9cd31-3cdc-4766-8c77-6745207345b0",
                  "parentUUID": "55fa6e82-7248-4f12-9bd9-ff9728d8a13e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "34c9cd31-3cdc-4766-8c77-6745207345b0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9930ba78-7692-4409-87ac-8a1fe39822d6",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 52,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5ebc902c-6fab-4342-8c0f-1507c1e67148",
                  "parentUUID": "9930ba78-7692-4409-87ac-8a1fe39822d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5ebc902c-6fab-4342-8c0f-1507c1e67148"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 52,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1269f37c-9643-4936-9ad8-8d233ddda355",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0e1da677-39c8-472e-be94-07d9afe5e0ac",
                  "parentUUID": "1269f37c-9643-4936-9ad8-8d233ddda355",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e1da677-39c8-472e-be94-07d9afe5e0ac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e93a6df1-3db0-4b76-8afd-d064716661e8",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Testing Functional requirements put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "89ab4264-6730-4de4-a01f-192e8aa40865",
                  "parentUUID": "e93a6df1-3db0-4b76-8afd-d064716661e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "89ab4264-6730-4de4-a01f-192e8aa40865"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f76dbee1-24fc-416b-9339-4c6494319f81",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Testing Functional requirements put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "bd7b4af7-f993-42c8-aa6a-29bee372bc1e",
                  "parentUUID": "f76dbee1-24fc-416b-9339-4c6494319f81",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd7b4af7-f993-42c8-aa6a-29bee372bc1e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d49a305f-f9bf-429a-ae53-078d5facbadc",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "cc646498-4657-4c59-848c-a9804f4a8edf",
                  "parentUUID": "d49a305f-f9bf-429a-ae53-078d5facbadc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc646498-4657-4c59-848c-a9804f4a8edf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8a9b045c-a8cf-493b-aab2-403cb77ce98a",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "c57f1e07-adf4-4732-8935-0ee2d4c6903b",
                  "parentUUID": "8a9b045c-a8cf-493b-aab2-403cb77ce98a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c57f1e07-adf4-4732-8935-0ee2d4c6903b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "186c26ab-3b87-4d52-b514-632b37901269",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Testing Functional requirements removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "dc8a5321-d647-4931-a2ef-6d8880338373",
                  "parentUUID": "186c26ab-3b87-4d52-b514-632b37901269",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc8a5321-d647-4931-a2ef-6d8880338373"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "06ed20dc-ad13-4085-80c7-6a17d47a556f",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "890f22cf-0298-45cc-bbb0-ee3bf990a741",
                  "parentUUID": "06ed20dc-ad13-4085-80c7-6a17d47a556f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "890f22cf-0298-45cc-bbb0-ee3bf990a741"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0a3e7254-6781-4412-bfff-62d421cb3cc2",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2b5e780a-735e-4043-b158-86fb20bca882",
                  "parentUUID": "0a3e7254-6781-4412-bfff-62d421cb3cc2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b5e780a-735e-4043-b158-86fb20bca882"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "14cbb915-2638-40a3-b068-65fcb21df58c",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "91995de9-2505-4232-b930-bb5e1b9f7bca",
                  "parentUUID": "14cbb915-2638-40a3-b068-65fcb21df58c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "91995de9-2505-4232-b930-bb5e1b9f7bca"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "20924272-704e-4f4b-929d-acf7c696bab8",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7d8f5f6a-9de1-44e6-a214-9b63fd49a4b5",
                  "parentUUID": "20924272-704e-4f4b-929d-acf7c696bab8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d8f5f6a-9de1-44e6-a214-9b63fd49a4b5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c01e4e35-3d40-4f82-adaa-0f8e9e831e27",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d474ae13-6cf0-454c-aadb-32d957b4335c",
                  "parentUUID": "c01e4e35-3d40-4f82-adaa-0f8e9e831e27",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d474ae13-6cf0-454c-aadb-32d957b4335c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "53f966c0-d77a-419d-b151-d8f78874b668",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Testing Functional requirements test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "52545844-6908-4c52-98c4-7e27e22b39d8",
                  "parentUUID": "53f966c0-d77a-419d-b151-d8f78874b668",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52545844-6908-4c52-98c4-7e27e22b39d8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6eae3a6f-3447-4ba4-ba8a-c0b751225dd8",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Testing Functional requirements put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c98c8077-4752-4097-83a4-576db8c41e2d",
                  "parentUUID": "6eae3a6f-3447-4ba4-ba8a-c0b751225dd8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c98c8077-4752-4097-83a4-576db8c41e2d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ec5661c9-f8d4-4001-a39f-9e70781d420a",
          "title": "Testing Functional requirements pt2",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "206c3500-1ba8-4659-a970-02cd59cc2c0e",
              "title": "Test sku CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "9a0a387a-adfd-48cb-832e-0b9c4c2fec95",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "8519e6a2-69a0-4861-a19c-4f1b99d4b874",
                      "parentUUID": "9a0a387a-adfd-48cb-832e-0b9c4c2fec95",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8519e6a2-69a0-4861-a19c-4f1b99d4b874"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "51ef72be-3953-4c56-be89-716f4024cbba",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "18b8b3e3-ca01-4313-9b6a-5b24a6fbd43f",
                      "parentUUID": "51ef72be-3953-4c56-be89-716f4024cbba",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "18b8b3e3-ca01-4313-9b6a-5b24a6fbd43f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b1329fd5-68fd-43db-830e-d77f39de6838",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a5acfe24-36bd-49f0-9db9-34a78ad1b407",
                      "parentUUID": "b1329fd5-68fd-43db-830e-d77f39de6838",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a5acfe24-36bd-49f0-9db9-34a78ad1b407"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7ebc8ff4-928e-42b1-b309-8f6b9f358ab9",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b5c220f2-00ae-4238-9219-c94b4f9fa5d1",
                      "parentUUID": "7ebc8ff4-928e-42b1-b309-8f6b9f358ab9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b5c220f2-00ae-4238-9219-c94b4f9fa5d1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "913593f0-0b6d-4a90-bcfe-593b75d13ea6",
                  "title": "put /api/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 b -> Modify an existing SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a4494538-7435-4651-bcb7-882ecf1cfaa4",
                      "parentUUID": "913593f0-0b6d-4a90-bcfe-593b75d13ea6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a4494538-7435-4651-bcb7-882ecf1cfaa4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ec473096-729b-4d51-84ab-b12d362950be",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "42107a7f-dd81-40df-9f7f-e67f84851097",
                      "parentUUID": "ec473096-729b-4d51-84ab-b12d362950be",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "42107a7f-dd81-40df-9f7f-e67f84851097"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a9cce700-7165-4485-8b4b-3c1376cda97b",
                  "title": "put /api/sku/:id/position",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Changing SKU position passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features put /api/sku/:id/position Changing SKU position passing its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID+'/position')\n.send(pos)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "acd432da-c63e-4ae3-b0ba-c3310d86accb",
                      "parentUUID": "a9cce700-7165-4485-8b4b-3c1376cda97b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "acd432da-c63e-4ae3-b0ba-c3310d86accb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "300e02b6-4378-455b-bb6f-7f3f45b1c458",
                  "title": "delete /api/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.2 -> Delete a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features delete /api/sku/:id FR 2.2 -> Delete a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "97fe7b7e-8fd8-4984-940c-101f5d27afe2",
                      "parentUUID": "300e02b6-4378-455b-bb6f-7f3f45b1c458",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "97fe7b7e-8fd8-4984-940c-101f5d27afe2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "af532b91-0d86-4bd1-b1b9-f44306ee892a",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c89a8268-7c4f-4d73-8a63-97d30012cf29",
                      "parentUUID": "af532b91-0d86-4bd1-b1b9-f44306ee892a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c89a8268-7c4f-4d73-8a63-97d30012cf29"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cca72102-72d8-48b0-8052-c32ca38f1eef",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "264752cd-e8b6-47b7-9936-b842f94f1c4b",
                      "parentUUID": "cca72102-72d8-48b0-8052-c32ca38f1eef",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "264752cd-e8b6-47b7-9936-b842f94f1c4b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c839eee1-fae3-4d45-818f-b2e38e0d1d62",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c3511c60-c6a3-4470-86d1-d916f062f3d2",
                      "parentUUID": "c839eee1-fae3-4d45-818f-b2e38e0d1d62",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c3511c60-c6a3-4470-86d1-d916f062f3d2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2a2388e9-19cf-4d95-92f9-afdb92104f14",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1c8f9acc-e4d1-4317-b3c7-5e0628e8eb87",
                      "parentUUID": "2a2388e9-19cf-4d95-92f9-afdb92104f14",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1c8f9acc-e4d1-4317-b3c7-5e0628e8eb87"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6de95589-7701-424e-9207-b5c5134dc1f9",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f31256b5-6c91-4317-a038-6a86aed0ffa4",
                      "parentUUID": "6de95589-7701-424e-9207-b5c5134dc1f9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f31256b5-6c91-4317-a038-6a86aed0ffa4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8e3050d3-2804-449a-b5b5-7397516ded7d",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3763cd42-0723-487c-95d4-e38a433a5d0c",
                      "parentUUID": "8e3050d3-2804-449a-b5b5-7397516ded7d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3763cd42-0723-487c-95d4-e38a433a5d0c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "88664eba-ce45-446f-9dba-574c5bc63009",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c6d8cee5-581e-43e1-bf4a-e62c69550100",
                      "parentUUID": "88664eba-ce45-446f-9dba-574c5bc63009",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c6d8cee5-581e-43e1-bf4a-e62c69550100"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3eef1601-ccfa-431f-a9f5-18673f00a2cf",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "576035ff-8e3f-454a-a674-45eae7faec04",
                      "parentUUID": "3eef1601-ccfa-431f-a9f5-18673f00a2cf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "576035ff-8e3f-454a-a674-45eae7faec04"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7abf2942-62e2-48bb-ab38-d8e986f62b62",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f64bda01-5a39-4e6b-8ac4-0d0566cfc9f3",
                      "parentUUID": "7abf2942-62e2-48bb-ab38-d8e986f62b62",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f64bda01-5a39-4e6b-8ac4-0d0566cfc9f3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1de6dfad-6cb9-4f24-89e2-8833dc0e072f",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "be64bd0b-779a-439b-9b6a-54681c466bbe",
                      "parentUUID": "1de6dfad-6cb9-4f24-89e2-8833dc0e072f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "be64bd0b-779a-439b-9b6a-54681c466bbe"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f9941971-c86d-4154-b765-36fa01ff9434",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e75009a7-9cef-4080-b41c-d71db52edead",
                      "parentUUID": "f9941971-c86d-4154-b765-36fa01ff9434",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e75009a7-9cef-4080-b41c-d71db52edead"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c4132a6f-4044-4398-8397-601ac78e3896",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3ad5ca23-1dd3-4a13-bb54-9223ab47f764",
                      "parentUUID": "c4132a6f-4044-4398-8397-601ac78e3896",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3ad5ca23-1dd3-4a13-bb54-9223ab47f764"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0694e006-a6f3-4f18-a94a-13027f3387cc",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d1d7375b-4a39-4df4-8113-b8941bf9b4a8",
                      "parentUUID": "0694e006-a6f3-4f18-a94a-13027f3387cc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d1d7375b-4a39-4df4-8113-b8941bf9b4a8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "10631067-2bee-4893-bfea-43d2b95097cb",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ee5e3ed7-7819-470a-9a9e-036e74970b65",
                      "parentUUID": "10631067-2bee-4893-bfea-43d2b95097cb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ee5e3ed7-7819-470a-9a9e-036e74970b65"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1a7133c0-aeb8-4dbe-acbc-e82b985ff81a",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "cb174365-9eb7-42b0-997d-b8cf14a8acff",
                      "parentUUID": "1a7133c0-aeb8-4dbe-acbc-e82b985ff81a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cb174365-9eb7-42b0-997d-b8cf14a8acff"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c7a38ca2-1cc5-4aab-b94c-ee33259b83e6",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9f8ebd5e-2a1d-4b76-bbb2-8e22c3f29c45",
                      "parentUUID": "c7a38ca2-1cc5-4aab-b94c-ee33259b83e6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9f8ebd5e-2a1d-4b76-bbb2-8e22c3f29c45"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "abdc7250-39e5-4971-bcfd-f813caebb115",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a18f3d6e-e24a-4835-8e21-bafa01fdcaf7",
                      "parentUUID": "abdc7250-39e5-4971-bcfd-f813caebb115",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a18f3d6e-e24a-4835-8e21-bafa01fdcaf7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6d4526f2-8a77-4fb5-8844-d9fd9c64f04a",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "81a40971-b006-40b8-9ffe-5140b7b5a459",
                      "parentUUID": "6d4526f2-8a77-4fb5-8844-d9fd9c64f04a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "81a40971-b006-40b8-9ffe-5140b7b5a459"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a244b5d9-5fa9-4d5b-b84e-d8c743853e6a",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "bd7a5471-d860-400a-b6af-51a3b74f8844",
                      "parentUUID": "a244b5d9-5fa9-4d5b-b84e-d8c743853e6a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bd7a5471-d860-400a-b6af-51a3b74f8844"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "25744341-3327-45e1-8c5f-aee56d112d7d",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "d36c691f-c05f-4384-9999-b801247bb5a5",
                      "parentUUID": "25744341-3327-45e1-8c5f-aee56d112d7d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d36c691f-c05f-4384-9999-b801247bb5a5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8a8bb76f-4174-43f0-bbd6-1cb157330bfb",
              "title": "Test skuitem CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "26472754-8d0f-4111-923e-dd78415990fe",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "c13b9429-e0c5-485d-8181-37918c37c8a5",
                      "parentUUID": "26472754-8d0f-4111-923e-dd78415990fe",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c13b9429-e0c5-485d-8181-37918c37c8a5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7c12e720-0e1d-4cf6-b590-a9c4570f61c1",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "f4718215-0900-4747-b9d5-ac7b8ac2d4e7",
                      "parentUUID": "7c12e720-0e1d-4cf6-b590-a9c4570f61c1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f4718215-0900-4747-b9d5-ac7b8ac2d4e7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cf2ade5b-9e5b-4546-80a2-2deda1d46440",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9895e3a8-04df-468e-a435-dbd3b933d59f",
                      "parentUUID": "cf2ade5b-9e5b-4546-80a2-2deda1d46440",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9895e3a8-04df-468e-a435-dbd3b933d59f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9205ac73-482a-4840-ad47-4a6ed9368251",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9759219e-45c6-4de0-b10a-36d9bf4812a0",
                      "parentUUID": "9205ac73-482a-4840-ad47-4a6ed9368251",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9759219e-45c6-4de0-b10a-36d9bf4812a0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0b67c7c4-5d8f-40ee-a586-1bbc0afb24d8",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "33623de2-e4f2-417e-b6a4-2e0f9f3a0bd8",
                      "parentUUID": "0b67c7c4-5d8f-40ee-a586-1bbc0afb24d8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "33623de2-e4f2-417e-b6a4-2e0f9f3a0bd8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f7eea195-7e73-432a-be18-0875fc41e35e",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "af4d8ae6-575c-4185-8527-5456bda3e374",
                      "parentUUID": "f7eea195-7e73-432a-be18-0875fc41e35e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "af4d8ae6-575c-4185-8527-5456bda3e374"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b5d4e810-4503-44a1-9504-4bad32e8c641",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fd5ab146-7012-4eb9-9e02-b1ac5ef2ba54",
                      "parentUUID": "b5d4e810-4503-44a1-9504-4bad32e8c641",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fd5ab146-7012-4eb9-9e02-b1ac5ef2ba54"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "57f07884-fd5c-4a67-93f3-ea838164df63",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "273b3ce7-fadf-448e-b845-d93de997cbf0",
                      "parentUUID": "57f07884-fd5c-4a67-93f3-ea838164df63",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "273b3ce7-fadf-448e-b845-d93de997cbf0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0d6e442b-7db5-4319-980a-f82e9a95d541",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "74292899-e2bf-4f1c-a1dc-6fefab54819e",
                      "parentUUID": "0d6e442b-7db5-4319-980a-f82e9a95d541",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "74292899-e2bf-4f1c-a1dc-6fefab54819e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "43c0bd34-fee2-4b29-80f9-5a1d38b2fbfb",
                  "title": "get /api/skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9e74d0f1-88cb-47c4-8313-8d45c282ce8e",
                      "parentUUID": "43c0bd34-fee2-4b29-80f9-5a1d38b2fbfb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9e74d0f1-88cb-47c4-8313-8d45c282ce8e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e22d358d-41f6-443f-8640-38230549e1c4",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9fb17fdc-1e3f-48c1-a3d5-d978cabc74c9",
                      "parentUUID": "e22d358d-41f6-443f-8640-38230549e1c4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9fb17fdc-1e3f-48c1-a3d5-d978cabc74c9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7b03c759-5c86-4a6d-b8e4-5ce73d9c8d12",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ea14723a-8c90-4397-a50c-71096f784321",
                      "parentUUID": "7b03c759-5c86-4a6d-b8e4-5ce73d9c8d12",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ea14723a-8c90-4397-a50c-71096f784321"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d5783760-11aa-4845-8dbe-d775e6495b76",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1acef977-1633-46e7-a83b-17860c6df833",
                      "parentUUID": "d5783760-11aa-4845-8dbe-d775e6495b76",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1acef977-1633-46e7-a83b-17860c6df833"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "779518b2-e40d-44fb-8a12-fc7273a79e3e",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "51f6200a-6cef-41d8-aaa5-7195dbc8064c",
                      "parentUUID": "779518b2-e40d-44fb-8a12-fc7273a79e3e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "51f6200a-6cef-41d8-aaa5-7195dbc8064c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "600f4017-d497-4893-af38-923a59bf4a84",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "7fb27d2a-43fb-441c-949b-e4a799774b8f",
                      "parentUUID": "600f4017-d497-4893-af38-923a59bf4a84",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7fb27d2a-43fb-441c-949b-e4a799774b8f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7454eab6-18f1-45e8-9443-1c5fe1e54720",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "00387a41-a74d-4ad2-9f40-eb3c3572c405",
                      "parentUUID": "7454eab6-18f1-45e8-9443-1c5fe1e54720",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "00387a41-a74d-4ad2-9f40-eb3c3572c405"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3f47d8db-7829-482e-a809-bcc8bd4c6242",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "ee7864a1-acc3-4046-ac64-56fe018854ab",
                      "parentUUID": "3f47d8db-7829-482e-a809-bcc8bd4c6242",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ee7864a1-acc3-4046-ac64-56fe018854ab"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ad82c7f1-bf4e-448f-8244-4d25226cb4fe",
                  "title": "get /api/skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c0f79110-c4d2-4b27-acc1-ead5257e0c10",
                      "parentUUID": "ad82c7f1-bf4e-448f-8244-4d25226cb4fe",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c0f79110-c4d2-4b27-acc1-ead5257e0c10"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "84f1f6b1-c01d-4f2b-b082-69cbb7283075",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5b7757bc-c511-4489-b6fa-836925bcee5c",
                      "parentUUID": "84f1f6b1-c01d-4f2b-b082-69cbb7283075",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5b7757bc-c511-4489-b6fa-836925bcee5c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "34e6422f-1411-458c-98c8-f41d442b6c98",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2601eb55-cf96-4121-9e77-29b2fda5aba2",
                      "parentUUID": "34e6422f-1411-458c-98c8-f41d442b6c98",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2601eb55-cf96-4121-9e77-29b2fda5aba2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "764045a7-7b87-42ee-8d38-155af4e7daef",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "518c87b5-2d37-4ce7-b580-ea6fb925f1ed",
                      "parentUUID": "764045a7-7b87-42ee-8d38-155af4e7daef",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "518c87b5-2d37-4ce7-b580-ea6fb925f1ed"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4e76ef7a-6dfc-4ccf-87e1-eb1f568a6cc0",
              "title": "test positions CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "bff82d1f-6f02-4dee-8c2c-5eb22df62e49",
                  "title": "Removing all Positions",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Positions",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features Removing all Positions Getting Positions",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "8b39f23d-35f2-4b51-9fb4-8af92f688a91",
                      "parentUUID": "bff82d1f-6f02-4dee-8c2c-5eb22df62e49",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8b39f23d-35f2-4b51-9fb4-8af92f688a91"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "88f1d937-dc9a-4eb1-825c-4af82c37cddc",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "be1a8238-35ea-4f11-9f2c-0bdf216bf9c6",
                      "parentUUID": "88f1d937-dc9a-4eb1-825c-4af82c37cddc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "be1a8238-35ea-4f11-9f2c-0bdf216bf9c6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3546b152-10ee-4508-bc67-e376682f454c",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b5ab3ecd-b8e9-41de-8824-70966466f858",
                      "parentUUID": "3546b152-10ee-4508-bc67-e376682f454c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b5ab3ecd-b8e9-41de-8824-70966466f858"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b278ac89-e35b-49c7-8e8a-8a059e1ac5f0",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ee40b25b-f911-4c3e-8a6b-3adc9d41ef15",
                      "parentUUID": "b278ac89-e35b-49c7-8e8a-8a059e1ac5f0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ee40b25b-f911-4c3e-8a6b-3adc9d41ef15"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0eb35ce2-0b31-4c58-a58c-5dc1cc8d54ee",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b7bcd5bf-4fc2-4e70-8b77-660cdcb91465",
                      "parentUUID": "0eb35ce2-0b31-4c58-a58c-5dc1cc8d54ee",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b7bcd5bf-4fc2-4e70-8b77-660cdcb91465"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7951e359-bdc0-4dc7-a120-8b179d060d19",
                  "title": " get /api/positions",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.3 -> List all positions",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  get /api/positions FR 3.1.3 -> List all positions",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "aa76cc8b-4e55-4c3f-8d13-a04982d8d4f8",
                      "parentUUID": "7951e359-bdc0-4dc7-a120-8b179d060d19",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "aa76cc8b-4e55-4c3f-8d13-a04982d8d4f8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4e665d5f-f95a-4362-9715-921cef902ceb",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c18e9b0a-9706-46e1-9d09-53464193681f",
                      "parentUUID": "4e665d5f-f95a-4362-9715-921cef902ceb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c18e9b0a-9706-46e1-9d09-53464193681f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "495522c5-85fb-4c61-aee4-dc36f877d22b",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6a02f9a6-1313-46e2-bfab-b113ad953197",
                      "parentUUID": "495522c5-85fb-4c61-aee4-dc36f877d22b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6a02f9a6-1313-46e2-bfab-b113ad953197"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "db939064-f8ad-45b7-99f0-9b705d76926d",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9b1082c3-109c-4ae7-a590-5da352bb9350",
                      "parentUUID": "db939064-f8ad-45b7-99f0-9b705d76926d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9b1082c3-109c-4ae7-a590-5da352bb9350"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f23b8a96-a303-4733-be79-c431fa50871f",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0cfb8a0c-cf26-4baa-b668-954bc2676301",
                      "parentUUID": "f23b8a96-a303-4733-be79-c431fa50871f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0cfb8a0c-cf26-4baa-b668-954bc2676301"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "23ed6c7d-089e-4ea8-bd6b-a4f7113ccc89",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "dc8126e9-1a91-4cc1-9716-b9fb28257418",
                      "parentUUID": "23ed6c7d-089e-4ea8-bd6b-a4f7113ccc89",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "dc8126e9-1a91-4cc1-9716-b9fb28257418"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ac21eae4-9000-4064-8e2a-24231272fb03",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "77cd8369-938b-4d02-9f06-a4b62315cede",
                      "parentUUID": "ac21eae4-9000-4064-8e2a-24231272fb03",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "77cd8369-938b-4d02-9f06-a4b62315cede"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7be03df9-a3e0-4044-a425-89ade7599831",
                  "title": " delete /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.2 -> Delete a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "526532fa-fd0c-481d-ace9-4ffb266988d6",
                      "parentUUID": "7be03df9-a3e0-4044-a425-89ade7599831",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "526532fa-fd0c-481d-ace9-4ffb266988d6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fd1600e6-6d56-47ba-8784-aa54fa53353f",
                  "title": " delete /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.2 -> Delete a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9a63935d-ad24-4351-9722-ae910bdc878f",
                      "parentUUID": "fd1600e6-6d56-47ba-8784-aa54fa53353f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9a63935d-ad24-4351-9722-ae910bdc878f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "17cc1502-c3e7-4bd1-9a1e-876c2e954000",
              "title": "Test TestDescriptor CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "5b49112f-beb1-4bdd-8b5a-dd8d5b8595cf",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a8cf3735-f5fc-4ff7-af82-f4a5f02426fd",
                      "parentUUID": "5b49112f-beb1-4bdd-8b5a-dd8d5b8595cf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a8cf3735-f5fc-4ff7-af82-f4a5f02426fd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "68e40854-fec4-48dd-88d8-0675dfa06d5b",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "59737443-77f4-411d-8328-1a7c403b5452",
                      "parentUUID": "68e40854-fec4-48dd-88d8-0675dfa06d5b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "59737443-77f4-411d-8328-1a7c403b5452"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a5adc157-0156-490e-8d52-ed5c51844747",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "16a7fe13-55c6-4f18-9bc5-230f9f22c16c",
                      "parentUUID": "a5adc157-0156-490e-8d52-ed5c51844747",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "16a7fe13-55c6-4f18-9bc5-230f9f22c16c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "729f8015-4f64-4e8c-90d7-85b25b4f1c34",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ee5dfead-9087-4f0f-bdbb-83696d9a89bb",
                      "parentUUID": "729f8015-4f64-4e8c-90d7-85b25b4f1c34",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ee5dfead-9087-4f0f-bdbb-83696d9a89bb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ee42174f-350d-4771-a2be-2fdb689cfcbd",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "abf53aaf-b4b0-4b45-bacd-61a82a1dedd8",
                      "parentUUID": "ee42174f-350d-4771-a2be-2fdb689cfcbd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "abf53aaf-b4b0-4b45-bacd-61a82a1dedd8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "913b5708-54ad-422e-91cd-e5a3599edf57",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f4d5fec2-612b-45cb-8445-0f120880e497",
                      "parentUUID": "913b5708-54ad-422e-91cd-e5a3599edf57",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f4d5fec2-612b-45cb-8445-0f120880e497"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "325c5756-b283-4e32-92be-83df60455471",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "473c95ca-d3e4-49d1-a987-d9ef22527b99",
                      "parentUUID": "325c5756-b283-4e32-92be-83df60455471",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "473c95ca-d3e4-49d1-a987-d9ef22527b99"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3cf5df27-3063-4837-9e48-c1550083305c",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b4749e52-8b9a-413c-8aa7-e7e2cb12895d",
                      "parentUUID": "3cf5df27-3063-4837-9e48-c1550083305c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b4749e52-8b9a-413c-8aa7-e7e2cb12895d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2cb5f5a6-1e6e-4190-81bd-1b4168f65209",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "112edb96-16bb-4890-8c76-5e52f6a7e88d",
                      "parentUUID": "2cb5f5a6-1e6e-4190-81bd-1b4168f65209",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "112edb96-16bb-4890-8c76-5e52f6a7e88d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d1c8fc38-d44f-424b-8f73-1b8dbcf00497",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "da87ff2a-b2a4-460a-964c-ca7eac7336a6",
                      "parentUUID": "d1c8fc38-d44f-424b-8f73-1b8dbcf00497",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "da87ff2a-b2a4-460a-964c-ca7eac7336a6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7af40f61-fed0-4934-8794-80c74a4e46cf",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f968e4c7-9305-4963-951d-80f33629a8bc",
                      "parentUUID": "7af40f61-fed0-4934-8794-80c74a4e46cf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f968e4c7-9305-4963-951d-80f33629a8bc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c2caaa3d-be25-487c-a599-9e383426f3d0",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1f94cb11-cc07-4cc6-b8e1-bde2e0e3f633",
                      "parentUUID": "c2caaa3d-be25-487c-a599-9e383426f3d0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1f94cb11-cc07-4cc6-b8e1-bde2e0e3f633"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "953ee092-3b4d-4e79-b67b-3ef6c648e139",
                  "title": "test post test descriptor with not exixsting idsku",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a bad test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test post test descriptor with not exixsting idsku Creating a bad test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/testDescriptor')\n.send()\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "affd213b-3140-4558-af83-7a30b4cab0a5",
                      "parentUUID": "953ee092-3b4d-4e79-b67b-3ef6c648e139",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "affd213b-3140-4558-af83-7a30b4cab0a5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bf8bc390-bd1f-4b7a-9de5-e5e8f9d633ff",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ee136ddf-50ca-4c72-a418-fb216c7ef1b2",
                      "parentUUID": "bf8bc390-bd1f-4b7a-9de5-e5e8f9d633ff",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ee136ddf-50ca-4c72-a418-fb216c7ef1b2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "50c87c85-b535-4759-b233-1e08368e9163",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "22df270f-c1bc-44ba-a9bc-255085418374",
                      "parentUUID": "50c87c85-b535-4759-b233-1e08368e9163",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "22df270f-c1bc-44ba-a9bc-255085418374"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3a0eb0d9-c0fc-4617-a654-6ccde510b6a1",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "cc02b92b-0813-4f5e-be3e-af6fe01ef565",
                      "parentUUID": "3a0eb0d9-c0fc-4617-a654-6ccde510b6a1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cc02b92b-0813-4f5e-be3e-af6fe01ef565"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0eab027a-90f5-48da-a3a4-508b3b8857d9",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "d7304772-b63e-474a-8a52-46b4ec507574",
                      "parentUUID": "0eab027a-90f5-48da-a3a4-508b3b8857d9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d7304772-b63e-474a-8a52-46b4ec507574"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "22a5659d-5d18-49f9-bb23-f046056c3159",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "54f2d2e1-f9d6-4172-b2d7-5150f6beda98",
                      "parentUUID": "22a5659d-5d18-49f9-bb23-f046056c3159",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "54f2d2e1-f9d6-4172-b2d7-5150f6beda98"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f3279645-0abb-42d8-9091-e4cbe594ff84",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0304d2f6-c4d5-4e78-bbc4-96c93995e28f",
                      "parentUUID": "f3279645-0abb-42d8-9091-e4cbe594ff84",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0304d2f6-c4d5-4e78-bbc4-96c93995e28f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1ee93042-8931-463a-813b-ad87f6b1606e",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "c28d9541-c07d-40ab-aa52-c99a5eac68e4",
                      "parentUUID": "1ee93042-8931-463a-813b-ad87f6b1606e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c28d9541-c07d-40ab-aa52-c99a5eac68e4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7e72ca28-3fa3-4b29-a2b5-c1ed99da0adf",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e4c4e0c8-ba0f-4805-8672-ead2c51f2dc2",
                      "parentUUID": "7e72ca28-3fa3-4b29-a2b5-c1ed99da0adf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e4c4e0c8-ba0f-4805-8672-ead2c51f2dc2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "82882db2-1bc9-456e-8bf9-8b1ad6e2692e",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8ae73ae1-1a26-4d06-b403-bc0d99c6509f",
                      "parentUUID": "82882db2-1bc9-456e-8bf9-8b1ad6e2692e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8ae73ae1-1a26-4d06-b403-bc0d99c6509f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "de5d26aa-d32d-413f-ad55-bf19bd25fa41",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    res.body.should.be.a('array');\n    agent.put('/api/testDescriptor/'+10000)\n    .send()\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));               \n});",
                      "err": {},
                      "uuid": "8a8d3421-5456-4d9f-acd6-f66c94cf1b9c",
                      "parentUUID": "de5d26aa-d32d-413f-ad55-bf19bd25fa41",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8a8d3421-5456-4d9f-acd6-f66c94cf1b9c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7a2c2664-a66d-4217-884b-f964c090951b",
                  "title": "delete /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "60b55d29-782a-4f17-a085-7b2cee69b16d",
                      "parentUUID": "7a2c2664-a66d-4217-884b-f964c090951b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "60b55d29-782a-4f17-a085-7b2cee69b16d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "27bfd6c4-6daf-4013-b3f6-d9861ffbf83f",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "44fc79e6-8197-4e88-8989-2ffa520f9a34",
                      "parentUUID": "27bfd6c4-6daf-4013-b3f6-d9861ffbf83f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "44fc79e6-8197-4e88-8989-2ffa520f9a34"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8329d699-4d77-48c8-b960-639b335e8bcc",
                  "title": "delete /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f5fac444-0e63-4453-95db-0179f0b4f775",
                      "parentUUID": "8329d699-4d77-48c8-b960-639b335e8bcc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f5fac444-0e63-4453-95db-0179f0b4f775"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f535f4be-4447-4543-a126-e073c92eb8a3",
              "title": "Test TestResult CRUD",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "db0015d6-0184-42d0-98ac-a151b3ca68af",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d002966b-338b-4c05-b692-54c7206917a4",
                      "parentUUID": "db0015d6-0184-42d0-98ac-a151b3ca68af",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d002966b-338b-4c05-b692-54c7206917a4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1b603578-60e9-4299-8fae-e7ce472812cd",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "ae629ee1-d3a6-41fa-aa18-0b27907f93ac",
                      "parentUUID": "1b603578-60e9-4299-8fae-e7ce472812cd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ae629ee1-d3a6-41fa-aa18-0b27907f93ac"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "476336f2-a7b5-4e80-af61-cc23fca685ec",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "c682285c-3bbb-401e-a9d7-24b8f0eae29e",
                      "parentUUID": "476336f2-a7b5-4e80-af61-cc23fca685ec",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c682285c-3bbb-401e-a9d7-24b8f0eae29e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8431d00a-bd10-4af0-847f-f7a2b4e9f967",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1d8753ec-b32e-4a40-8c45-cb19a0b571db",
                      "parentUUID": "8431d00a-bd10-4af0-847f-f7a2b4e9f967",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1d8753ec-b32e-4a40-8c45-cb19a0b571db"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "551086d8-88df-4199-b7b8-470d1f28d063",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c584a336-4a73-4335-a529-8f24fc570319",
                      "parentUUID": "551086d8-88df-4199-b7b8-470d1f28d063",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c584a336-4a73-4335-a529-8f24fc570319"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9976e210-e179-478b-b86d-35960fe92692",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "cb7f6b10-a0bf-4f61-b73c-0f7f1201e43b",
                      "parentUUID": "9976e210-e179-478b-b86d-35960fe92692",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cb7f6b10-a0bf-4f61-b73c-0f7f1201e43b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4f1e4c17-0af8-4b03-b0fa-23f245aab53a",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "80ca2479-4f56-4edb-b490-87b0bc4d0a73",
                      "parentUUID": "4f1e4c17-0af8-4b03-b0fa-23f245aab53a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "80ca2479-4f56-4edb-b490-87b0bc4d0a73"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9f5d3c32-6582-409a-86bc-330b38bb85eb",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b805edfa-c0bd-44e6-a83b-db90cb3f2268",
                      "parentUUID": "9f5d3c32-6582-409a-86bc-330b38bb85eb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b805edfa-c0bd-44e6-a83b-db90cb3f2268"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "00ff8ffd-4967-4666-8fbd-112854fac151",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "901b2acf-272e-4072-b82f-83ae05748c9b",
                      "parentUUID": "00ff8ffd-4967-4666-8fbd-112854fac151",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "901b2acf-272e-4072-b82f-83ae05748c9b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b08eede7-22e1-4486-ac54-ebcb5d8939bb",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6ab37936-04df-4236-8000-e007297314bc",
                      "parentUUID": "b08eede7-22e1-4486-ac54-ebcb5d8939bb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6ab37936-04df-4236-8000-e007297314bc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1bf6b556-9ab2-416a-bb9b-8a68717946f2",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8fb5cd3b-3663-44ad-b40f-59a566dd17f7",
                      "parentUUID": "1bf6b556-9ab2-416a-bb9b-8a68717946f2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8fb5cd3b-3663-44ad-b40f-59a566dd17f7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "eba1a9dc-6245-4930-b4bb-a8ac3e900a1e",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f729cfb9-79a4-4c7e-8561-cc6a1a5050ff",
                      "parentUUID": "eba1a9dc-6245-4930-b4bb-a8ac3e900a1e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f729cfb9-79a4-4c7e-8561-cc6a1a5050ff"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fa3b3eee-3835-4272-a650-a8fe84e8eea9",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.1 -> Add a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult FR 3.2.1 -> Add a quality test",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idtds = ids.getIdTestDescriptor();\nlet testResult = newTestResult(mytr.rfid, idtds[mytr.idTestDescriptor], mytr.Date, mytr.Result);\n//console.log(testResult);\nagent.post('/api/skuitems/testResult')\n.send(testResult)\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "bf7c846c-5e83-4e82-bc1d-4986c5fbd88a",
                      "parentUUID": "fa3b3eee-3835-4272-a650-a8fe84e8eea9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bf7c846c-5e83-4e82-bc1d-4986c5fbd88a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ff0b50d5-9073-4243-a3b2-7bf56e819935",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creates a new test Result for a certain sku item defined by RFID",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "6f20f514-ceb8-47b6-a9b0-56875f0e4446",
                      "parentUUID": "ff0b50d5-9073-4243-a3b2-7bf56e819935",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6f20f514-ceb8-47b6-a9b0-56875f0e4446"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5ae8e72c-fcf5-4643-887a-ccaa800642ae",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creates a new test Result for a certain sku item defined by RFID",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "9f4a6823-b655-4890-8d64-0f9349be3388",
                      "parentUUID": "5ae8e72c-fcf5-4643-887a-ccaa800642ae",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9f4a6823-b655-4890-8d64-0f9349be3388"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0759f60c-3aeb-421f-8a4c-ae06e48362ed",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e4fa59b7-371f-4a46-9035-49ab5903c94d",
                      "parentUUID": "0759f60c-3aeb-421f-8a4c-ae06e48362ed",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e4fa59b7-371f-4a46-9035-49ab5903c94d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f86380d8-5d9c-4193-8f53-90da7452b891",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fd0ab3da-78a3-4dae-a93c-b11468352fd0",
                      "parentUUID": "f86380d8-5d9c-4193-8f53-90da7452b891",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fd0ab3da-78a3-4dae-a93c-b11468352fd0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b2885de7-95be-4962-bd46-8703c139270d",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "035599a9-831c-4dcc-97d3-2549fc784270",
                      "parentUUID": "b2885de7-95be-4962-bd46-8703c139270d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "035599a9-831c-4dcc-97d3-2549fc784270"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a2f3c369-6c78-4206-a0d5-9b9ef9e49816",
                  "title": " get /api/skuitems/:rfid/testResults/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get a specific test result with the rfid and id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults/:id Get a specific test result with the rfid and id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    //console.log(res.body[0]);\n    agent.get('/api/skuitems/'+rfid+'/testResults/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "565669e7-146f-46ff-b03e-f31138ad4dd0",
                      "parentUUID": "a2f3c369-6c78-4206-a0d5-9b9ef9e49816",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "565669e7-146f-46ff-b03e-f31138ad4dd0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a1f8f75e-35c3-42cf-b456-7f2f18e2baf4",
                  "title": " get /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get a specific test result with the rfid and id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResult/:id Get a specific test result with the rfid and id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let alltdids = ids.getIdTestDescriptor();\n    console.log(alltdids);\n    agent.get('/api/skuitems/'+rfid+'/testResult/'+alltdids[0])\n    .then(function(res2){\n        console.log(res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "36e4cd60-c525-4bb7-9045-be5f32cab6b8",
                      "parentUUID": "a1f8f75e-35c3-42cf-b456-7f2f18e2baf4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "36e4cd60-c525-4bb7-9045-be5f32cab6b8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9e532044-7a96-47a3-a21c-8216dae32533",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.2 -> Modify a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id FR 3.2.2 -> Modify a quality test",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    console.log(\"this is it\", res.body);\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        console.log(\"I'm heeeeereeee\", res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "51901552-1992-455e-9037-1e5a714b693a",
                      "parentUUID": "9e532044-7a96-47a3-a21c-8216dae32533",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "51901552-1992-455e-9037-1e5a714b693a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f4a7112e-be2f-479e-b558-9468221f06c8",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a test results given its rfid and id and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "b8608baf-56d5-4334-a05e-746fcbd1e61c",
                      "parentUUID": "f4a7112e-be2f-479e-b558-9468221f06c8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b8608baf-56d5-4334-a05e-746fcbd1e61c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9d22239c-82a5-462c-acc6-600e8fa5f6ab",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a test results given its rfid and id and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "2fcf645f-4209-46ae-bc26-e6b2ee32bdaa",
                      "parentUUID": "9d22239c-82a5-462c-acc6-600e8fa5f6ab",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2fcf645f-4209-46ae-bc26-e6b2ee32bdaa"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f99df69e-8c7c-4f7d-8e16-0d1df7e3ed2a",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "aa5bd345-6d14-4ec7-b9eb-2152229b4532",
                      "parentUUID": "f99df69e-8c7c-4f7d-8e16-0d1df7e3ed2a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "aa5bd345-6d14-4ec7-b9eb-2152229b4532"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "55509693-adb1-4e9a-a898-47b19b1e160d",
                  "title": " delete /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.3 -> Delete a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  delete /api/skuitems/:rfid/testResult/:id FR 3.2.3 -> Delete a quality test",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    // console.log(res.body);\n    agent.delete('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "7a452233-9a75-4b75-99a7-77021ce07e19",
                      "parentUUID": "55509693-adb1-4e9a-a898-47b19b1e160d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7a452233-9a75-4b75-99a7-77021ce07e19"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a0e886ca-c449-41d5-a657-b7b7bd98fb2f",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0970b5dd-be84-4886-ae7e-9929389715ec",
                      "parentUUID": "a0e886ca-c449-41d5-a657-b7b7bd98fb2f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0970b5dd-be84-4886-ae7e-9929389715ec"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bc6b4769-8903-4f09-961d-433a365b8f2c",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "543ddc98-abe7-4fc5-bebb-93b2ad7f061f",
                      "parentUUID": "bc6b4769-8903-4f09-961d-433a365b8f2c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "543ddc98-abe7-4fc5-bebb-93b2ad7f061f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "09a23820-70ff-4e8d-be33-64a7b10090e4",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "b28941ca-1bd9-413c-8f70-72da24b17ba1",
                      "parentUUID": "09a23820-70ff-4e8d-be33-64a7b10090e4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b28941ca-1bd9-413c-8f70-72da24b17ba1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ae66ddc2-2ae0-4257-a85a-c35b5c785ca6",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0f6e7f20-d581-42ad-8b2e-cc09137d15b0",
                      "parentUUID": "ae66ddc2-2ae0-4257-a85a-c35b5c785ca6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0f6e7f20-d581-42ad-8b2e-cc09137d15b0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ee72fad7-932c-4d63-b966-046e25a4a78c",
              "title": "Test user CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "6b9f4a70-8622-4df2-a8de-100c40ba0ff7",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9fe4e679-aead-47d4-a03d-0a8942e2a7bd",
                      "parentUUID": "6b9f4a70-8622-4df2-a8de-100c40ba0ff7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9fe4e679-aead-47d4-a03d-0a8942e2a7bd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "eb1528e2-e9b5-488d-a5e9-228e99b503b7",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "bef44874-16c8-488c-905c-4bb8677ff49b",
                      "parentUUID": "eb1528e2-e9b5-488d-a5e9-228e99b503b7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bef44874-16c8-488c-905c-4bb8677ff49b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "94165c16-ec49-42ff-83aa-d1c5d2f1fae9",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6b421243-43ed-4079-803d-eaee4a8b1cf7",
                      "parentUUID": "94165c16-ec49-42ff-83aa-d1c5d2f1fae9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6b421243-43ed-4079-803d-eaee4a8b1cf7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8ae66ac5-027b-4a67-b28e-32e0afc5db72",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "577e44e9-dbae-43f5-b00d-097721f7e4e8",
                      "parentUUID": "8ae66ac5-027b-4a67-b28e-32e0afc5db72",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "577e44e9-dbae-43f5-b00d-097721f7e4e8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cd1b1c3a-8709-4faa-990d-4b9fe61b7518",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a4b232ca-de2d-4494-9670-24b0539640a1",
                      "parentUUID": "cd1b1c3a-8709-4faa-990d-4b9fe61b7518",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a4b232ca-de2d-4494-9670-24b0539640a1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "39d2aeca-bf63-4dba-8793-dd038a661638",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "461add32-a1c0-42ad-9422-09a7fab6f2d6",
                      "parentUUID": "39d2aeca-bf63-4dba-8793-dd038a661638",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "461add32-a1c0-42ad-9422-09a7fab6f2d6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "569f500f-7bc9-4a7d-87cc-2f9b44f4e087",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7a4f8b5c-1b05-453a-bc87-c29a096b39c1",
                      "parentUUID": "569f500f-7bc9-4a7d-87cc-2f9b44f4e087",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7a4f8b5c-1b05-453a-bc87-c29a096b39c1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b39c518b-640c-458a-a318-adc313ea21fa",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "31ed3932-6827-4f39-a138-d1545998d3b5",
                      "parentUUID": "b39c518b-640c-458a-a318-adc313ea21fa",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "31ed3932-6827-4f39-a138-d1545998d3b5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "96918ad1-5934-40c5-91ae-fcb9232e9023",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b060da22-36ed-41ee-8e28-83566d6c9f94",
                      "parentUUID": "96918ad1-5934-40c5-91ae-fcb9232e9023",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b060da22-36ed-41ee-8e28-83566d6c9f94"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e0eb2dac-8177-49b6-8c03-b770ed8f042b",
              "title": "Test RestockOrder CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "4b85ded6-dad6-4436-9ae9-55c033b39118",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "ebea6222-4f7b-40bc-95a8-ec6241f232b5",
                      "parentUUID": "4b85ded6-dad6-4436-9ae9-55c033b39118",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ebea6222-4f7b-40bc-95a8-ec6241f232b5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "11fabb05-76b9-4dd2-bff3-f7eab026d4d2",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "38df0064-322c-4b2a-9bcf-a2e7e7591c0d",
                      "parentUUID": "11fabb05-76b9-4dd2-bff3-f7eab026d4d2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "38df0064-322c-4b2a-9bcf-a2e7e7591c0d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "052a23f1-0bc4-4237-9f76-02e6d3825739",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "d5d0b18c-4a65-4fbb-bcfc-e9726d4dd220",
                      "parentUUID": "052a23f1-0bc4-4237-9f76-02e6d3825739",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d5d0b18c-4a65-4fbb-bcfc-e9726d4dd220"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "73c17ed7-4b6d-4676-a915-ca8b35aa947e",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a596bb46-0a76-43b7-8bbf-226393a76bb7",
                      "parentUUID": "73c17ed7-4b6d-4676-a915-ca8b35aa947e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a596bb46-0a76-43b7-8bbf-226393a76bb7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b21269a4-7ccd-46d1-831b-3d43bb47a3e6",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0f36c831-5c34-4a4d-bf65-abfd43998f1a",
                      "parentUUID": "b21269a4-7ccd-46d1-831b-3d43bb47a3e6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0f36c831-5c34-4a4d-bf65-abfd43998f1a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "549c022f-fa05-472e-8332-07ce05378d8a",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "845726ca-b62b-4ee8-892e-37cd33c1415b",
                      "parentUUID": "549c022f-fa05-472e-8332-07ce05378d8a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "845726ca-b62b-4ee8-892e-37cd33c1415b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bfb85a30-887d-4318-b653-e700d353b934",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f982fb48-6328-40ae-9641-1eb9f376daa5",
                      "parentUUID": "bfb85a30-887d-4318-b653-e700d353b934",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f982fb48-6328-40ae-9641-1eb9f376daa5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a296629d-3631-4090-91dd-875e1cd82ff9",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1ae39ceb-db77-4e25-8ddf-009d144c16f5",
                      "parentUUID": "a296629d-3631-4090-91dd-875e1cd82ff9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1ae39ceb-db77-4e25-8ddf-009d144c16f5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3f86e6b8-521c-4b29-963b-e3e22f7721fe",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "131511ed-9c98-45b7-a7d1-bf9908bfe510",
                      "parentUUID": "3f86e6b8-521c-4b29-963b-e3e22f7721fe",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "131511ed-9c98-45b7-a7d1-bf9908bfe510"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "67fc5ea8-547a-4bc4-bdfe-841ac5616d7f",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "59247fbd-4b62-4c42-9694-e822687ad734",
                      "parentUUID": "67fc5ea8-547a-4bc4-bdfe-841ac5616d7f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "59247fbd-4b62-4c42-9694-e822687ad734"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "21c63bf3-85fc-4032-aac7-e8d5bb87aec5",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0a6670fa-c788-4391-a738-f4835a349020",
                      "parentUUID": "21c63bf3-85fc-4032-aac7-e8d5bb87aec5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0a6670fa-c788-4391-a738-f4835a349020"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7e48f1e0-5d63-4966-9b4f-ef9440aa3bfc",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "cd664014-e315-4142-a25d-b5ed00ac213d",
                      "parentUUID": "7e48f1e0-5d63-4966-9b4f-ef9440aa3bfc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cd664014-e315-4142-a25d-b5ed00ac213d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "dff1981c-19d0-4ecf-adb4-316929c5a4fb",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "8ac26264-14c6-496c-8cb4-95f146c18302",
                      "parentUUID": "dff1981c-19d0-4ecf-adb4-316929c5a4fb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8ac26264-14c6-496c-8cb4-95f146c18302"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6ad80e76-f453-4719-8580-5c9ffc5339aa",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 20,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "3d980a94-2d7d-42c0-a503-3b68fcbfc5c8",
                      "parentUUID": "6ad80e76-f453-4719-8580-5c9ffc5339aa",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3d980a94-2d7d-42c0-a503-3b68fcbfc5c8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 20,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d22863ad-cba8-43dd-a4b4-eb59e0e284d0",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 18,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "72423b1c-dae6-4fb0-b03a-ba3eb7b50041",
                      "parentUUID": "d22863ad-cba8-43dd-a4b4-eb59e0e284d0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "72423b1c-dae6-4fb0-b03a-ba3eb7b50041"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 18,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fed10dac-e538-4694-8964-75404937f08f",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 19,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8cc520a1-fccb-4d9c-884a-502fe8b431fd",
                      "parentUUID": "fed10dac-e538-4694-8964-75404937f08f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8cc520a1-fccb-4d9c-884a-502fe8b431fd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 19,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0fa13d38-3b32-4781-9bfb-02e9bebdf262",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet firstSupplierId;\nagent.get('/api/suppliers')\n.then(function(res){\n    firstSupplierId = res.body[0].id;\n    agent.post('/api/restockOrder')\n    .send(myrestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "b711b12c-d566-4290-8ffb-57de452840cb",
                      "parentUUID": "0fa13d38-3b32-4781-9bfb-02e9bebdf262",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b711b12c-d566-4290-8ffb-57de452840cb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4e606537-ae8e-4727-9b67-e1aeb50823ec",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9121047d-beaa-4972-8eff-31e1dbfe8093",
                      "parentUUID": "4e606537-ae8e-4727-9b67-e1aeb50823ec",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9121047d-beaa-4972-8eff-31e1dbfe8093"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "71820bcf-2fb7-46be-8ef9-8a97a4fe5023",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9b1edd4d-ecb7-4dc6-9024-4e72e0814af8",
                      "parentUUID": "71820bcf-2fb7-46be-8ef9-8a97a4fe5023",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9b1edd4d-ecb7-4dc6-9024-4e72e0814af8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2b5f48d3-1310-4074-b9ac-642a3c865d58",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "972e5f19-dd10-4dd6-9cfd-15d4c493b56c",
                      "parentUUID": "2b5f48d3-1310-4074-b9ac-642a3c865d58",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "972e5f19-dd10-4dd6-9cfd-15d4c493b56c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "352209c5-1751-4060-a28b-df5e8607492d",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "d35b082a-edc8-4271-9837-19310a05b8aa",
                      "parentUUID": "352209c5-1751-4060-a28b-df5e8607492d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d35b082a-edc8-4271-9837-19310a05b8aa"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0cccb90c-53d2-43fc-ae22-3f16f93630b6",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "529448f9-e0d8-4e01-8928-e80fc1a51a54",
                      "parentUUID": "0cccb90c-53d2-43fc-ae22-3f16f93630b6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "529448f9-e0d8-4e01-8928-e80fc1a51a54"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ad124b62-5406-4830-8dc9-ca6ebc4c2a68",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "05604525-82ad-4734-9bc5-30fcc855777f",
                      "parentUUID": "ad124b62-5406-4830-8dc9-ca6ebc4c2a68",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "05604525-82ad-4734-9bc5-30fcc855777f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "75528739-578f-401b-be7d-655ead588283",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "025cf034-8bfa-4047-b5d0-0a8d58300f93",
                      "parentUUID": "75528739-578f-401b-be7d-655ead588283",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "025cf034-8bfa-4047-b5d0-0a8d58300f93"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "540b3615-743f-489e-93dd-ce88fef03664",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "47ee3275-7ff0-4a7c-989b-a8f215a81535",
                      "parentUUID": "540b3615-743f-489e-93dd-ce88fef03664",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "47ee3275-7ff0-4a7c-989b-a8f215a81535"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3d44cf9f-bf0f-40de-8dca-53d1a5ad84f2",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":allskuitems})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "650a3664-76a9-431e-a2ab-21411c89fdc6",
                      "parentUUID": "3d44cf9f-bf0f-40de-8dca-53d1a5ad84f2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "650a3664-76a9-431e-a2ab-21411c89fdc6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f3b05915-1167-4272-b6d7-f4f2da840b8e",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send(null)\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "a0d4b8dd-b877-4064-9b38-4122fa5ac745",
                      "parentUUID": "f3b05915-1167-4272-b6d7-f4f2da840b8e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a0d4b8dd-b877-4064-9b38-4122fa5ac745"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d6d8efdf-3203-4a47-8bd6-dba06632c551",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "d084ef49-65d8-4a63-903d-32986550df26",
                      "parentUUID": "d6d8efdf-3203-4a47-8bd6-dba06632c551",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d084ef49-65d8-4a63-903d-32986550df26"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9eb6b4c1-3ea1-4690-b7d3-baa6ad92bcb3",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "a814b3e3-7ce6-421f-9b05-02b31d6feb6d",
                      "parentUUID": "9eb6b4c1-3ea1-4690-b7d3-baa6ad92bcb3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a814b3e3-7ce6-421f-9b05-02b31d6feb6d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "47662315-a03c-4830-a72e-1f399e68a42c",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "844dd7cf-96f6-4494-a843-b9ed119cc0cf",
                      "parentUUID": "47662315-a03c-4830-a72e-1f399e68a42c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "844dd7cf-96f6-4494-a843-b9ed119cc0cf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7a18b073-0611-4963-a6f2-682874333dd9",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 10000;\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2021/12/29\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "a5a58b08-e8c7-4826-bb56-b9e2c19d2c7d",
                      "parentUUID": "7a18b073-0611-4963-a6f2-682874333dd9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a5a58b08-e8c7-4826-bb56-b9e2c19d2c7d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cd095554-e609-40a4-8c96-14c2e20a1603",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "8f7c13bc-851b-4992-91ed-129c407c8fd1",
                      "parentUUID": "cd095554-e609-40a4-8c96-14c2e20a1603",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8f7c13bc-851b-4992-91ed-129c407c8fd1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "538b7caf-eadc-4c43-af5a-c9e7f07a0d1b",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "029ae59a-500d-4a39-96e2-7be4e12f87b8",
                      "parentUUID": "538b7caf-eadc-4c43-af5a-c9e7f07a0d1b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "029ae59a-500d-4a39-96e2-7be4e12f87b8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e82fb994-6e7a-4d83-b321-258614998309",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "559958b5-f791-4cae-96df-9c7c268eb249",
                      "parentUUID": "e82fb994-6e7a-4d83-b321-258614998309",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "559958b5-f791-4cae-96df-9c7c268eb249"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "53efc654-4c02-43eb-b0c9-215b664736df",
              "title": "Test ReturnOrder CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "9ea7e409-6161-4749-8364-a28dee45d684",
                  "title": "Removing all return orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features Removing all return orders Getting and removing",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/returnOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "53c57882-ee93-4107-a098-d29451139350",
                      "parentUUID": "9ea7e409-6161-4749-8364-a28dee45d684",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "53c57882-ee93-4107-a098-d29451139350"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "070c9560-29e1-4215-b53d-96d81bcc53bb",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "fd9ab74a-4dd9-4c95-8cf4-9f76adeab3df",
                      "parentUUID": "070c9560-29e1-4215-b53d-96d81bcc53bb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fd9ab74a-4dd9-4c95-8cf4-9f76adeab3df"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "683fcd6f-ec8b-42de-ae3b-c56c2814227b",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "b0ec3f38-9716-443e-a2db-e5bd85bf0137",
                      "parentUUID": "683fcd6f-ec8b-42de-ae3b-c56c2814227b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b0ec3f38-9716-443e-a2db-e5bd85bf0137"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f5ae0f1e-6ca1-449a-9c37-a547da436b77",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "883d427c-728f-4f95-8f95-94297f235422",
                      "parentUUID": "f5ae0f1e-6ca1-449a-9c37-a547da436b77",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "883d427c-728f-4f95-8f95-94297f235422"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2c598d7d-4250-4838-9f30-f042bf4448f2",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "50c8ecc0-e828-4ab5-822e-1b58f602938a",
                      "parentUUID": "2c598d7d-4250-4838-9f30-f042bf4448f2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "50c8ecc0-e828-4ab5-822e-1b58f602938a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "67933b53-62e4-46ae-938a-f474f30ae9ef",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5ca335b5-3831-4924-b479-3dafc5ae686e",
                      "parentUUID": "67933b53-62e4-46ae-938a-f474f30ae9ef",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5ca335b5-3831-4924-b479-3dafc5ae686e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8aa3f7e5-a7ca-4469-a165-9d747b7b9940",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0b500877-9aab-424e-bd57-4627d76b1fbb",
                      "parentUUID": "8aa3f7e5-a7ca-4469-a165-9d747b7b9940",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0b500877-9aab-424e-bd57-4627d76b1fbb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0c091ad7-75db-4248-a1a9-1df4df2f48e0",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8653b98e-b2dd-48ef-b98a-8a8af95ae668",
                      "parentUUID": "0c091ad7-75db-4248-a1a9-1df4df2f48e0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8653b98e-b2dd-48ef-b98a-8a8af95ae668"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7a1c7aab-0176-4348-b577-7293cc0d267f",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6a0a6ab2-6189-4367-aa82-214b4228cac7",
                      "parentUUID": "7a1c7aab-0176-4348-b577-7293cc0d267f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6a0a6ab2-6189-4367-aa82-214b4228cac7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7755a2d4-b51a-4fa3-9dfa-c2c48d310e3c",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 58,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7784e466-0e30-47f4-b2d0-d4877f2a3281",
                      "parentUUID": "7755a2d4-b51a-4fa3-9dfa-c2c48d310e3c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7784e466-0e30-47f4-b2d0-d4877f2a3281"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 58,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ce1a49b5-0a28-4c2a-b79f-f6cc4a64768c",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5ff6c2e0-5c26-4df9-8c38-54675451a84e",
                      "parentUUID": "ce1a49b5-0a28-4c2a-b79f-f6cc4a64768c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5ff6c2e0-5c26-4df9-8c38-54675451a84e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "361b4c03-1c35-4868-bd71-545a299f9b62",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7698df66-8afa-421b-956b-c18d03b4e5a8",
                      "parentUUID": "361b4c03-1c35-4868-bd71-545a299f9b62",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7698df66-8afa-421b-956b-c18d03b4e5a8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1da372aa-36b3-409b-ab86-4b257fb4d57e",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "24b00a00-d721-4599-9583-35783053469a",
                      "parentUUID": "1da372aa-36b3-409b-ab86-4b257fb4d57e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "24b00a00-d721-4599-9583-35783053469a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "df8110dc-bdd9-48bf-b6a7-0b712fb64d1d",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "eeb5df11-3c4c-40ca-9911-971e9ee86d20",
                      "parentUUID": "df8110dc-bdd9-48bf-b6a7-0b712fb64d1d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "eeb5df11-3c4c-40ca-9911-971e9ee86d20"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "23fac56f-ffbc-4adc-9f35-7547b3587297",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 16,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "0746a2fa-2f20-483b-8326-6a6f2f072ab2",
                      "parentUUID": "23fac56f-ffbc-4adc-9f35-7547b3587297",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0746a2fa-2f20-483b-8326-6a6f2f072ab2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 16,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ab2c86b8-e7e3-476c-a4e2-0d99c452bc1e",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 19,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "003bf37f-b6fd-406f-a4f6-bba17930ea47",
                      "parentUUID": "ab2c86b8-e7e3-476c-a4e2-0d99c452bc1e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "003bf37f-b6fd-406f-a4f6-bba17930ea47"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 19,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b3038035-df3c-4114-93f8-1cbc66b1da10",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e7dd952e-4431-4c9e-8ff1-f2df9572c8b9",
                      "parentUUID": "b3038035-df3c-4114-93f8-1cbc66b1da10",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e7dd952e-4431-4c9e-8ff1-f2df9572c8b9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8ad45b13-e09a-4132-b32b-cd95fd7be1eb",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "39a5b581-d1b8-42a8-8a63-aea3eee781bf",
                      "parentUUID": "8ad45b13-e09a-4132-b32b-cd95fd7be1eb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "39a5b581-d1b8-42a8-8a63-aea3eee781bf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f0519074-df1d-4b17-9312-e29297402d41",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "6e4cf0f2-fdcb-4807-a4ff-fab1c3dcf33a",
                      "parentUUID": "f0519074-df1d-4b17-9312-e29297402d41",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6e4cf0f2-fdcb-4807-a4ff-fab1c3dcf33a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "327f67c6-6086-427c-aa67-ab8bf39905c4",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c40fddb1-9afd-41bb-a2fd-e6b57900a89a",
                      "parentUUID": "327f67c6-6086-427c-aa67-ab8bf39905c4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c40fddb1-9afd-41bb-a2fd-e6b57900a89a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ce5d93a4-fd00-43ac-b570-152930460199",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "96bebb01-e9ab-4154-a2bd-b73f0f1294cb",
                      "parentUUID": "ce5d93a4-fd00-43ac-b570-152930460199",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "96bebb01-e9ab-4154-a2bd-b73f0f1294cb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3c1654fb-3359-4427-8944-c51896ad225e",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ce88b829-8d08-4916-b426-008f0cbd12bc",
                      "parentUUID": "3c1654fb-3359-4427-8944-c51896ad225e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ce88b829-8d08-4916-b426-008f0cbd12bc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a1c01f9d-3af4-4dee-ac1f-d4488bc250f4",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "15bd25c3-20c0-47e8-a7a1-1bd7f4c009f8",
                      "parentUUID": "a1c01f9d-3af4-4dee-ac1f-d4488bc250f4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "15bd25c3-20c0-47e8-a7a1-1bd7f4c009f8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0981cb6b-b31a-4a7b-8c9f-2d66316fe17d",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/returnOrder')\n.send(myretord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5dc188a7-c9d6-43c2-92c9-25595feedb6f",
                      "parentUUID": "0981cb6b-b31a-4a7b-8c9f-2d66316fe17d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5dc188a7-c9d6-43c2-92c9-25595feedb6f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d07983a7-2259-4d6c-913c-042dd58b8a05",
                  "title": " get /api/returnOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all return orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders  get all return orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idrestockorders = ids.getIdRestockOrdersIssued();\n    let idretord = [];\n    res.body.length.should.be.eql(myretord.length);\n    for(let i = 0; i<res.body.length; i++){\n        idretord[i] = res.body[i].id;\n        res.body[i].returnDate.should.equal(myretord[i].returnDate);\n        res.body[i].restockOrderId.should.equal(idrestockorders[myretord[i].restockOrderId]);\n    }\n    ids.setIdReturnOrders(idretord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "566b7558-a56f-4702-92ca-b9ab35007132",
                      "parentUUID": "d07983a7-2259-4d6c-913c-042dd58b8a05",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "566b7558-a56f-4702-92ca-b9ab35007132"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6d536e84-7952-4eaf-8d4f-a2c59f625efb",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsret = ids.getIdReturnOrders();\n//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+idsret[id])\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.returnDate.should.equal(myretord.returnDate);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b02226ae-0fb1-445a-94c0-4c183515451c",
                      "parentUUID": "6d536e84-7952-4eaf-8d4f-a2c59f625efb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b02226ae-0fb1-445a-94c0-4c183515451c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a4fae62e-98ff-42d9-8daf-98294175335b",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d9d0aa3c-0e1c-48dd-9283-664ca2f6d7bb",
                      "parentUUID": "a4fae62e-98ff-42d9-8daf-98294175335b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d9d0aa3c-0e1c-48dd-9283-664ca2f6d7bb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "95a63522-80a4-47c9-bb7b-5be2b2d44ce4",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f5f0c345-48ae-4aba-bb20-f0499b6dd499",
                      "parentUUID": "95a63522-80a4-47c9-bb7b-5be2b2d44ce4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f5f0c345-48ae-4aba-bb20-f0499b6dd499"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4a0e54f3-de55-4e00-9040-458e28a9f128",
              "title": "Test Internal Order CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "a718b1d3-8270-4016-b472-a9a219d2ed61",
                  "title": "Removing all Internal Orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Interna Orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features Removing all Internal Orders Getting Interna Orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/internalOrders/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "fe38c339-b92a-42bb-8315-2be1e34063c9",
                      "parentUUID": "a718b1d3-8270-4016-b472-a9a219d2ed61",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fe38c339-b92a-42bb-8315-2be1e34063c9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a1b82643-13b1-4aa3-98b9-1e25806a4e3a",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "e7c6e9d2-2a4e-49ea-9709-cd062911ec04",
                      "parentUUID": "a1b82643-13b1-4aa3-98b9-1e25806a4e3a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e7c6e9d2-2a4e-49ea-9709-cd062911ec04"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "abd7cc1c-08ab-44a4-a29b-bac803a82d03",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "6d1075ee-8168-423d-9cc7-76f9ed272df9",
                      "parentUUID": "abd7cc1c-08ab-44a4-a29b-bac803a82d03",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6d1075ee-8168-423d-9cc7-76f9ed272df9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e751e806-44d4-4a9e-9853-b78de21916c3",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3453288e-e88c-4ffb-bfbb-9d42b67f27b4",
                      "parentUUID": "e751e806-44d4-4a9e-9853-b78de21916c3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3453288e-e88c-4ffb-bfbb-9d42b67f27b4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "914b9967-443a-4eb5-b9c0-14e3c7c550e2",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1bccf573-817f-4a8a-8dae-6cce0bccd92a",
                      "parentUUID": "914b9967-443a-4eb5-b9c0-14e3c7c550e2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1bccf573-817f-4a8a-8dae-6cce0bccd92a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cacb10c9-18e4-4272-b72e-0cae0f628ef0",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "64b609c0-fce2-4833-993d-81b56b0a9e2e",
                      "parentUUID": "cacb10c9-18e4-4272-b72e-0cae0f628ef0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "64b609c0-fce2-4833-993d-81b56b0a9e2e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "82ba48c6-127a-41ae-9178-396f154686a3",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fd26e992-e74e-4bd7-b58e-e2f959bada1b",
                      "parentUUID": "82ba48c6-127a-41ae-9178-396f154686a3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fd26e992-e74e-4bd7-b58e-e2f959bada1b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "272a0cd4-bc1b-4dbb-b4d4-fe2bed61cc72",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "aaa5325a-80ea-459a-b5b7-966a68ddb59a",
                      "parentUUID": "272a0cd4-bc1b-4dbb-b4d4-fe2bed61cc72",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "aaa5325a-80ea-459a-b5b7-966a68ddb59a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1e0e3667-ded9-43ca-9ffc-35821a7c4a3b",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 15,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                      "err": {},
                      "uuid": "094f8dba-a370-471e-b8c2-2779ac0a40ef",
                      "parentUUID": "1e0e3667-ded9-43ca-9ffc-35821a7c4a3b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "094f8dba-a370-471e-b8c2-2779ac0a40ef"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 15,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9b80ba13-0fa3-49d6-afee-876d868c47c9",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 18,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                      "err": {},
                      "uuid": "080c48fc-d4a4-40c6-b38c-0c5b436b4747",
                      "parentUUID": "9b80ba13-0fa3-49d6-afee-876d868c47c9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "080c48fc-d4a4-40c6-b38c-0c5b436b4747"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 18,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "47581cee-e4e9-42ed-acf8-5bcb6b02a342",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(currentInternalOrders[ith]);\nagent.post('/api/internalOrders')\n.send(intord)\n.then(function(res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "5c5486f8-70db-4268-99b8-12be967232cf",
                      "parentUUID": "47581cee-e4e9-42ed-acf8-5bcb6b02a342",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5c5486f8-70db-4268-99b8-12be967232cf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "28941ad2-b37d-436e-b6c7-414b9ea376b3",
                  "title": " get /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all internal orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f69f406b-4dfd-47ec-84c1-0c9f60d5280a",
                      "parentUUID": "28941ad2-b37d-436e-b6c7-414b9ea376b3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f69f406b-4dfd-47ec-84c1-0c9f60d5280a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4fb22efc-f0ca-4ac5-8a5c-3b0110684f90",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9dbeaeda-ef29-44c9-be47-9571a19aaed8",
                      "parentUUID": "4fb22efc-f0ca-4ac5-8a5c-3b0110684f90",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9dbeaeda-ef29-44c9-be47-9571a19aaed8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "985d4b4d-97e2-4caf-bcd9-82b366408250",
                  "title": " put /api/internalOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify the state of an IO",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "0306dfbb-11a9-471a-8255-868b3141d14e",
                      "parentUUID": "985d4b4d-97e2-4caf-bcd9-82b366408250",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0306dfbb-11a9-471a-8255-868b3141d14e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "660e57b1-822f-4b53-b396-d6eb80cea84b",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ababaf92-9182-458b-ba91-b3474bf33d85",
                      "parentUUID": "660e57b1-822f-4b53-b396-d6eb80cea84b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ababaf92-9182-458b-ba91-b3474bf33d85"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d5c6ea6e-7013-48d5-bf0d-d1fac693e3b3",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersAccepted')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order accepted', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fec2f139-34fc-45c1-bc15-e7b46ff9bbe4",
                      "parentUUID": "d5c6ea6e-7013-48d5-bf0d-d1fac693e3b3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fec2f139-34fc-45c1-bc15-e7b46ff9bbe4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6e448f01-5292-45c2-8fcd-9d08c8990552",
                  "title": " put /api/internalOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify the state of an IO",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "e618ac84-45ee-4d55-902e-a89a84fa6fe7",
                      "parentUUID": "6e448f01-5292-45c2-8fcd-9d08c8990552",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e618ac84-45ee-4d55-902e-a89a84fa6fe7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "196c0f4f-2497-4220-abd9-7ce56028a8b5",
                  "title": " get /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all internal orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "192893b5-bcbf-4161-ba77-0d2622bae3c8",
                      "parentUUID": "196c0f4f-2497-4220-abd9-7ce56028a8b5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "192893b5-bcbf-4161-ba77-0d2622bae3c8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "233f3d09-be2e-4f5d-bd98-129bd13a44da",
              "title": "Test Item CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "69884db2-7239-42c8-aa8f-45ce2c6a5901",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "05553d6b-f3a9-4605-ad4f-8760c072ab0b",
                      "parentUUID": "69884db2-7239-42c8-aa8f-45ce2c6a5901",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "05553d6b-f3a9-4605-ad4f-8760c072ab0b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d51814c9-89a2-490c-840a-3444b8290b92",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "732e2a4e-ba2a-492a-82f9-b0026b2f2bd3",
                      "parentUUID": "d51814c9-89a2-490c-840a-3444b8290b92",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "732e2a4e-ba2a-492a-82f9-b0026b2f2bd3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a75860ae-def1-4404-a18e-f709cc5d13b9",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c9aa0bdd-63a2-4c40-bc8d-c9d9636668d6",
                      "parentUUID": "a75860ae-def1-4404-a18e-f709cc5d13b9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c9aa0bdd-63a2-4c40-bc8d-c9d9636668d6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "79cb5a68-c16b-4b12-9fba-30b0a5412816",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "df706d7b-dadd-4780-a9ac-6d7101901513",
                      "parentUUID": "79cb5a68-c16b-4b12-9fba-30b0a5412816",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "df706d7b-dadd-4780-a9ac-6d7101901513"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9b25aeff-325d-4b76-8647-a044c2d71cb0",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d1c796d4-f6df-4409-ac9f-3211e14c96e6",
                      "parentUUID": "9b25aeff-325d-4b76-8647-a044c2d71cb0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d1c796d4-f6df-4409-ac9f-3211e14c96e6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "505cab42-c07f-4769-a010-87d29c43c495",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "03d770fc-344b-46f7-b15f-97be41710c85",
                      "parentUUID": "505cab42-c07f-4769-a010-87d29c43c495",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "03d770fc-344b-46f7-b15f-97be41710c85"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1b15dcfa-1489-42b8-be2f-74e02a090543",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "06aece92-6159-43a8-89bc-6b0d8ebcf612",
                      "parentUUID": "1b15dcfa-1489-42b8-be2f-74e02a090543",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "06aece92-6159-43a8-89bc-6b0d8ebcf612"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "45c55b8f-231c-4ada-9725-04e5c9964106",
                  "title": "Removing all Items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features Removing all Items Getting Items",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "ed8211c9-173f-41be-af27-677a04909e05",
                      "parentUUID": "45c55b8f-231c-4ada-9725-04e5c9964106",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ed8211c9-173f-41be-af27-677a04909e05"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0e1511d0-1c1d-4196-8c33-ba2885da4f07",
                  "title": " get /api/items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/items Getting all items",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "a6586b63-c4b6-47e4-979e-57a7ccc22fd6",
                      "parentUUID": "0e1511d0-1c1d-4196-8c33-ba2885da4f07",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a6586b63-c4b6-47e4-979e-57a7ccc22fd6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7279d5a6-edf9-4cb8-97e8-dd84eb280342",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3f079e52-3277-43a0-af4c-31102bc91cda",
                      "parentUUID": "7279d5a6-edf9-4cb8-97e8-dd84eb280342",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3f079e52-3277-43a0-af4c-31102bc91cda"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7aff770d-01f1-409b-99da-f6e3488e6250",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1d74d71e-c168-440d-8676-6c6afe97f20d",
                      "parentUUID": "7aff770d-01f1-409b-99da-f6e3488e6250",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1d74d71e-c168-440d-8676-6c6afe97f20d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8dcaea19-6e83-4c8c-90e9-b8a34730a8c3",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7951ee6a-2d90-4d0b-b367-58f5a83b0ee2",
                      "parentUUID": "8dcaea19-6e83-4c8c-90e9-b8a34730a8c3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7951ee6a-2d90-4d0b-b367-58f5a83b0ee2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "83a23ccb-b356-4fa9-a73b-1dc7ffbc8dc1",
                  "title": "post /api/item/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/item/ Adding item details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "b4f0235c-1b7c-41c9-bf5e-9da3a04a345f",
                      "parentUUID": "83a23ccb-b356-4fa9-a73b-1dc7ffbc8dc1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b4f0235c-1b7c-41c9-bf5e-9da3a04a345f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8ec59872-1cd9-4dc0-aa93-39d664c4599b",
                  "title": "post /api/item/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/item/ Adding item details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "a4c8c74b-aa78-41bd-88d1-d4e2fcc641b0",
                      "parentUUID": "8ec59872-1cd9-4dc0-aa93-39d664c4599b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a4c8c74b-aa78-41bd-88d1-d4e2fcc641b0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "00e32f0f-ab1c-46bc-be41-7f8eb14532a4",
                  "title": " get /api/items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/items Getting all items",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "04ee6742-9745-47c3-9429-0ef218ad47da",
                      "parentUUID": "00e32f0f-ab1c-46bc-be41-7f8eb14532a4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "04ee6742-9745-47c3-9429-0ef218ad47da"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "04f2fd05-86da-4011-b1e8-59aa8badf964",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+itemid)\n.then(r => {\n    let idskus = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(r.status, expCode);\n    if (r.status == 200) {\n        r.body.should.be.a('object');\n        r.body.id.should.equal(itemid);\n        r.body.description.should.equal(myexpitem.description);\n        r.body.price.should.equal(myexpitem.price);\n        r.body.SKUId.should.equal(idskus[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "7c66784e-5e6c-43da-a601-9a2ed6b92d0d",
                      "parentUUID": "04f2fd05-86da-4011-b1e8-59aa8badf964",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7c66784e-5e6c-43da-a601-9a2ed6b92d0d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a1dc93e0-3209-4007-a9ca-627c880bbdfe",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "38ad15d1-2bb7-4911-b408-28e40aeb4c15",
                      "parentUUID": "a1dc93e0-3209-4007-a9ca-627c880bbdfe",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "38ad15d1-2bb7-4911-b408-28e40aeb4c15"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c6d41302-35de-4de0-b8b8-a5d3bec05e23",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "f3e14e7c-3b3a-474a-b4c7-954baf94ae9b",
                      "parentUUID": "c6d41302-35de-4de0-b8b8-a5d3bec05e23",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f3e14e7c-3b3a-474a-b4c7-954baf94ae9b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "319e1cdc-80ba-4854-bc0f-60016a2104c7",
                  "title": " put /api/item/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify an item given its ID and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  put /api/item/:id Modify an item given its ID and new fields",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/item/'+ith)\n.send(updateItem(newDescription, newPrice))\n.then(res => {\n    let idsku = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(res.status, expCode);\n    agent.get('/api/items/'+ith)\n    .then (r => {\n        console.log(r.body);\n        assert.equal(r.status,200);\n        r.body.should.be.a('object');\n        r.body.id.should.equal(myexpitem.id);\n        r.body.description.should.equal(newDescription);\n        r.body.price.should.equal(newPrice);\n        r.body.SKUId.should.equal(idsku[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    });\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "bcd46d6b-e8f6-40bb-b2d8-3095b48cb6c8",
                      "parentUUID": "319e1cdc-80ba-4854-bc0f-60016a2104c7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bcd46d6b-e8f6-40bb-b2d8-3095b48cb6c8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "da3d66fd-4edc-4968-a1c2-85a77eeef9d0",
                  "title": " delete /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete an item given its id",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  delete /api/items/:id Delete an item given its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/items/'+ith)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "4711ca3f-d104-46bb-98be-61a9a10e8946",
                      "parentUUID": "da3d66fd-4edc-4968-a1c2-85a77eeef9d0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4711ca3f-d104-46bb-98be-61a9a10e8946"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bd03d8c4-e6da-4997-9ae4-5c3214468e8b",
                  "title": "Removing all Items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features Removing all Items Getting Items",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "c938f9a7-f251-4112-ad1c-28d7c3d3e21f",
                      "parentUUID": "bd03d8c4-e6da-4997-9ae4-5c3214468e8b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c938f9a7-f251-4112-ad1c-28d7c3d3e21f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5e049617-193f-4bc2-bc08-4a63394865bc",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "e1bf363e-fb09-42b4-bd73-0ad00e1e8279",
                      "parentUUID": "5e049617-193f-4bc2-bc08-4a63394865bc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e1bf363e-fb09-42b4-bd73-0ad00e1e8279"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "37625540-294d-40cc-b82a-24c9273e04e1",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "bed90623-9c45-486d-98bb-6d0451750272",
                      "parentUUID": "37625540-294d-40cc-b82a-24c9273e04e1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bed90623-9c45-486d-98bb-6d0451750272"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}