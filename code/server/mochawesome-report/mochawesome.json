{
  "stats": {
    "suites": 542,
    "tests": 520,
    "passes": 520,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-08T18:00:17.249Z",
    "end": "2022-06-08T18:00:20.334Z",
    "duration": 3085,
    "testsRegistered": 520,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "01182a1f-c937-452e-a7be-0a29dbbf4166",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dedb3a66-57cb-4d3a-b697-e5a4d7363b47",
          "title": "Test sku CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "355c1d08-7e96-4221-a974-238911d0e4b6",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test sku CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1039,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "7536e77b-1f80-4617-a26a-d600b89eff57",
                  "parentUUID": "355c1d08-7e96-4221-a974-238911d0e4b6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7536e77b-1f80-4617-a26a-d600b89eff57"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1039,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9dcd527d-728a-4137-a1d5-8d66a7fe6d09",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a7144d77-7b97-4557-b7e9-f75404bdb11f",
                  "parentUUID": "9dcd527d-728a-4137-a1d5-8d66a7fe6d09",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7144d77-7b97-4557-b7e9-f75404bdb11f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dee454fd-df0a-4ad4-a969-9102f1a6a4d6",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f2d13c06-71bd-4051-87f4-cda05aa102dc",
                  "parentUUID": "dee454fd-df0a-4ad4-a969-9102f1a6a4d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f2d13c06-71bd-4051-87f4-cda05aa102dc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ec83e6f7-3b9b-4ace-b52c-73e8c68740e0",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "37b18c6b-f0bd-42ad-8e7d-bd80a6d387e4",
                  "parentUUID": "ec83e6f7-3b9b-4ace-b52c-73e8c68740e0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "37b18c6b-f0bd-42ad-8e7d-bd80a6d387e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b6aef621-123b-4dcd-b11f-6363f77ca822",
              "title": "put /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 b -> Modify an existing SKU",
                  "fullTitle": "Test sku CRUD features put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "47a811db-541d-4949-95f8-1d576a21b6a3",
                  "parentUUID": "b6aef621-123b-4dcd-b11f-6363f77ca822",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "47a811db-541d-4949-95f8-1d576a21b6a3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "922cdd99-6771-46d6-b45b-f4d38902c43d",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7be52f9c-6505-4967-97f8-07e80d7e1e56",
                  "parentUUID": "922cdd99-6771-46d6-b45b-f4d38902c43d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7be52f9c-6505-4967-97f8-07e80d7e1e56"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "34577515-67fc-4c3f-a35a-4bc96ae52a9d",
              "title": "put /api/sku/:id/position",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Changing SKU position passing its id",
                  "fullTitle": "Test sku CRUD features put /api/sku/:id/position Changing SKU position passing its id",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID+'/position')\n.send(pos)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "735d892d-5b2a-4008-a84e-fd2502cbd4cb",
                  "parentUUID": "34577515-67fc-4c3f-a35a-4bc96ae52a9d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "735d892d-5b2a-4008-a84e-fd2502cbd4cb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "82fee3ca-15c8-400d-984a-0ad1a9cfc86e",
              "title": "delete /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.2 -> Delete a SKU",
                  "fullTitle": "Test sku CRUD features delete /api/sku/:id FR 2.2 -> Delete a SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "93be2b31-8cbd-4305-9a2c-1d267cfc80ca",
                  "parentUUID": "82fee3ca-15c8-400d-984a-0ad1a9cfc86e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93be2b31-8cbd-4305-9a2c-1d267cfc80ca"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e8c82bf6-7ca3-443f-871d-f759fc81d32c",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a528e532-4a42-4319-9fc5-d81c148cdab3",
                  "parentUUID": "e8c82bf6-7ca3-443f-871d-f759fc81d32c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a528e532-4a42-4319-9fc5-d81c148cdab3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7006fa47-c952-4ce5-9d9c-1ed4327eb2b5",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e9a24ec5-24d0-4c63-b9b2-d83de1a56ffb",
                  "parentUUID": "7006fa47-c952-4ce5-9d9c-1ed4327eb2b5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9a24ec5-24d0-4c63-b9b2-d83de1a56ffb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "74de174b-e9c8-47d9-9b3d-0c37498976bd",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7d248dc5-9f87-4679-b347-c5c58824a4c8",
                  "parentUUID": "74de174b-e9c8-47d9-9b3d-0c37498976bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d248dc5-9f87-4679-b347-c5c58824a4c8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d1f5eece-fa4e-4531-8476-a74653fb32e8",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "97136654-7b06-49c7-8a9c-0a6c998ec37c",
                  "parentUUID": "d1f5eece-fa4e-4531-8476-a74653fb32e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97136654-7b06-49c7-8a9c-0a6c998ec37c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2bbfee44-53c4-4384-ba49-946161ada1f2",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1e552c95-a920-4d4e-851b-77295359d7da",
                  "parentUUID": "2bbfee44-53c4-4384-ba49-946161ada1f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e552c95-a920-4d4e-851b-77295359d7da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e8ce687a-3cf5-416d-a057-d52beae4779d",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "19fccb79-6d45-4e65-83b0-c48b9cda575a",
                  "parentUUID": "e8ce687a-3cf5-416d-a057-d52beae4779d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19fccb79-6d45-4e65-83b0-c48b9cda575a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "13b81b26-849a-4d80-aa01-2efef0e8c0d3",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9674bd72-6398-4288-bd49-75d84ae46eb2",
                  "parentUUID": "13b81b26-849a-4d80-aa01-2efef0e8c0d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9674bd72-6398-4288-bd49-75d84ae46eb2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "131a61dd-c215-4d9e-80c5-9e1d5de06f11",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "dfe8add2-75da-40c3-804f-c7f3315c93b5",
                  "parentUUID": "131a61dd-c215-4d9e-80c5-9e1d5de06f11",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dfe8add2-75da-40c3-804f-c7f3315c93b5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2b95f213-daa5-49c1-bb7d-871dab32a005",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "adff209f-b90d-44f9-9559-aa60cd100fd3",
                  "parentUUID": "2b95f213-daa5-49c1-bb7d-871dab32a005",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "adff209f-b90d-44f9-9559-aa60cd100fd3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a4fb636d-214f-46ac-8549-4a31a33c29bd",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cb70fc60-9be2-468f-b2cd-59879e71b69a",
                  "parentUUID": "a4fb636d-214f-46ac-8549-4a31a33c29bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb70fc60-9be2-468f-b2cd-59879e71b69a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "121edccc-d5ba-469e-873b-65317bdbd35f",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "484687fd-008b-4dfa-8568-f20113f61dd9",
                  "parentUUID": "121edccc-d5ba-469e-873b-65317bdbd35f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "484687fd-008b-4dfa-8568-f20113f61dd9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9a2ba47f-a28c-4da2-a99b-5a3a0fb51f5d",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4fa6ffe9-a084-4dd2-a3f4-b5b6d96305a4",
                  "parentUUID": "9a2ba47f-a28c-4da2-a99b-5a3a0fb51f5d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4fa6ffe9-a084-4dd2-a3f4-b5b6d96305a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9ff2caa1-e3e3-4b5c-83ca-bc286898cafc",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6e63f81b-4a95-4900-ad48-05a2f3b07000",
                  "parentUUID": "9ff2caa1-e3e3-4b5c-83ca-bc286898cafc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6e63f81b-4a95-4900-ad48-05a2f3b07000"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "83e64a80-0cb7-44a7-9c69-558ccf8ff3d6",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0ad16352-6992-4a96-ac25-f3818df0c380",
                  "parentUUID": "83e64a80-0cb7-44a7-9c69-558ccf8ff3d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ad16352-6992-4a96-ac25-f3818df0c380"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d9f72107-66fa-4fe2-831f-2f6f9a4774e0",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2e999cb7-8735-47d4-bc01-d353c81271fe",
                  "parentUUID": "d9f72107-66fa-4fe2-831f-2f6f9a4774e0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e999cb7-8735-47d4-bc01-d353c81271fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "61ac2ad8-7e58-4adb-ade8-045d69784fd8",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bc16632f-d393-451c-993a-c1b7648d8a80",
                  "parentUUID": "61ac2ad8-7e58-4adb-ade8-045d69784fd8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bc16632f-d393-451c-993a-c1b7648d8a80"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "01ceec24-cbc4-4c4e-a7bb-5d8bde59a96a",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "87370c92-b524-40de-8137-5ced40b89580",
                  "parentUUID": "01ceec24-cbc4-4c4e-a7bb-5d8bde59a96a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "87370c92-b524-40de-8137-5ced40b89580"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3fdbd0f5-298f-4538-8517-9dda29460577",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1ae52982-0e77-43b4-ad6b-79b11f127803",
                  "parentUUID": "3fdbd0f5-298f-4538-8517-9dda29460577",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ae52982-0e77-43b4-ad6b-79b11f127803"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "310449f8-20a1-4a7c-9300-a247ad8a5040",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5652c1cb-e9da-44ba-aee9-06bc255bf016",
                  "parentUUID": "310449f8-20a1-4a7c-9300-a247ad8a5040",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5652c1cb-e9da-44ba-aee9-06bc255bf016"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8efd8707-3402-48b1-8a8a-1e8f4ede75d9",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test sku CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "76110ce3-75ba-40a9-94e0-cc8a7f3a9d06",
                  "parentUUID": "8efd8707-3402-48b1-8a8a-1e8f4ede75d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "76110ce3-75ba-40a9-94e0-cc8a7f3a9d06"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "53d496a8-2702-42e8-a3e5-95e3c236079a",
          "title": "Test skuitem CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fc6905a9-ed4d-4b18-9d12-b481ae2f71e1",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "0ea3318d-7f2e-49fe-94af-8993a778fed6",
                  "parentUUID": "fc6905a9-ed4d-4b18-9d12-b481ae2f71e1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ea3318d-7f2e-49fe-94af-8993a778fed6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c2737c27-f31d-4f38-968d-250390285600",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test skuitem CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "0148f18f-1ab1-4f13-815b-b14be5b6590b",
                  "parentUUID": "c2737c27-f31d-4f38-968d-250390285600",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0148f18f-1ab1-4f13-815b-b14be5b6590b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9e441064-3cfc-40f7-8417-778e0c890611",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5154fa90-18d9-4034-9c8b-166b7e72f2c4",
                  "parentUUID": "9e441064-3cfc-40f7-8417-778e0c890611",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5154fa90-18d9-4034-9c8b-166b7e72f2c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0f6a00a9-8bb5-4414-b9c8-d5bfea2313e1",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "32e91877-5d6b-4dbf-9f2c-f9ff4a11101d",
                  "parentUUID": "0f6a00a9-8bb5-4414-b9c8-d5bfea2313e1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "32e91877-5d6b-4dbf-9f2c-f9ff4a11101d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d7f81c48-fa31-4a73-a2df-63b9f844173e",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test skuitem CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "35ace2b8-0021-4f6c-98eb-238c9da4a5f9",
                  "parentUUID": "d7f81c48-fa31-4a73-a2df-63b9f844173e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "35ace2b8-0021-4f6c-98eb-238c9da4a5f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1ab9b902-c660-4b5f-8b2b-2d471a7921da",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bcdc1d13-53c5-4232-86aa-f3822dd9a00a",
                  "parentUUID": "1ab9b902-c660-4b5f-8b2b-2d471a7921da",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bcdc1d13-53c5-4232-86aa-f3822dd9a00a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a623cc6a-dbd6-4e2b-a515-3ad4be321e43",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bbadd884-4153-4688-9a31-2dc4bf3e3218",
                  "parentUUID": "a623cc6a-dbd6-4e2b-a515-3ad4be321e43",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bbadd884-4153-4688-9a31-2dc4bf3e3218"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "36121f49-85ab-4c10-9df7-86ed68e7248d",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a7c403ff-7bd0-4137-b9f1-247b8a10a7e7",
                  "parentUUID": "36121f49-85ab-4c10-9df7-86ed68e7248d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7c403ff-7bd0-4137-b9f1-247b8a10a7e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e469d5f6-ced7-4ee2-abcb-a65310e26a7e",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fdfc3287-00f6-42d6-9d35-c2a24e702e33",
                  "parentUUID": "e469d5f6-ced7-4ee2-abcb-a65310e26a7e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fdfc3287-00f6-42d6-9d35-c2a24e702e33"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c8036c2a-70c1-40e1-a1f2-cf96f1f2468c",
              "title": "get /api/skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0e859578-ed56-4e49-80f9-5f073dcaf9d1",
                  "parentUUID": "c8036c2a-70c1-40e1-a1f2-cf96f1f2468c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e859578-ed56-4e49-80f9-5f073dcaf9d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cb9088ea-0872-43a8-b45e-c3b5f2850be2",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "906262bc-7d41-4809-a4b4-8de0e91e3001",
                  "parentUUID": "cb9088ea-0872-43a8-b45e-c3b5f2850be2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "906262bc-7d41-4809-a4b4-8de0e91e3001"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f529f0d8-de61-493f-8a25-b5f1662dca8c",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "368ba360-c5a8-4433-acd8-3b41fd490bff",
                  "parentUUID": "f529f0d8-de61-493f-8a25-b5f1662dca8c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "368ba360-c5a8-4433-acd8-3b41fd490bff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "414f5458-07b4-4ffb-a556-658ed742174d",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0f13de3f-fd4a-40e3-951f-3cc2d618ea5b",
                  "parentUUID": "414f5458-07b4-4ffb-a556-658ed742174d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0f13de3f-fd4a-40e3-951f-3cc2d618ea5b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "208097cf-5815-469f-9053-83a21f48cda8",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "72537a8e-4036-4ddc-bd93-29b4aa774c7f",
                  "parentUUID": "208097cf-5815-469f-9053-83a21f48cda8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "72537a8e-4036-4ddc-bd93-29b4aa774c7f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9a385bff-3bc1-4817-83d1-34a3f7f0bdec",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "ad50b990-66c0-42a4-8fbc-249874133498",
                  "parentUUID": "9a385bff-3bc1-4817-83d1-34a3f7f0bdec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad50b990-66c0-42a4-8fbc-249874133498"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f4ff7bb8-dc74-4ba8-a66e-725f16017d17",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "64d8f4f3-3909-4e4f-bb3a-94095db310d5",
                  "parentUUID": "f4ff7bb8-dc74-4ba8-a66e-725f16017d17",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "64d8f4f3-3909-4e4f-bb3a-94095db310d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "eb09ab5a-c34b-423e-93e9-8496f36d8058",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "6ba4f3ac-a81b-47b4-b8bf-ef707e4459b2",
                  "parentUUID": "eb09ab5a-c34b-423e-93e9-8496f36d8058",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6ba4f3ac-a81b-47b4-b8bf-ef707e4459b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3a8182e5-3587-4863-9414-7186c9d624ad",
              "title": "get /api/skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "95894f08-8702-47d4-80d7-4ccf28682487",
                  "parentUUID": "3a8182e5-3587-4863-9414-7186c9d624ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "95894f08-8702-47d4-80d7-4ccf28682487"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a5fdb2ec-91a2-49f3-b504-b7277e64646a",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4e419e28-3ece-4ed6-9e48-bcf06f65d872",
                  "parentUUID": "a5fdb2ec-91a2-49f3-b504-b7277e64646a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e419e28-3ece-4ed6-9e48-bcf06f65d872"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "082ba171-797c-424b-9a5f-9f1af2806967",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "54b3b46a-e838-4c41-a29c-9277ffcb2a8a",
                  "parentUUID": "082ba171-797c-424b-9a5f-9f1af2806967",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "54b3b46a-e838-4c41-a29c-9277ffcb2a8a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "40bcf417-83e8-49c3-88fa-5060855775c7",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "511a7014-85a5-4ba1-9bb7-14c18ec7b36c",
                  "parentUUID": "40bcf417-83e8-49c3-88fa-5060855775c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "511a7014-85a5-4ba1-9bb7-14c18ec7b36c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f6552b13-a1ff-4148-baba-cf63ad56362a",
          "title": "test positions CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3ce8ecb6-2043-462d-8649-e13c760dc0bc",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "test positions CRUD features Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "fcc2f6c6-0cbc-41da-ac81-dd702905948b",
                  "parentUUID": "3ce8ecb6-2043-462d-8649-e13c760dc0bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fcc2f6c6-0cbc-41da-ac81-dd702905948b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e6a9a1a4-df60-40b9-9fc1-5962f72dcde9",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "947fbd86-8ded-4acb-b0dc-d5423be77c76",
                  "parentUUID": "e6a9a1a4-df60-40b9-9fc1-5962f72dcde9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "947fbd86-8ded-4acb-b0dc-d5423be77c76"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "10af37ad-0447-491f-984c-a81531475fee",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "85b0a78e-06fe-4b5d-95aa-eb09b3f6d2c2",
                  "parentUUID": "10af37ad-0447-491f-984c-a81531475fee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "85b0a78e-06fe-4b5d-95aa-eb09b3f6d2c2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0bb1c916-5703-4d89-8d03-b66bd10220b8",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "93ce834a-7fc5-48b0-a3cb-dca3300b4c60",
                  "parentUUID": "0bb1c916-5703-4d89-8d03-b66bd10220b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93ce834a-7fc5-48b0-a3cb-dca3300b4c60"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "57f5dbcd-dbb5-4b26-81bc-09cc5d3c20d8",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "34e6be26-f909-41a6-b4ee-35aed91c3cdc",
                  "parentUUID": "57f5dbcd-dbb5-4b26-81bc-09cc5d3c20d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "34e6be26-f909-41a6-b4ee-35aed91c3cdc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d935dba8-6b0a-41f8-b3ac-3843b10afc72",
              "title": " get /api/positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.3 -> List all positions",
                  "fullTitle": "test positions CRUD features  get /api/positions FR 3.1.3 -> List all positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "22d963b4-cbea-472e-815a-c77dcad91901",
                  "parentUUID": "d935dba8-6b0a-41f8-b3ac-3843b10afc72",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "22d963b4-cbea-472e-815a-c77dcad91901"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "021febf1-6678-4c46-a1a4-2ad121200ccf",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0d6bec60-58fc-4e75-afba-446a3fb8fd81",
                  "parentUUID": "021febf1-6678-4c46-a1a4-2ad121200ccf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0d6bec60-58fc-4e75-afba-446a3fb8fd81"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0d8a4b9c-ed56-4ebc-a5a0-1fbabfc76d34",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "62c881ab-ed2c-4084-a2c8-b803e8147532",
                  "parentUUID": "0d8a4b9c-ed56-4ebc-a5a0-1fbabfc76d34",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "62c881ab-ed2c-4084-a2c8-b803e8147532"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3058f8c5-023f-424f-b096-18741f0adacc",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2cdf1988-1775-49a7-8421-76d7d56b23d5",
                  "parentUUID": "3058f8c5-023f-424f-b096-18741f0adacc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2cdf1988-1775-49a7-8421-76d7d56b23d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9581c64a-06da-4657-ae58-f49d106f4bd2",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a3ce1150-4108-4a6b-b617-15b19bbcfffa",
                  "parentUUID": "9581c64a-06da-4657-ae58-f49d106f4bd2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a3ce1150-4108-4a6b-b617-15b19bbcfffa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a9c7212b-e20b-4b73-9929-ed1670b5ce5e",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0108b44a-6a8b-4c76-a1a7-262832cdd443",
                  "parentUUID": "a9c7212b-e20b-4b73-9929-ed1670b5ce5e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0108b44a-6a8b-4c76-a1a7-262832cdd443"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "da6a5a0e-d0c0-4c55-b871-61212ef8befd",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3e44fbb5-90d1-45bb-aea4-d37f1b46cbc1",
                  "parentUUID": "da6a5a0e-d0c0-4c55-b871-61212ef8befd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e44fbb5-90d1-45bb-aea4-d37f1b46cbc1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "31946ca4-ab63-431a-a5ce-24b8dbb1cb1f",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d756dea5-c439-430d-ac8f-d6a74ce4a84a",
                  "parentUUID": "31946ca4-ab63-431a-a5ce-24b8dbb1cb1f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d756dea5-c439-430d-ac8f-d6a74ce4a84a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a79a023d-2449-4b84-8119-41a00bfba166",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "60893de9-5380-4aef-9311-15736c3754e0",
                  "parentUUID": "a79a023d-2449-4b84-8119-41a00bfba166",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "60893de9-5380-4aef-9311-15736c3754e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1f0ea516-f36b-4112-9d68-0061738ec5f4",
          "title": "Test TestDescriptor CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "00a639b2-1dd0-4114-bda6-ae367fa16017",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestDescriptor CRUD features removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "41669704-a3ce-4b94-a621-aeb26e141bb0",
                  "parentUUID": "00a639b2-1dd0-4114-bda6-ae367fa16017",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "41669704-a3ce-4b94-a621-aeb26e141bb0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1d91e578-ee4c-4b44-9ddc-87a1c11e3e0c",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestDescriptor CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "5e3ca5ad-9d44-4b5a-aa2d-93d0d4ffe144",
                  "parentUUID": "1d91e578-ee4c-4b44-9ddc-87a1c11e3e0c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e3ca5ad-9d44-4b5a-aa2d-93d0d4ffe144"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "60938703-6847-47f3-b8db-00fbf99a6b04",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestDescriptor CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "1c5ef5e9-68eb-4081-b1e2-b2d7c2a4e443",
                  "parentUUID": "60938703-6847-47f3-b8db-00fbf99a6b04",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c5ef5e9-68eb-4081-b1e2-b2d7c2a4e443"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b0816e6c-ea62-4036-aa71-eb8029380ef8",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "475f0d9d-bca1-45bb-aebf-e84b1c6b5b2d",
                  "parentUUID": "b0816e6c-ea62-4036-aa71-eb8029380ef8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "475f0d9d-bca1-45bb-aebf-e84b1c6b5b2d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "075daa35-6cb5-4641-b7ad-da76e8c62453",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9eee31ef-f3a7-4242-9371-1ccf83d42079",
                  "parentUUID": "075daa35-6cb5-4641-b7ad-da76e8c62453",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9eee31ef-f3a7-4242-9371-1ccf83d42079"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "223f3fde-cb63-4b88-9c04-c5901d06dff8",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b9d1c783-e1ce-4636-899e-b209d195991a",
                  "parentUUID": "223f3fde-cb63-4b88-9c04-c5901d06dff8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9d1c783-e1ce-4636-899e-b209d195991a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9540a487-f900-49e2-b105-b5860270f615",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9ec7057d-b5b0-4fbe-9783-995994bc5961",
                  "parentUUID": "9540a487-f900-49e2-b105-b5860270f615",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9ec7057d-b5b0-4fbe-9783-995994bc5961"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6da284ec-42bf-44f0-8779-ce584414a9c9",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cc7777e7-0f78-4651-a981-34e92dc891f1",
                  "parentUUID": "6da284ec-42bf-44f0-8779-ce584414a9c9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc7777e7-0f78-4651-a981-34e92dc891f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "93c4ad7e-5759-4f67-953f-62637d8360e4",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8d920e7a-3f9d-41c7-9caa-0c67f8d31edd",
                  "parentUUID": "93c4ad7e-5759-4f67-953f-62637d8360e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d920e7a-3f9d-41c7-9caa-0c67f8d31edd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e1d21df5-f1c8-42b9-ade8-d2cf4b851038",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "477f45c3-01db-4a9e-9008-1985431ea12f",
                  "parentUUID": "e1d21df5-f1c8-42b9-ade8-d2cf4b851038",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "477f45c3-01db-4a9e-9008-1985431ea12f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "766dbc94-2e19-41b4-a467-d1f7cc518730",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "add2ab4e-67c1-4a50-b3e5-63b09223941b",
                  "parentUUID": "766dbc94-2e19-41b4-a467-d1f7cc518730",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "add2ab4e-67c1-4a50-b3e5-63b09223941b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b24a8a5c-f3bf-4977-b323-e201f5e1924c",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "42e04303-5282-482a-878b-84f617ea3df3",
                  "parentUUID": "b24a8a5c-f3bf-4977-b323-e201f5e1924c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "42e04303-5282-482a-878b-84f617ea3df3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fd1c47e5-e6c2-40a3-a5b6-4dfdd1fa8152",
              "title": "test post test descriptor with not exixsting idsku",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a bad test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test post test descriptor with not exixsting idsku Creating a bad test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/testDescriptor')\n.send()\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5f7f13b9-84f9-4fec-b23f-d2c3e773e1c6",
                  "parentUUID": "fd1c47e5-e6c2-40a3-a5b6-4dfdd1fa8152",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f7f13b9-84f9-4fec-b23f-d2c3e773e1c6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "711d2444-6f4f-436c-8585-599fd9aaab28",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "726c24e0-789a-49b0-a491-d07957abf0ea",
                  "parentUUID": "711d2444-6f4f-436c-8585-599fd9aaab28",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "726c24e0-789a-49b0-a491-d07957abf0ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "70e84e59-56d9-4fc7-a4ca-cef3a9fc40bf",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c9b0f66e-6d57-435e-a39e-751f2a443070",
                  "parentUUID": "70e84e59-56d9-4fc7-a4ca-cef3a9fc40bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9b0f66e-6d57-435e-a39e-751f2a443070"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b380c87c-4a29-470c-aa8d-d527fc538e5e",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "02c68174-1926-4181-a48f-9dd32f8a7d4d",
                  "parentUUID": "b380c87c-4a29-470c-aa8d-d527fc538e5e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "02c68174-1926-4181-a48f-9dd32f8a7d4d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5f69b99d-9730-4946-b204-9d9d645e8c01",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "c2d6cc87-6424-449c-bc63-59da038e0bfc",
                  "parentUUID": "5f69b99d-9730-4946-b204-9d9d645e8c01",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c2d6cc87-6424-449c-bc63-59da038e0bfc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "469960bc-36b4-4859-8f20-caadcc45464b",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "01e7e749-6ad9-49da-a97d-dd00e7f35f67",
                  "parentUUID": "469960bc-36b4-4859-8f20-caadcc45464b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "01e7e749-6ad9-49da-a97d-dd00e7f35f67"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "24c036d0-8012-4f69-828f-c80045066a88",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cb22332d-ffbc-4302-b072-56d099df9334",
                  "parentUUID": "24c036d0-8012-4f69-828f-c80045066a88",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb22332d-ffbc-4302-b072-56d099df9334"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bf2bafd1-477c-4919-9317-ec2a3b121d20",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "6a7fbf8a-73e6-40d8-9910-818554de9203",
                  "parentUUID": "bf2bafd1-477c-4919-9317-ec2a3b121d20",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6a7fbf8a-73e6-40d8-9910-818554de9203"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c33543e2-05ea-47f4-815e-3464396036d1",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "48e44425-6f25-44de-b954-20f5298aec37",
                  "parentUUID": "c33543e2-05ea-47f4-815e-3464396036d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "48e44425-6f25-44de-b954-20f5298aec37"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "389c92f7-563d-4837-9511-64160fc0d005",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0a797aee-a796-421a-93ac-23e8d3095fe0",
                  "parentUUID": "389c92f7-563d-4837-9511-64160fc0d005",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a797aee-a796-421a-93ac-23e8d3095fe0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "12d32be3-b1a2-4652-b3f2-b84d31475c4f",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    res.body.should.be.a('array');\n    agent.put('/api/testDescriptor/'+10000)\n    .send()\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));               \n});",
                  "err": {},
                  "uuid": "46e706ab-e0d4-44e3-8de5-a66fac9bf63a",
                  "parentUUID": "12d32be3-b1a2-4652-b3f2-b84d31475c4f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46e706ab-e0d4-44e3-8de5-a66fac9bf63a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5015f19f-acfc-4242-a72a-3ce969da2667",
              "title": "delete /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bbd81136-7605-4cb9-8747-2b8eda70a26f",
                  "parentUUID": "5015f19f-acfc-4242-a72a-3ce969da2667",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bbd81136-7605-4cb9-8747-2b8eda70a26f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e29e63b3-3e31-490b-ae80-565bdf240f63",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "acb56052-b4c1-4b18-be5c-125434dffa6c",
                  "parentUUID": "e29e63b3-3e31-490b-ae80-565bdf240f63",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "acb56052-b4c1-4b18-be5c-125434dffa6c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3affdbf4-6817-4745-aa99-e3fabaf26a7e",
              "title": "delete /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2f6048e1-1022-4c9a-bc9a-4c9931bbd4c6",
                  "parentUUID": "3affdbf4-6817-4745-aa99-e3fabaf26a7e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2f6048e1-1022-4c9a-bc9a-4c9931bbd4c6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d75dc004-be17-447a-b083-aee5fd6c8a13",
          "title": "Test TestResult CRUD",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5a7bd00e-fef9-42fe-b555-dc880285e45a",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestResult CRUD removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9d8d78e9-0ac9-41fb-a439-04156b713a36",
                  "parentUUID": "5a7bd00e-fef9-42fe-b555-dc880285e45a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d8d78e9-0ac9-41fb-a439-04156b713a36"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7abb167c-4ca2-458a-8a09-a589a746b532",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestResult CRUD removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "e1c68ccd-7b79-4ef4-9897-086aaf8250a9",
                  "parentUUID": "7abb167c-4ca2-458a-8a09-a589a746b532",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1c68ccd-7b79-4ef4-9897-086aaf8250a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5fb3f770-ec84-462b-96b5-25a57da3a9d5",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestResult CRUD removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "cf39cef9-c7f4-4f3b-b2f1-812e0c0c171d",
                  "parentUUID": "5fb3f770-ec84-462b-96b5-25a57da3a9d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf39cef9-c7f4-4f3b-b2f1-812e0c0c171d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4331ce63-9830-4bc2-9f79-08a5bf5f9abc",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1b0dcb30-d210-4dd9-9158-d56f33c66b40",
                  "parentUUID": "4331ce63-9830-4bc2-9f79-08a5bf5f9abc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b0dcb30-d210-4dd9-9158-d56f33c66b40"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "79c6439e-3323-44b2-95ec-c11af1dcef9b",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b1abd03b-72c4-4239-a55f-e14544f41485",
                  "parentUUID": "79c6439e-3323-44b2-95ec-c11af1dcef9b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b1abd03b-72c4-4239-a55f-e14544f41485"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "de7924bf-b6fc-4879-a483-b69345770bd9",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test TestResult CRUD get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a4c8291c-b0c2-450b-b99d-697ae6d95e57",
                  "parentUUID": "de7924bf-b6fc-4879-a483-b69345770bd9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4c8291c-b0c2-450b-b99d-697ae6d95e57"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "24b82827-cc78-4ed1-97c7-22dc7543ded9",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1773f34b-6966-4966-a37f-6a8b2d5f6334",
                  "parentUUID": "24b82827-cc78-4ed1-97c7-22dc7543ded9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1773f34b-6966-4966-a37f-6a8b2d5f6334"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e1675d20-817c-417b-be12-3e25bc4337cb",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9635ed24-ec84-4d7b-a248-16f0ec626079",
                  "parentUUID": "e1675d20-817c-417b-be12-3e25bc4337cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9635ed24-ec84-4d7b-a248-16f0ec626079"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6a3f4d5e-9d21-4ac8-89aa-aeae6b668a3e",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestResult CRUD test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7eb1a28f-f6e8-4ef2-85db-9ea3d7aab9d3",
                  "parentUUID": "6a3f4d5e-9d21-4ac8-89aa-aeae6b668a3e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7eb1a28f-f6e8-4ef2-85db-9ea3d7aab9d3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f5217ae8-a24d-4584-8535-88b91413410e",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestResult CRUD get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8798ef23-2f21-42b2-8a29-c504f0c4e969",
                  "parentUUID": "f5217ae8-a24d-4584-8535-88b91413410e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8798ef23-2f21-42b2-8a29-c504f0c4e969"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "57557cfb-937c-4c47-ab38-1af9c7f18a99",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1e424332-82f0-4512-b9d5-28dcfc5d6148",
                  "parentUUID": "57557cfb-937c-4c47-ab38-1af9c7f18a99",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e424332-82f0-4512-b9d5-28dcfc5d6148"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c1898618-fa0f-45e0-9817-0ff8e200831a",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "76f73c73-adea-4154-a4da-67ca7d6ac277",
                  "parentUUID": "c1898618-fa0f-45e0-9817-0ff8e200831a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "76f73c73-adea-4154-a4da-67ca7d6ac277"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "206a3f8b-038a-435b-8fab-a50a0b56a3f3",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.1 -> Add a quality test",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult FR 3.2.1 -> Add a quality test",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idtds = ids.getIdTestDescriptor();\nlet testResult = newTestResult(mytr.rfid, idtds[mytr.idTestDescriptor], mytr.Date, mytr.Result);\n//console.log(testResult);\nagent.post('/api/skuitems/testResult')\n.send(testResult)\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "81c01a7d-6973-4e11-a7e6-b6f1090ac245",
                  "parentUUID": "206a3f8b-038a-435b-8fab-a50a0b56a3f3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "81c01a7d-6973-4e11-a7e6-b6f1090ac245"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bb38db2f-e629-4b95-9088-fbf6b916a1dc",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creates a new test Result for a certain sku item defined by RFID",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "13acee87-3b71-42ef-bc54-1308d6e65a0d",
                  "parentUUID": "bb38db2f-e629-4b95-9088-fbf6b916a1dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "13acee87-3b71-42ef-bc54-1308d6e65a0d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7c440994-63f8-4787-926d-f19299390ef1",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creates a new test Result for a certain sku item defined by RFID",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "31c1e37e-c6d8-4c97-88a8-50c447e892f6",
                  "parentUUID": "7c440994-63f8-4787-926d-f19299390ef1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31c1e37e-c6d8-4c97-88a8-50c447e892f6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e9f6f28c-2c56-4ff4-8e82-9fc8428dbd25",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c3b622ba-3c56-4a6f-bf81-ec82bbd1b8ae",
                  "parentUUID": "e9f6f28c-2c56-4ff4-8e82-9fc8428dbd25",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c3b622ba-3c56-4a6f-bf81-ec82bbd1b8ae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "571bc729-da2a-4360-9d16-69373bb49da1",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5369c93d-31d8-4326-aff9-728814cf921a",
                  "parentUUID": "571bc729-da2a-4360-9d16-69373bb49da1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5369c93d-31d8-4326-aff9-728814cf921a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "915f2dce-8617-4382-a086-762f12ada0dc",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "50afbca2-f720-42b2-a146-ff1e4ce4ee5f",
                  "parentUUID": "915f2dce-8617-4382-a086-762f12ada0dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50afbca2-f720-42b2-a146-ff1e4ce4ee5f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "03cb60bc-55de-434d-abc0-8406b4513f89",
              "title": " get /api/skuitems/:rfid/testResults/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get a specific test result with the rfid and id",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults/:id Get a specific test result with the rfid and id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    //console.log(res.body[0]);\n    agent.get('/api/skuitems/'+rfid+'/testResults/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "bfc3b55b-e069-4e93-9adb-6cd37ca7ceb7",
                  "parentUUID": "03cb60bc-55de-434d-abc0-8406b4513f89",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bfc3b55b-e069-4e93-9adb-6cd37ca7ceb7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c2a499e6-8dab-43ab-9488-516e03c3d0ea",
              "title": " get /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get a specific test result with the rfid and id",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResult/:id Get a specific test result with the rfid and id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let alltdids = ids.getIdTestDescriptor();\n    console.log(alltdids);\n    agent.get('/api/skuitems/'+rfid+'/testResult/'+alltdids[0])\n    .then(function(res2){\n        console.log(res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "0a4fe452-c5c1-4dc5-8a3b-3abf3092a6cb",
                  "parentUUID": "c2a499e6-8dab-43ab-9488-516e03c3d0ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a4fe452-c5c1-4dc5-8a3b-3abf3092a6cb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "917a2011-cd63-4b3c-8fc3-c33b4cd2ae97",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.2 -> Modify a quality test",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id FR 3.2.2 -> Modify a quality test",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    console.log(\"this is it\", res.body);\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        console.log(\"I'm heeeeereeee\", res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "5bcdee58-e580-4055-8421-bc52c6f2469a",
                  "parentUUID": "917a2011-cd63-4b3c-8fc3-c33b4cd2ae97",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bcdee58-e580-4055-8421-bc52c6f2469a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2b2b7fc2-7596-4cbf-9d58-fc0b9cdc2f62",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a test results given its rfid and id and new fields",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "af6e2787-a69d-405a-a637-48b91096e90e",
                  "parentUUID": "2b2b7fc2-7596-4cbf-9d58-fc0b9cdc2f62",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "af6e2787-a69d-405a-a637-48b91096e90e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "81dd8b5a-9acc-4c23-b209-56ebf0b66257",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a test results given its rfid and id and new fields",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "d1f831dc-e453-4f83-aaaf-ec2f04d2d73d",
                  "parentUUID": "81dd8b5a-9acc-4c23-b209-56ebf0b66257",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d1f831dc-e453-4f83-aaaf-ec2f04d2d73d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cb6d4c60-5664-4cf2-83a6-051efc178bce",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4d11cfcd-8be5-4229-96c7-af876b2d67af",
                  "parentUUID": "cb6d4c60-5664-4cf2-83a6-051efc178bce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4d11cfcd-8be5-4229-96c7-af876b2d67af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0e8ac8ae-421a-4a57-9e52-c146c57ecdca",
              "title": " delete /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.3 -> Delete a quality test",
                  "fullTitle": "Test TestResult CRUD  delete /api/skuitems/:rfid/testResult/:id FR 3.2.3 -> Delete a quality test",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    // console.log(res.body);\n    agent.delete('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "4af478e9-656e-4352-b414-50cb7b50c58e",
                  "parentUUID": "0e8ac8ae-421a-4a57-9e52-c146c57ecdca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4af478e9-656e-4352-b414-50cb7b50c58e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "aa145e8a-bc67-4811-b717-3e80c93a03cb",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "22519673-4834-4115-9223-b9d5eab6d7ba",
                  "parentUUID": "aa145e8a-bc67-4811-b717-3e80c93a03cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "22519673-4834-4115-9223-b9d5eab6d7ba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a5028afc-b26d-4a6d-a2db-326b827f3b77",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestResult CRUD removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "ec435d5c-f49b-452f-850f-e2316ae46bc3",
                  "parentUUID": "a5028afc-b26d-4a6d-a2db-326b827f3b77",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ec435d5c-f49b-452f-850f-e2316ae46bc3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9d363351-4a9f-44f0-8ba2-26fc16312641",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestResult CRUD removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "27e07976-d240-4978-9125-d6715449fd10",
                  "parentUUID": "9d363351-4a9f-44f0-8ba2-26fc16312641",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27e07976-d240-4978-9125-d6715449fd10"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4c6408a7-6884-4657-a5d1-dd6a15a82e76",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestResult CRUD removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "53931d60-ce8e-40c6-ac0a-899e6e0250cb",
                  "parentUUID": "4c6408a7-6884-4657-a5d1-dd6a15a82e76",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "53931d60-ce8e-40c6-ac0a-899e6e0250cb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0671786e-7cd2-4d05-85b2-eccdac8e4948",
          "title": "Test user CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4ef57955-4926-4d83-a1f6-869334d34fac",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "49020faf-361e-4cb7-bca3-b67d72f843dd",
                  "parentUUID": "4ef57955-4926-4d83-a1f6-869334d34fac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49020faf-361e-4cb7-bca3-b67d72f843dd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0f826dff-9a2b-4134-93f5-5bd9edbf5ef1",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4aee3663-a8cc-4374-bf93-b97322582415",
                  "parentUUID": "0f826dff-9a2b-4134-93f5-5bd9edbf5ef1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4aee3663-a8cc-4374-bf93-b97322582415"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9292d27f-525f-431d-89b0-585cf9c072b8",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "37c6d85e-39d8-478d-a719-9c400f71d4c3",
                  "parentUUID": "9292d27f-525f-431d-89b0-585cf9c072b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "37c6d85e-39d8-478d-a719-9c400f71d4c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "26d0069c-6047-4769-b09d-68f92110c9dc",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b3977ca5-5e00-46cf-b09c-7855483075b9",
                  "parentUUID": "26d0069c-6047-4769-b09d-68f92110c9dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b3977ca5-5e00-46cf-b09c-7855483075b9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8433e082-f4f2-4268-8b97-7b0a405ba347",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test user CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9c0a1d59-5bf2-406c-84ee-230bbd7bccb3",
                  "parentUUID": "8433e082-f4f2-4268-8b97-7b0a405ba347",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c0a1d59-5bf2-406c-84ee-230bbd7bccb3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9f01ae16-e485-40b6-bbbc-864ee7464dd0",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f08c728c-af7c-4e50-bf0d-41dc971678dd",
                  "parentUUID": "9f01ae16-e485-40b6-bbbc-864ee7464dd0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f08c728c-af7c-4e50-bf0d-41dc971678dd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "88089959-428d-4ac7-9507-c2db8e7a9d31",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "75eeb0d5-0a80-4173-9920-bd0d0cb982cc",
                  "parentUUID": "88089959-428d-4ac7-9507-c2db8e7a9d31",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75eeb0d5-0a80-4173-9920-bd0d0cb982cc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7ec32b0a-5b22-4f73-b4b2-f1a98d9dd2b7",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1c6e9ffd-1f8e-470e-b969-2d24f96ed662",
                  "parentUUID": "7ec32b0a-5b22-4f73-b4b2-f1a98d9dd2b7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c6e9ffd-1f8e-470e-b969-2d24f96ed662"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c8f6bd42-1d50-437d-91ff-ef74851d828f",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d8166dfe-997e-45f6-96c8-6b225096e038",
                  "parentUUID": "c8f6bd42-1d50-437d-91ff-ef74851d828f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d8166dfe-997e-45f6-96c8-6b225096e038"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7f6d6791-894a-40ad-b506-a9b0ad477412",
          "title": "Test RestockOrder CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "355f3e37-41b3-417a-b20a-d9dd4e377c5b",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "36d7a158-0753-489a-af58-8c4394093893",
                  "parentUUID": "355f3e37-41b3-417a-b20a-d9dd4e377c5b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "36d7a158-0753-489a-af58-8c4394093893"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "596ce9ce-adb5-474a-ad59-ba93beb35ea7",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "0f859fe3-af05-4792-bc46-2633cbcf3ef3",
                  "parentUUID": "596ce9ce-adb5-474a-ad59-ba93beb35ea7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0f859fe3-af05-4792-bc46-2633cbcf3ef3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "46762890-9156-4bfe-9930-795b726dc009",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test RestockOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "ac7596ab-5483-40e9-84e6-0a9e9b59c952",
                  "parentUUID": "46762890-9156-4bfe-9930-795b726dc009",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac7596ab-5483-40e9-84e6-0a9e9b59c952"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d826221c-1fc0-47c9-923a-8bd62720aa0b",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test RestockOrder CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "80112768-35ef-490f-bbd3-4bd6c2dfdd5a",
                  "parentUUID": "d826221c-1fc0-47c9-923a-8bd62720aa0b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "80112768-35ef-490f-bbd3-4bd6c2dfdd5a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "57d833e9-50dd-4521-95d9-49b447ea02b1",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2d5f34b6-b7b4-482e-b36d-4c99a3927a61",
                  "parentUUID": "57d833e9-50dd-4521-95d9-49b447ea02b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2d5f34b6-b7b4-482e-b36d-4c99a3927a61"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f94bca63-d15a-4b5a-baab-2f974cfd146c",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b0101c37-c932-42d4-9f3c-17a5dc64b1aa",
                  "parentUUID": "f94bca63-d15a-4b5a-baab-2f974cfd146c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b0101c37-c932-42d4-9f3c-17a5dc64b1aa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1435dd8d-7ab1-4aba-8937-69d1e462c1a3",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test RestockOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "68ca20d6-763d-418a-b829-f1fc774ee512",
                  "parentUUID": "1435dd8d-7ab1-4aba-8937-69d1e462c1a3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "68ca20d6-763d-418a-b829-f1fc774ee512"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7cf6188f-eb2f-458d-a390-bf09e5b59786",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 63,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d026f003-06f5-418b-ad84-f29ee35447ca",
                  "parentUUID": "7cf6188f-eb2f-458d-a390-bf09e5b59786",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d026f003-06f5-418b-ad84-f29ee35447ca"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 63,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dc34c8b1-60a7-43f9-9275-0b5e70fb2d22",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 61,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e3f31fc5-b359-414b-9af6-4856f6ed01a1",
                  "parentUUID": "dc34c8b1-60a7-43f9-9275-0b5e70fb2d22",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e3f31fc5-b359-414b-9af6-4856f6ed01a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 61,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "24bb04c2-cf75-458d-a589-8d73d0343d25",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0dec7c0c-a194-4a62-93f1-437f96f02943",
                  "parentUUID": "24bb04c2-cf75-458d-a589-8d73d0343d25",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0dec7c0c-a194-4a62-93f1-437f96f02943"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8050336d-2d19-4781-80eb-562c7b210dbb",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "116cd616-7098-48f6-9f3a-4917d30588ff",
                  "parentUUID": "8050336d-2d19-4781-80eb-562c7b210dbb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "116cd616-7098-48f6-9f3a-4917d30588ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "67f67477-4f50-4fa5-83ba-2de7e5c260cf",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e21794ad-b9e5-4641-ac2d-d21023e1aab9",
                  "parentUUID": "67f67477-4f50-4fa5-83ba-2de7e5c260cf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e21794ad-b9e5-4641-ac2d-d21023e1aab9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "34ac2271-51c3-4e6a-ac40-6ccb4d5743b5",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "ebde12b0-829f-4fdf-88a3-adc47288fa74",
                  "parentUUID": "34ac2271-51c3-4e6a-ac40-6ccb4d5743b5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ebde12b0-829f-4fdf-88a3-adc47288fa74"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d9173ff8-5da4-4c41-887e-849bedfda0a0",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "de452c76-4f14-442d-9bca-0dc38906209f",
                  "parentUUID": "d9173ff8-5da4-4c41-887e-849bedfda0a0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de452c76-4f14-442d-9bca-0dc38906209f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "90f49f5c-8d6f-4b21-8c62-1e5423f1aa05",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8d34754c-de70-444c-b87d-a5915cd9a518",
                  "parentUUID": "90f49f5c-8d6f-4b21-8c62-1e5423f1aa05",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d34754c-de70-444c-b87d-a5915cd9a518"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "98ed9e58-d48a-46b0-86bd-4c23a0adc061",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bd87d92a-21eb-4d92-98f3-0c852e238989",
                  "parentUUID": "98ed9e58-d48a-46b0-86bd-4c23a0adc061",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd87d92a-21eb-4d92-98f3-0c852e238989"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1376fa7c-8929-4c2d-965f-afef1ba2fb58",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet firstSupplierId;\nagent.get('/api/suppliers')\n.then(function(res){\n    firstSupplierId = res.body[0].id;\n    agent.post('/api/restockOrder')\n    .send(myrestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "9ef7ac0d-1fdc-4bc0-9381-7d40b0f6a2f6",
                  "parentUUID": "1376fa7c-8929-4c2d-965f-afef1ba2fb58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9ef7ac0d-1fdc-4bc0-9381-7d40b0f6a2f6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "87aca9e2-b21a-46eb-8ec9-490f6b6604e1",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "55056166-a6fe-4c28-8305-c473db18b157",
                  "parentUUID": "87aca9e2-b21a-46eb-8ec9-490f6b6604e1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "55056166-a6fe-4c28-8305-c473db18b157"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c3c3389d-5d70-4140-b2af-2f1f132bfea8",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "28bbbc34-f3ec-458e-bbd5-455b13460949",
                  "parentUUID": "c3c3389d-5d70-4140-b2af-2f1f132bfea8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28bbbc34-f3ec-458e-bbd5-455b13460949"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "eca77565-540a-4fd7-9afd-579dd8229acd",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "70721f53-ffe0-4dc4-8977-ebd8153cc9bb",
                  "parentUUID": "eca77565-540a-4fd7-9afd-579dd8229acd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70721f53-ffe0-4dc4-8977-ebd8153cc9bb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5bebb642-22e2-4a32-b336-e55d30d3ffdd",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "fab642fc-d91f-4e87-8d9a-b502344291c1",
                  "parentUUID": "5bebb642-22e2-4a32-b336-e55d30d3ffdd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fab642fc-d91f-4e87-8d9a-b502344291c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ca32e88a-92ef-4cba-b620-fb48a1a842ae",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "487ac478-2ee9-4397-a1bc-0510595b5fd2",
                  "parentUUID": "ca32e88a-92ef-4cba-b620-fb48a1a842ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "487ac478-2ee9-4397-a1bc-0510595b5fd2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3f9f914b-1f1e-47ac-9322-e38aa7757a0a",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1390ba01-3838-4c45-8a5e-4f6b4701230c",
                  "parentUUID": "3f9f914b-1f1e-47ac-9322-e38aa7757a0a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1390ba01-3838-4c45-8a5e-4f6b4701230c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "769f1088-cf7f-4655-8be0-1e594ea0bdfa",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "d267052f-711c-4a76-9ff5-385448c3d130",
                  "parentUUID": "769f1088-cf7f-4655-8be0-1e594ea0bdfa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d267052f-711c-4a76-9ff5-385448c3d130"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "31087092-756d-41f7-8ac3-3618459de598",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "38ec81f7-95d3-40ee-adc6-2f968980956c",
                  "parentUUID": "31087092-756d-41f7-8ac3-3618459de598",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "38ec81f7-95d3-40ee-adc6-2f968980956c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2a22ec1f-451c-4392-b079-16b746bc4d09",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":allskuitems})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "3bbe154d-e6b5-4ff2-a073-b8a859f5da05",
                  "parentUUID": "2a22ec1f-451c-4392-b079-16b746bc4d09",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3bbe154d-e6b5-4ff2-a073-b8a859f5da05"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f428a951-89a5-4752-a1f2-0aac0e034188",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send(null)\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "3047d2ce-8e24-49fb-98c0-bf79594837ea",
                  "parentUUID": "f428a951-89a5-4752-a1f2-0aac0e034188",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3047d2ce-8e24-49fb-98c0-bf79594837ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b162f87e-0dca-465f-a462-2263de559164",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "0ce4cea4-a6a9-4a3a-8d55-905635875b2b",
                  "parentUUID": "b162f87e-0dca-465f-a462-2263de559164",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ce4cea4-a6a9-4a3a-8d55-905635875b2b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7283272c-3939-4fa8-a16b-fb5fb9751bc2",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "597118b8-6316-463d-9e96-9d755e7614e7",
                  "parentUUID": "7283272c-3939-4fa8-a16b-fb5fb9751bc2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "597118b8-6316-463d-9e96-9d755e7614e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "336ee9fe-3d46-49ab-9cf2-beeaa55aafff",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "71d8e70c-7cc0-4e3e-bacc-2eccf16c39e1",
                  "parentUUID": "336ee9fe-3d46-49ab-9cf2-beeaa55aafff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71d8e70c-7cc0-4e3e-bacc-2eccf16c39e1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4c98fecd-f4ff-41a5-a834-4f0d1223b808",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 10000;\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2021/12/29\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "cfc37d73-d9e3-4798-9911-aa7fecfd9be5",
                  "parentUUID": "4c98fecd-f4ff-41a5-a834-4f0d1223b808",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cfc37d73-d9e3-4798-9911-aa7fecfd9be5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5e466a38-fe57-445c-8208-fda254e7b22f",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "773cac84-0db7-49d6-b96a-4e834f96a88e",
                  "parentUUID": "5e466a38-fe57-445c-8208-fda254e7b22f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "773cac84-0db7-49d6-b96a-4e834f96a88e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3239d5ff-894f-420d-85e6-c4f93f6b6f97",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "df690896-9e1f-4b48-b5aa-8c698e1f915a",
                  "parentUUID": "3239d5ff-894f-420d-85e6-c4f93f6b6f97",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "df690896-9e1f-4b48-b5aa-8c698e1f915a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9ad646f5-8901-4244-8c69-07f826aa46f9",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test RestockOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "cb99c787-e5c4-4c28-b6c5-c94060fab50b",
                  "parentUUID": "9ad646f5-8901-4244-8c69-07f826aa46f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb99c787-e5c4-4c28-b6c5-c94060fab50b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ee587e2f-877a-456b-8547-5a06e34847da",
          "title": "Test ReturnOrder CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c3718ab0-6cb3-46fa-bf8e-abe0be09f595",
              "title": "Removing all return orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test ReturnOrder CRUD features Removing all return orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/returnOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1fa10762-31b8-4106-8096-1b0e2c27a920",
                  "parentUUID": "c3718ab0-6cb3-46fa-bf8e-abe0be09f595",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1fa10762-31b8-4106-8096-1b0e2c27a920"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "97eedcb5-be50-4e0a-8e6e-757d3e5970ad",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test ReturnOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "de54fae9-c2cd-4b15-a9ab-630e8d4f8dbf",
                  "parentUUID": "97eedcb5-be50-4e0a-8e6e-757d3e5970ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de54fae9-c2cd-4b15-a9ab-630e8d4f8dbf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a7941594-9ae2-4050-b6fb-16a2b8c15421",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test ReturnOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "169dfcf3-c030-4f9f-866f-7399368bc068",
                  "parentUUID": "a7941594-9ae2-4050-b6fb-16a2b8c15421",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "169dfcf3-c030-4f9f-866f-7399368bc068"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "022ad7f5-74bb-4631-9fee-d4fde45dfda0",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test ReturnOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "119e9478-be10-470b-b564-86ccf0fbf644",
                  "parentUUID": "022ad7f5-74bb-4631-9fee-d4fde45dfda0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "119e9478-be10-470b-b564-86ccf0fbf644"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5db93c08-b047-47c8-a9de-9c7b2aec193b",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test ReturnOrder CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "79c98e1f-ecae-4fc2-be16-7ae0a1f6404f",
                  "parentUUID": "5db93c08-b047-47c8-a9de-9c7b2aec193b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79c98e1f-ecae-4fc2-be16-7ae0a1f6404f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "93497cee-36bc-4884-97ab-0e366b156403",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fb5eba00-dfa1-46de-819a-384f6db11b95",
                  "parentUUID": "93497cee-36bc-4884-97ab-0e366b156403",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fb5eba00-dfa1-46de-819a-384f6db11b95"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "59cb9b0b-1b79-4885-acc3-f3121fe1073e",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2a4e61ec-fca7-4be6-9487-45a46b310080",
                  "parentUUID": "59cb9b0b-1b79-4885-acc3-f3121fe1073e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2a4e61ec-fca7-4be6-9487-45a46b310080"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cda33d47-dc73-4b87-a8d0-e1b73ef4cf4c",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test ReturnOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "090be14d-f42e-4181-b3cd-4995bd86ebcb",
                  "parentUUID": "cda33d47-dc73-4b87-a8d0-e1b73ef4cf4c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "090be14d-f42e-4181-b3cd-4995bd86ebcb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "029eefb9-dff9-422d-a386-3b74c7b85535",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "db0677b6-837c-4cb8-9996-aa5b766674d8",
                  "parentUUID": "029eefb9-dff9-422d-a386-3b74c7b85535",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db0677b6-837c-4cb8-9996-aa5b766674d8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5b0b0bde-3e45-4982-8c97-7e77526f4b5e",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 60,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "96382bbf-785f-418e-b9a9-3968afc70bd7",
                  "parentUUID": "5b0b0bde-3e45-4982-8c97-7e77526f4b5e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "96382bbf-785f-418e-b9a9-3968afc70bd7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 60,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "554c98c7-b9cc-4712-a9cd-7eab5bd7e962",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a4ca1ca3-494b-4b18-a5d9-a935ed162bb7",
                  "parentUUID": "554c98c7-b9cc-4712-a9cd-7eab5bd7e962",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4ca1ca3-494b-4b18-a5d9-a935ed162bb7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fca5fc19-2d37-4e00-a1cc-af8ecc979831",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a83046ea-589f-44db-877b-f007d65877e5",
                  "parentUUID": "fca5fc19-2d37-4e00-a1cc-af8ecc979831",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a83046ea-589f-44db-877b-f007d65877e5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4008437d-5221-4777-a9e1-648df3868f24",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "59426026-c012-4334-8b9a-57ea896fe707",
                  "parentUUID": "4008437d-5221-4777-a9e1-648df3868f24",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "59426026-c012-4334-8b9a-57ea896fe707"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "43d774ac-a038-4ad8-bcc2-3b8dd1573916",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "5ce575c4-53a4-42c2-a508-1d64973c336f",
                  "parentUUID": "43d774ac-a038-4ad8-bcc2-3b8dd1573916",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5ce575c4-53a4-42c2-a508-1d64973c336f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2bf2e27c-4e8e-4159-be82-1ac2411d22a8",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "ff0fe800-f613-44c5-ab40-439593840c20",
                  "parentUUID": "2bf2e27c-4e8e-4159-be82-1ac2411d22a8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff0fe800-f613-44c5-ab40-439593840c20"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f14d274d-605d-4bec-89b9-d3404f681ee8",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "612214ce-cc33-4efa-b70e-c8f4350db54f",
                  "parentUUID": "f14d274d-605d-4bec-89b9-d3404f681ee8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "612214ce-cc33-4efa-b70e-c8f4350db54f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fbeedb60-3ae3-4788-8168-909a84cf78ad",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "779d798f-830d-472e-b0e7-8ec5ced5395b",
                  "parentUUID": "fbeedb60-3ae3-4788-8168-909a84cf78ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "779d798f-830d-472e-b0e7-8ec5ced5395b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fa69d610-1c18-47e9-a172-be09e69f78ec",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "5cdc1275-b3ac-462d-ae3e-9f636dbd822e",
                  "parentUUID": "fa69d610-1c18-47e9-a172-be09e69f78ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5cdc1275-b3ac-462d-ae3e-9f636dbd822e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "30a50b9f-58eb-4577-a20b-2ed7b611956b",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "27ce5ce4-1c1c-47d7-aa1f-84b452c82876",
                  "parentUUID": "30a50b9f-58eb-4577-a20b-2ed7b611956b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27ce5ce4-1c1c-47d7-aa1f-84b452c82876"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "71dd49b8-baa3-45da-9a0a-25a7edb7abea",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "dc105e00-d955-4eca-9f9d-f8e0e14db3a9",
                  "parentUUID": "71dd49b8-baa3-45da-9a0a-25a7edb7abea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc105e00-d955-4eca-9f9d-f8e0e14db3a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "63bcddc6-4577-4840-9712-3cfe455886a9",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "97a8322b-3bcf-4873-900a-141f20cd7bf8",
                  "parentUUID": "63bcddc6-4577-4840-9712-3cfe455886a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97a8322b-3bcf-4873-900a-141f20cd7bf8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e0acbfff-bac2-4efd-8355-50d7f9d1f9d9",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8a00aa9a-bb89-440b-b993-d6b455d2cff6",
                  "parentUUID": "e0acbfff-bac2-4efd-8355-50d7f9d1f9d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8a00aa9a-bb89-440b-b993-d6b455d2cff6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "aecfa80d-2d2f-434a-8080-df79f747b26e",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "874c7c7e-23b5-4fe7-9a92-c38d85829bc2",
                  "parentUUID": "aecfa80d-2d2f-434a-8080-df79f747b26e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "874c7c7e-23b5-4fe7-9a92-c38d85829bc2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6e0ec4c8-a0bb-4ae3-b2fb-517991a14b31",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/returnOrder')\n.send(myretord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a7fdc05a-1ed8-44cc-bd42-2390012f8ad6",
                  "parentUUID": "6e0ec4c8-a0bb-4ae3-b2fb-517991a14b31",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7fdc05a-1ed8-44cc-bd42-2390012f8ad6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4a7890ad-bf88-4254-b842-89fd16bbabed",
              "title": " get /api/returnOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all return orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders  get all return orders",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idrestockorders = ids.getIdRestockOrdersIssued();\n    let idretord = [];\n    res.body.length.should.be.eql(myretord.length);\n    for(let i = 0; i<res.body.length; i++){\n        idretord[i] = res.body[i].id;\n        res.body[i].returnDate.should.equal(myretord[i].returnDate);\n        res.body[i].restockOrderId.should.equal(idrestockorders[myretord[i].restockOrderId]);\n    }\n    ids.setIdReturnOrders(idretord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "abed41bf-7cc8-412f-997d-f5c7b716d682",
                  "parentUUID": "4a7890ad-bf88-4254-b842-89fd16bbabed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "abed41bf-7cc8-412f-997d-f5c7b716d682"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "44b55ab2-4206-4a2e-a1da-55631c132756",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsret = ids.getIdReturnOrders();\n//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+idsret[id])\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.returnDate.should.equal(myretord.returnDate);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2712a5ed-8bc3-4534-9b6f-1b434d612a89",
                  "parentUUID": "44b55ab2-4206-4a2e-a1da-55631c132756",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2712a5ed-8bc3-4534-9b6f-1b434d612a89"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "274cd902-d46a-42bc-9fc8-e6c28447baa5",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "61c91d1b-7388-4419-8b60-4c8b3a9e5563",
                  "parentUUID": "274cd902-d46a-42bc-9fc8-e6c28447baa5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "61c91d1b-7388-4419-8b60-4c8b3a9e5563"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6b61ff25-7c6b-4411-8a9a-e48fac5c5343",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "14dbd55a-e417-44b3-a2d4-a9f814f33b7c",
                  "parentUUID": "6b61ff25-7c6b-4411-8a9a-e48fac5c5343",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "14dbd55a-e417-44b3-a2d4-a9f814f33b7c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d2fb27a7-7c2f-4be8-b16a-dbff02fec2da",
          "title": "Test Internal Order CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "504b5a12-b599-43ed-a279-89f3cdfab212",
              "title": "Removing all Internal Orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Interna Orders",
                  "fullTitle": "Test Internal Order CRUD features Removing all Internal Orders Getting Interna Orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/internalOrders/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "4cfed6bc-176b-46fe-bf99-65d8d19fd3bf",
                  "parentUUID": "504b5a12-b599-43ed-a279-89f3cdfab212",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4cfed6bc-176b-46fe-bf99-65d8d19fd3bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a749c408-9986-4b54-a9cb-f94ed66a8c8b",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Internal Order CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "344c64a9-a63a-4b46-a354-ab31ce20a47a",
                  "parentUUID": "a749c408-9986-4b54-a9cb-f94ed66a8c8b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "344c64a9-a63a-4b46-a354-ab31ce20a47a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ffe7ae5d-6e92-4156-bbcf-d98633e437ae",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Internal Order CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "ec133505-69b2-41eb-87b1-6097cb480a55",
                  "parentUUID": "ffe7ae5d-6e92-4156-bbcf-d98633e437ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ec133505-69b2-41eb-87b1-6097cb480a55"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1b433cdb-eb04-4aa2-8626-423081e94d85",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test Internal Order CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b487e475-a8c5-4cc5-af99-0a7396dd5f46",
                  "parentUUID": "1b433cdb-eb04-4aa2-8626-423081e94d85",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b487e475-a8c5-4cc5-af99-0a7396dd5f46"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "deb33da9-3387-4deb-997d-dfd077239dbb",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "daec3589-760a-4c23-9537-ded6ee5d0856",
                  "parentUUID": "deb33da9-3387-4deb-997d-dfd077239dbb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "daec3589-760a-4c23-9537-ded6ee5d0856"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fa615e17-8d9d-4b76-b61f-bf25110b1140",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cef12d85-c1c8-40eb-9a9b-44dd86e645a0",
                  "parentUUID": "fa615e17-8d9d-4b76-b61f-bf25110b1140",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cef12d85-c1c8-40eb-9a9b-44dd86e645a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e88da260-55e5-48f9-a04f-0a6544ca3659",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test Internal Order CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8e75d672-f8fa-453a-8cc6-03b36ddfda19",
                  "parentUUID": "e88da260-55e5-48f9-a04f-0a6544ca3659",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8e75d672-f8fa-453a-8cc6-03b36ddfda19"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b32061cd-8554-4f37-adcc-5777909f9f42",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Internal Order CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e40003ff-41d2-4a8e-bab2-cefdf3cf75d6",
                  "parentUUID": "b32061cd-8554-4f37-adcc-5777909f9f42",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e40003ff-41d2-4a8e-bab2-cefdf3cf75d6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "21bbbabc-1c00-4a2d-b012-770ed3354067",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                  "err": {},
                  "uuid": "7687174d-7489-44b5-9249-ddec29269388",
                  "parentUUID": "21bbbabc-1c00-4a2d-b012-770ed3354067",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7687174d-7489-44b5-9249-ddec29269388"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "02c8474c-9549-4c69-9304-bb15a2d44e61",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                  "err": {},
                  "uuid": "303344f8-4f7b-4468-98ba-db934c31c5f2",
                  "parentUUID": "02c8474c-9549-4c69-9304-bb15a2d44e61",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "303344f8-4f7b-4468-98ba-db934c31c5f2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "87685196-a407-4769-8f22-8810fc278509",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(currentInternalOrders[ith]);\nagent.post('/api/internalOrders')\n.send(intord)\n.then(function(res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "d7a4caf7-29db-4dfd-b07e-7e8f7469b5fd",
                  "parentUUID": "87685196-a407-4769-8f22-8810fc278509",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d7a4caf7-29db-4dfd-b07e-7e8f7469b5fd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0067f208-dfb5-4855-847f-73178f5766d6",
              "title": " get /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all internal orders",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f4379242-260b-4e66-887d-5ac8cee9d275",
                  "parentUUID": "0067f208-dfb5-4855-847f-73178f5766d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f4379242-260b-4e66-887d-5ac8cee9d275"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cc01df08-da08-4658-8e4f-cae5b5641ef6",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fd8ab094-da1a-46e7-9391-4b69f67047b7",
                  "parentUUID": "cc01df08-da08-4658-8e4f-cae5b5641ef6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fd8ab094-da1a-46e7-9391-4b69f67047b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b696611c-59b4-4a52-8f69-0a60318e47aa",
              "title": " put /api/internalOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify the state of an IO",
                  "fullTitle": "Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "228087ba-3837-4df1-9f43-d94e5f4b7fa9",
                  "parentUUID": "b696611c-59b4-4a52-8f69-0a60318e47aa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "228087ba-3837-4df1-9f43-d94e5f4b7fa9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "06360ea0-96f4-4145-b9e7-d488978c52bd",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5582dbba-d0e3-410b-8a67-bbd90a0f628d",
                  "parentUUID": "06360ea0-96f4-4145-b9e7-d488978c52bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5582dbba-d0e3-410b-8a67-bbd90a0f628d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "769f6d6b-aa7d-4389-a446-f227035cc5d4",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersAccepted')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order accepted', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "42e3e368-8e53-4a94-8e7c-bf1aa9cb051a",
                  "parentUUID": "769f6d6b-aa7d-4389-a446-f227035cc5d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "42e3e368-8e53-4a94-8e7c-bf1aa9cb051a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2d1849b4-1e50-4fbd-ae1b-b39c16830fd1",
              "title": " put /api/internalOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify the state of an IO",
                  "fullTitle": "Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "d74e3fb1-5801-4bfb-ab54-e92cab68cd77",
                  "parentUUID": "2d1849b4-1e50-4fbd-ae1b-b39c16830fd1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d74e3fb1-5801-4bfb-ab54-e92cab68cd77"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3dfe22b3-36fe-4f01-9e47-6ff41421753f",
              "title": " get /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all internal orders",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fbbeb7bc-4341-48b2-9b4c-e90bb834bc78",
                  "parentUUID": "3dfe22b3-36fe-4f01-9e47-6ff41421753f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fbbeb7bc-4341-48b2-9b4c-e90bb834bc78"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "72cbd5a6-5505-495c-9e58-39fd7d1ef021",
          "title": "Test Item CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0fbcbb14-f2c3-44f0-99db-a77d51645157",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Item CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "e74eee60-367d-4ce8-8a55-4f8f694122f1",
                  "parentUUID": "0fbcbb14-f2c3-44f0-99db-a77d51645157",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e74eee60-367d-4ce8-8a55-4f8f694122f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d0e2facc-df6a-4300-9fbb-f0fa6be56ec6",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Item CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "7109c5ad-cb2d-4421-9c1a-0f2f3a6b73c1",
                  "parentUUID": "d0e2facc-df6a-4300-9fbb-f0fa6be56ec6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7109c5ad-cb2d-4421-9c1a-0f2f3a6b73c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6d518ea9-e92c-414c-bf3c-54932375ea50",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test Item CRUD features removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cc7600c0-1afc-462d-a5fb-310a415bb9a0",
                  "parentUUID": "6d518ea9-e92c-414c-bf3c-54932375ea50",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc7600c0-1afc-462d-a5fb-310a415bb9a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5f5061d3-8d7d-4556-a729-b899ae6d7c11",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test Item CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "54077b52-d986-4e45-b1ea-d7c5fac76817",
                  "parentUUID": "5f5061d3-8d7d-4556-a729-b899ae6d7c11",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "54077b52-d986-4e45-b1ea-d7c5fac76817"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f20633b7-e11d-477d-ae5d-2e5248e32b25",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "39de4c17-0784-47b9-a38b-aff6480dd0f9",
                  "parentUUID": "f20633b7-e11d-477d-ae5d-2e5248e32b25",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "39de4c17-0784-47b9-a38b-aff6480dd0f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c7bd2226-5b0b-4b94-911b-d49961997be2",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c840da9c-ddba-42e4-aa94-f2a03331cf67",
                  "parentUUID": "c7bd2226-5b0b-4b94-911b-d49961997be2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c840da9c-ddba-42e4-aa94-f2a03331cf67"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b9d32094-4380-4147-a4cb-1689c2b1644d",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test Item CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "75558b69-6798-4be9-b54f-9bd7cb7aabb6",
                  "parentUUID": "b9d32094-4380-4147-a4cb-1689c2b1644d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75558b69-6798-4be9-b54f-9bd7cb7aabb6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e6f7f234-4f14-4dca-b6ac-f1cb4979a874",
              "title": "Removing all Items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Items",
                  "fullTitle": "Test Item CRUD features Removing all Items Getting Items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "c14722b1-8426-4812-a421-60318cf7a9a0",
                  "parentUUID": "e6f7f234-4f14-4dca-b6ac-f1cb4979a874",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c14722b1-8426-4812-a421-60318cf7a9a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d5229a61-ec0c-4aab-9ef5-8b940a2ef4d9",
              "title": " get /api/items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all items",
                  "fullTitle": "Test Item CRUD features  get /api/items Getting all items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "8f718ed9-2fd7-4e58-a467-752802ac3519",
                  "parentUUID": "d5229a61-ec0c-4aab-9ef5-8b940a2ef4d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f718ed9-2fd7-4e58-a467-752802ac3519"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1180a69e-6e3e-43a9-ac13-b012a5cca721",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 59,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9e861706-0ef5-432f-9a8c-0d1bd704aae3",
                  "parentUUID": "1180a69e-6e3e-43a9-ac13-b012a5cca721",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9e861706-0ef5-432f-9a8c-0d1bd704aae3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "51040d38-d988-4aa9-8d33-182e3671dad1",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 61,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "465647d4-398e-4222-8c54-7117cf67b115",
                  "parentUUID": "51040d38-d988-4aa9-8d33-182e3671dad1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "465647d4-398e-4222-8c54-7117cf67b115"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 61,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8276335e-a773-4d0f-a484-fc7801569fb8",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test Item CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2fbb17f5-0071-4aa0-887a-504779b1156a",
                  "parentUUID": "8276335e-a773-4d0f-a484-fc7801569fb8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2fbb17f5-0071-4aa0-887a-504779b1156a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f8581839-4020-49f6-87c1-28825c09396c",
              "title": "post /api/item/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding item details",
                  "fullTitle": "Test Item CRUD features post /api/item/ Adding item details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "49bb1141-2966-46c7-9a3e-d47263872dfd",
                  "parentUUID": "f8581839-4020-49f6-87c1-28825c09396c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49bb1141-2966-46c7-9a3e-d47263872dfd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cf26f4aa-d338-4a17-97ab-458cf4ea37cb",
              "title": "post /api/item/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding item details",
                  "fullTitle": "Test Item CRUD features post /api/item/ Adding item details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "21ee1f30-3937-4d0e-8c7a-163a169b8016",
                  "parentUUID": "cf26f4aa-d338-4a17-97ab-458cf4ea37cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "21ee1f30-3937-4d0e-8c7a-163a169b8016"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c2884fc8-7074-4195-95c7-3e480e2882d0",
              "title": " get /api/items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all items",
                  "fullTitle": "Test Item CRUD features  get /api/items Getting all items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "fa32bbd9-4fa6-4c13-9962-457224e2e740",
                  "parentUUID": "c2884fc8-7074-4195-95c7-3e480e2882d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fa32bbd9-4fa6-4c13-9962-457224e2e740"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "76cf7d51-007c-4f65-b214-6e2914b71037",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+itemid)\n.then(r => {\n    let idskus = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(r.status, expCode);\n    if (r.status == 200) {\n        r.body.should.be.a('object');\n        r.body.id.should.equal(itemid);\n        r.body.description.should.equal(myexpitem.description);\n        r.body.price.should.equal(myexpitem.price);\n        r.body.SKUId.should.equal(idskus[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "b70376ff-37bc-41cc-a57e-57ac9bc72094",
                  "parentUUID": "76cf7d51-007c-4f65-b214-6e2914b71037",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b70376ff-37bc-41cc-a57e-57ac9bc72094"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "23b7680d-2b24-44f6-80da-065fe6852e58",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "c0411a5d-6b9b-4cd2-8048-ff0b855731b4",
                  "parentUUID": "23b7680d-2b24-44f6-80da-065fe6852e58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c0411a5d-6b9b-4cd2-8048-ff0b855731b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e40f5613-d384-42c4-8696-ec595ad5fae8",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "d19c7669-3559-4747-bf46-e06507e9bce6",
                  "parentUUID": "e40f5613-d384-42c4-8696-ec595ad5fae8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d19c7669-3559-4747-bf46-e06507e9bce6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "44438ca9-e471-41c5-9ee1-d967d651db6a",
              "title": " put /api/item/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify an item given its ID and new fields",
                  "fullTitle": "Test Item CRUD features  put /api/item/:id Modify an item given its ID and new fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/item/'+ith)\n.send(updateItem(newDescription, newPrice))\n.then(res => {\n    let idsku = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(res.status, expCode);\n    agent.get('/api/items/'+ith)\n    .then (r => {\n        console.log(r.body);\n        assert.equal(r.status,200);\n        r.body.should.be.a('object');\n        r.body.id.should.equal(myexpitem.id);\n        r.body.description.should.equal(newDescription);\n        r.body.price.should.equal(newPrice);\n        r.body.SKUId.should.equal(idsku[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    });\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "129d8472-f201-4796-be72-d5e51bb988f9",
                  "parentUUID": "44438ca9-e471-41c5-9ee1-d967d651db6a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "129d8472-f201-4796-be72-d5e51bb988f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "93ee004f-b958-4612-81a9-cf15d66dc69d",
              "title": " delete /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete an item given its id",
                  "fullTitle": "Test Item CRUD features  delete /api/items/:id Delete an item given its id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/items/'+ith)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "77e72570-50a7-467e-93e1-09cbe6c49e5f",
                  "parentUUID": "93ee004f-b958-4612-81a9-cf15d66dc69d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "77e72570-50a7-467e-93e1-09cbe6c49e5f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9a3964e8-e7a9-43a8-b07c-eb2b460c9ff1",
              "title": "Removing all Items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Items",
                  "fullTitle": "Test Item CRUD features Removing all Items Getting Items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "995ec782-a630-4c4f-9696-b625724d2a6b",
                  "parentUUID": "9a3964e8-e7a9-43a8-b07c-eb2b460c9ff1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "995ec782-a630-4c4f-9696-b625724d2a6b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d66229e0-0d7c-4abb-93cd-e8c26038c4bb",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Item CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "f3ffd51f-2128-4ff7-b4a6-7b8e1c2bde3e",
                  "parentUUID": "d66229e0-0d7c-4abb-93cd-e8c26038c4bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f3ffd51f-2128-4ff7-b4a6-7b8e1c2bde3e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e5a3d93d-823f-497f-85f0-1434d45868b7",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Item CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "ab24f27d-0ac6-4e0e-9d3c-2a0964d8cd98",
                  "parentUUID": "e5a3d93d-823f-497f-85f0-1434d45868b7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab24f27d-0ac6-4e0e-9d3c-2a0964d8cd98"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cd7fe382-21c6-4df5-84ba-8023f62da83b",
          "title": "Testing Functional requirements",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "77e2204d-1431-47f2-86d2-b365f12118f7",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Testing Functional requirements  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "63f5b7be-5d92-4940-b701-64ace9605b74",
                  "parentUUID": "77e2204d-1431-47f2-86d2-b365f12118f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "63f5b7be-5d92-4940-b701-64ace9605b74"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "51a247c5-ea3b-47e7-9fff-c332eab1c430",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "ef29f2e9-e0a1-4c9a-8532-06a6d2c7d6f4",
                  "parentUUID": "51a247c5-ea3b-47e7-9fff-c332eab1c430",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ef29f2e9-e0a1-4c9a-8532-06a6d2c7d6f4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f90a634d-4509-405e-a2c5-f472928842aa",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "Testing Functional requirements Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "d65b8f8b-b0fb-4e4a-ac9f-3398f2c85e3d",
                  "parentUUID": "f90a634d-4509-405e-a2c5-f472928842aa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d65b8f8b-b0fb-4e4a-ac9f-3398f2c85e3d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "745dee07-0465-4f1f-8056-22b2aeaadb52",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Testing Functional requirements removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fb5d2169-43c4-41e4-abc8-2ed3d876ea4c",
                  "parentUUID": "745dee07-0465-4f1f-8056-22b2aeaadb52",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fb5d2169-43c4-41e4-abc8-2ed3d876ea4c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8f28b0c3-2915-47fc-b92c-bf67e730197c",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "1a240f0b-970c-49ae-ba88-04152ccd6498",
                  "parentUUID": "8f28b0c3-2915-47fc-b92c-bf67e730197c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a240f0b-970c-49ae-ba88-04152ccd6498"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "65aac8c1-abec-4990-b499-7123e0eef2eb",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Testing Functional requirements Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "bb27b7ee-7ca3-4bde-b763-6c084f113a2c",
                  "parentUUID": "65aac8c1-abec-4990-b499-7123e0eef2eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bb27b7ee-7ca3-4bde-b763-6c084f113a2c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3fbf18f6-e7c3-43cf-8010-4860e5e3ec71",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 61,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "01f3f446-fa8d-409d-9d3c-0f4853d4e0a7",
                  "parentUUID": "3fbf18f6-e7c3-43cf-8010-4860e5e3ec71",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "01f3f446-fa8d-409d-9d3c-0f4853d4e0a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 61,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4ca8d2a9-944c-4659-b84b-310997e441a9",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Testing Functional requirements  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a61ace99-c237-44a7-873f-1d481d98390f",
                  "parentUUID": "4ca8d2a9-944c-4659-b84b-310997e441a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a61ace99-c237-44a7-873f-1d481d98390f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e591026b-e8ee-40db-8101-88ca78439b0e",
              "title": " get /api/users/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.3 -> List all users",
                  "fullTitle": "Testing Functional requirements  get /api/users/ FR 1.3 -> List all users",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f2016782-07d3-4645-8614-fcac50830651",
                  "parentUUID": "e591026b-e8ee-40db-8101-88ca78439b0e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f2016782-07d3-4645-8614-fcac50830651"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9ab76cb9-85ed-499e-af91-d51dd0e68672",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Testing Functional requirements  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "70c4741d-37b1-4d39-b381-8753e7c4f636",
                  "parentUUID": "9ab76cb9-85ed-499e-af91-d51dd0e68672",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70c4741d-37b1-4d39-b381-8753e7c4f636"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e635dacf-078d-4d30-a03a-3ec37521fc33",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8ed45208-afb2-4c9e-a141-05006f6b1a0c",
                  "parentUUID": "e635dacf-078d-4d30-a03a-3ec37521fc33",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8ed45208-afb2-4c9e-a141-05006f6b1a0c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b99c551a-f6dc-4279-a685-f203323ed3d4",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b5516d81-5f60-4130-b72c-e62239d8faf0",
                  "parentUUID": "b99c551a-f6dc-4279-a685-f203323ed3d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b5516d81-5f60-4130-b72c-e62239d8faf0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "26dbe1bb-8787-4112-8709-9ea7e226ea06",
              "title": "put /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 b -> Modify an existing SKU",
                  "fullTitle": "Testing Functional requirements put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b89ee522-8752-4498-92b1-8aa7c3055855",
                  "parentUUID": "26dbe1bb-8787-4112-8709-9ea7e226ea06",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b89ee522-8752-4498-92b1-8aa7c3055855"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "07125682-3440-4635-8948-3793edf95669",
              "title": "delete /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.2 -> Delete a SKU",
                  "fullTitle": "Testing Functional requirements delete /api/sku/:id FR 2.2 -> Delete a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6191bd4b-d520-4917-8980-2b2897d2738a",
                  "parentUUID": "07125682-3440-4635-8948-3793edf95669",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6191bd4b-d520-4917-8980-2b2897d2738a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "02366074-db5a-41ec-a6ff-ffd536348bc1",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5ae175aa-5961-4f4f-9462-18400814ee43",
                  "parentUUID": "02366074-db5a-41ec-a6ff-ffd536348bc1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5ae175aa-5961-4f4f-9462-18400814ee43"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "58a76770-cb16-4f6c-9327-c7bc6a50d793",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Testing Functional requirements get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ec8af564-c915-4e8b-8b33-c324ee454a7a",
                  "parentUUID": "58a76770-cb16-4f6c-9327-c7bc6a50d793",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ec8af564-c915-4e8b-8b33-c324ee454a7a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "37bd706e-459e-4d26-88cb-1ff481eb4d2f",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "afd95720-3c10-4d21-8120-3bf3b31e0d8c",
                  "parentUUID": "37bd706e-459e-4d26-88cb-1ff481eb4d2f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "afd95720-3c10-4d21-8120-3bf3b31e0d8c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "97f7bb96-deed-4531-8ded-64433fc00ea4",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "Testing Functional requirements  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1af72e2e-a02c-4766-ae39-224bd3ef362f",
                  "parentUUID": "97f7bb96-deed-4531-8ded-64433fc00ea4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1af72e2e-a02c-4766-ae39-224bd3ef362f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fbc9ed8f-19ff-489a-9699-e722c453f27b",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "df112618-41f1-4447-84f6-6718b3a0f8d4",
                  "parentUUID": "fbc9ed8f-19ff-489a-9699-e722c453f27b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "df112618-41f1-4447-84f6-6718b3a0f8d4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9e7abb12-2502-4e4a-bb4d-b023d1e5ed1a",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "Testing Functional requirements  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1fe521df-b50a-444f-bd41-1d7a4748d965",
                  "parentUUID": "9e7abb12-2502-4e4a-bb4d-b023d1e5ed1a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1fe521df-b50a-444f-bd41-1d7a4748d965"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a58537c8-22e1-476c-88bb-d9434bb9570e",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "Testing Functional requirements Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "aba7e033-739f-4fba-9d22-d2ec5d5d54bd",
                  "parentUUID": "a58537c8-22e1-476c-88bb-d9434bb9570e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aba7e033-739f-4fba-9d22-d2ec5d5d54bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f58fc3f9-7f0e-4b1f-ad82-71280590bbac",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a10db1a9-0d0a-4ba1-848d-0625ffdd5f7e",
                  "parentUUID": "f58fc3f9-7f0e-4b1f-ad82-71280590bbac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a10db1a9-0d0a-4ba1-848d-0625ffdd5f7e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4a128e6f-f163-4e9e-a2c8-8002ee996bdc",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0bf7dcf0-c715-4e93-a223-16901e6f10af",
                  "parentUUID": "4a128e6f-f163-4e9e-a2c8-8002ee996bdc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0bf7dcf0-c715-4e93-a223-16901e6f10af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "956178f7-a63e-46ab-afe4-f367340b4c08",
              "title": " get /api/positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.3 -> List all positions",
                  "fullTitle": "Testing Functional requirements  get /api/positions FR 3.1.3 -> List all positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "2dfda0df-00e8-4f34-9d35-07576e23c5f9",
                  "parentUUID": "956178f7-a63e-46ab-afe4-f367340b4c08",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2dfda0df-00e8-4f34-9d35-07576e23c5f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "529be5a1-dde4-4e7c-b6b5-2226cc5fbb39",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "Testing Functional requirements  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4bacc66e-2a85-4073-b600-8c0bda6472c0",
                  "parentUUID": "529be5a1-dde4-4e7c-b6b5-2226cc5fbb39",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4bacc66e-2a85-4073-b600-8c0bda6472c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b30de7dd-a8b7-490a-9530-4737af885480",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "0f449fc4-7e57-477d-bad4-445489aaf9b1",
                  "parentUUID": "b30de7dd-a8b7-490a-9530-4737af885480",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0f449fc4-7e57-477d-bad4-445489aaf9b1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "60c4fed8-1409-4267-a5a5-98f147469d6e",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "abdcc3af-f575-4fc7-a696-a1bbc49ecd84",
                  "parentUUID": "60c4fed8-1409-4267-a5a5-98f147469d6e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "abdcc3af-f575-4fc7-a696-a1bbc49ecd84"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cecff4b0-35a0-4e2f-baca-f3c3004f64c4",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b7593b14-1d15-4535-b4a3-97265eb65a19",
                  "parentUUID": "cecff4b0-35a0-4e2f-baca-f3c3004f64c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b7593b14-1d15-4535-b4a3-97265eb65a19"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7881be49-904d-4d60-a919-6aaa463c566d",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "38a8d10e-eb14-4b56-bca9-93c399b61f9a",
                  "parentUUID": "7881be49-904d-4d60-a919-6aaa463c566d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "38a8d10e-eb14-4b56-bca9-93c399b61f9a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2f41658e-6148-4445-a45b-893b5213f579",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3929c22d-ab52-4f32-b0b1-d3c7dd523b16",
                  "parentUUID": "2f41658e-6148-4445-a45b-893b5213f579",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3929c22d-ab52-4f32-b0b1-d3c7dd523b16"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "84d3a4bf-8250-4e5b-a27c-a8008f5b40fc",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b2df9bde-2b52-4873-a43b-b5e07b69691d",
                  "parentUUID": "84d3a4bf-8250-4e5b-a27c-a8008f5b40fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2df9bde-2b52-4873-a43b-b5e07b69691d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cf22da41-c593-44c3-9a50-25e0f90732ab",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Testing Functional requirements test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7a347a8d-61a7-4c50-a9c1-0e0ff2bd235c",
                  "parentUUID": "cf22da41-c593-44c3-9a50-25e0f90732ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7a347a8d-61a7-4c50-a9c1-0e0ff2bd235c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8d570ab4-5aeb-4f64-b7a7-515aa9d5e2a0",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Testing Functional requirements Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "8250c864-2cca-4424-bb20-115510a607c2",
                  "parentUUID": "8d570ab4-5aeb-4f64-b7a7-515aa9d5e2a0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8250c864-2cca-4424-bb20-115510a607c2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cefb591f-e6fd-45c9-89f6-89d8e5e31086",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "222b0956-c10c-4725-bb6a-3e4452dcc270",
                  "parentUUID": "cefb591f-e6fd-45c9-89f6-89d8e5e31086",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "222b0956-c10c-4725-bb6a-3e4452dcc270"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "706bb1c1-2ce9-4cd4-a759-d54059bf5f46",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "ee7e4614-9da5-4068-bcce-15de2b62fb71",
                  "parentUUID": "706bb1c1-2ce9-4cd4-a759-d54059bf5f46",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ee7e4614-9da5-4068-bcce-15de2b62fb71"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bf358ca5-e374-416f-a118-34643341f8d4",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Testing Functional requirements  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "20c11a00-3492-460d-b91a-24602661160a",
                  "parentUUID": "bf358ca5-e374-416f-a118-34643341f8d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20c11a00-3492-460d-b91a-24602661160a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2efa6ce5-30e6-43d3-bb7b-1bb128fab223",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "229e1f91-85e5-4252-932c-d80f94aaec11",
                  "parentUUID": "2efa6ce5-30e6-43d3-bb7b-1bb128fab223",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "229e1f91-85e5-4252-932c-d80f94aaec11"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7268fd5b-2339-40c1-bd1c-dd00a61b1a34",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "46f48776-f3cc-4a93-b412-8efd4b26cbf9",
                  "parentUUID": "7268fd5b-2339-40c1-bd1c-dd00a61b1a34",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46f48776-f3cc-4a93-b412-8efd4b26cbf9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "44618ed7-f1a2-4247-b2e0-5129977804fa",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1402c36a-0599-4d12-854d-80bcbd970c68",
                  "parentUUID": "44618ed7-f1a2-4247-b2e0-5129977804fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1402c36a-0599-4d12-854d-80bcbd970c68"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "147180d0-9fac-46e3-987d-7c985e1e0dc2",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "800ba66c-0c62-43cb-bbbe-705d453e3975",
                  "parentUUID": "147180d0-9fac-46e3-987d-7c985e1e0dc2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "800ba66c-0c62-43cb-bbbe-705d453e3975"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ac39701c-4b47-4626-b6b9-c8602557d07a",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "eae6a3b5-9016-4368-b688-45c4bcffc666",
                  "parentUUID": "ac39701c-4b47-4626-b6b9-c8602557d07a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eae6a3b5-9016-4368-b688-45c4bcffc666"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "344810bd-2d0b-4df7-856d-617a18e963be",
              "title": " get /api/users/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.3 -> List all users",
                  "fullTitle": "Testing Functional requirements  get /api/users/ FR 1.3 -> List all users",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "43e0f85f-10a7-4cc7-98c5-d45f80e9d146",
                  "parentUUID": "344810bd-2d0b-4df7-856d-617a18e963be",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "43e0f85f-10a7-4cc7-98c5-d45f80e9d146"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6a7a938a-195d-4699-8a2f-39d3900610ca",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b16a6e21-e418-4982-9d38-68293d42b4a5",
                  "parentUUID": "6a7a938a-195d-4699-8a2f-39d3900610ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b16a6e21-e418-4982-9d38-68293d42b4a5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9ffd4d88-97a6-479b-bcba-65c94a9b72d3",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "274e6772-847a-4a02-b76a-7336b883da25",
                  "parentUUID": "9ffd4d88-97a6-479b-bcba-65c94a9b72d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "274e6772-847a-4a02-b76a-7336b883da25"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d917914b-ef98-4d30-b45f-27b328728b5a",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Testing Functional requirements  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "243cb44b-7eee-4f4a-b137-bcfa93363dac",
                  "parentUUID": "d917914b-ef98-4d30-b45f-27b328728b5a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "243cb44b-7eee-4f4a-b137-bcfa93363dac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e89b2848-8251-4958-ab64-ff8f0e2ba088",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Testing Functional requirements post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "efe52d23-556c-4dfc-b6ca-467d326d30e5",
                  "parentUUID": "e89b2848-8251-4958-ab64-ff8f0e2ba088",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "efe52d23-556c-4dfc-b6ca-467d326d30e5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "19375443-4205-4552-a2bd-25f0fb11a654",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4c57cc00-2b68-4582-874f-cfafbb11860d",
                  "parentUUID": "19375443-4205-4552-a2bd-25f0fb11a654",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c57cc00-2b68-4582-874f-cfafbb11860d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f4a48891-980e-45b6-af93-721148264535",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "96726993-df58-4a77-9dda-558552cd57e6",
                  "parentUUID": "f4a48891-980e-45b6-af93-721148264535",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "96726993-df58-4a77-9dda-558552cd57e6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "25e259d5-a5b7-436d-8af1-46afcb05e196",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Testing Functional requirements put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "0bdf4a01-69a2-4b37-b087-f79a10ebbee7",
                  "parentUUID": "25e259d5-a5b7-436d-8af1-46afcb05e196",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0bdf4a01-69a2-4b37-b087-f79a10ebbee7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f5fb8812-735a-46df-a899-80318d34736e",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Testing Functional requirements put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "a710b4b2-45d2-4836-80e8-180defe40990",
                  "parentUUID": "f5fb8812-735a-46df-a899-80318d34736e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a710b4b2-45d2-4836-80e8-180defe40990"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fabab60a-f1af-41e7-ae8b-628371c63c03",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "2c18ab66-dc6f-44c4-9f16-92b19f408a38",
                  "parentUUID": "fabab60a-f1af-41e7-ae8b-628371c63c03",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2c18ab66-dc6f-44c4-9f16-92b19f408a38"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ec673473-108a-4c82-a732-b46c21ce6362",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "52d8e0c9-5c52-433c-8d53-5e1350ab668b",
                  "parentUUID": "ec673473-108a-4c82-a732-b46c21ce6362",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52d8e0c9-5c52-433c-8d53-5e1350ab668b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "32589b39-d035-4889-9c5e-b8d1a7fb72cc",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Testing Functional requirements removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "aedeaa96-f278-4983-90b8-b1aef775e962",
                  "parentUUID": "32589b39-d035-4889-9c5e-b8d1a7fb72cc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aedeaa96-f278-4983-90b8-b1aef775e962"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "eb8ff244-a053-44e8-8fb4-866b63eaaf7a",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "74795bfd-d660-49f7-afda-5b3107348d60",
                  "parentUUID": "eb8ff244-a053-44e8-8fb4-866b63eaaf7a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "74795bfd-d660-49f7-afda-5b3107348d60"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "082c26df-6614-4cd2-8819-3491a0e7e0fa",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ffa61ded-b5aa-493f-a0d3-8369db808bc6",
                  "parentUUID": "082c26df-6614-4cd2-8819-3491a0e7e0fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ffa61ded-b5aa-493f-a0d3-8369db808bc6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b7da46da-9f62-4ab0-a9a5-57264a0e42ed",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4ceb4c52-f294-46c6-8175-ebb3776594e6",
                  "parentUUID": "b7da46da-9f62-4ab0-a9a5-57264a0e42ed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ceb4c52-f294-46c6-8175-ebb3776594e6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "208a7f4f-10a6-4a5d-9f0a-b23e588331ab",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "caac70bf-064a-468c-aea3-0fedcc382f0e",
                  "parentUUID": "208a7f4f-10a6-4a5d-9f0a-b23e588331ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "caac70bf-064a-468c-aea3-0fedcc382f0e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2224937e-42ae-4ca9-ac87-ec50c08c3649",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c889b748-411c-42c8-9d7a-6a91d6838b0d",
                  "parentUUID": "2224937e-42ae-4ca9-ac87-ec50c08c3649",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c889b748-411c-42c8-9d7a-6a91d6838b0d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4e3915d9-400c-4f2e-9347-24306450d668",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Testing Functional requirements test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "07f37b49-acfa-4639-a9d7-ccf7de3d0e8a",
                  "parentUUID": "4e3915d9-400c-4f2e-9347-24306450d668",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "07f37b49-acfa-4639-a9d7-ccf7de3d0e8a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f6ecf2a0-e001-4793-a1b2-0155ac15d9bc",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Testing Functional requirements put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "50aa260a-01ba-454c-bda6-174cc67f5918",
                  "parentUUID": "f6ecf2a0-e001-4793-a1b2-0155ac15d9bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50aa260a-01ba-454c-bda6-174cc67f5918"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6ef3b00c-3856-4a82-bed2-57e2ac55288d",
          "title": "Testing Functional requirements pt2",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ded8e1ae-5104-4c83-8955-dd17771bb6ea",
              "title": "Test sku CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "93375ca9-62d0-41d3-af8d-4db2892d9dce",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "e6afca7e-80ac-424c-b10b-d539296442cd",
                      "parentUUID": "93375ca9-62d0-41d3-af8d-4db2892d9dce",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e6afca7e-80ac-424c-b10b-d539296442cd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f703f4a4-8659-41fa-af74-634cc6090843",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ac3f16b9-a01c-4ae8-9e74-11102986c926",
                      "parentUUID": "f703f4a4-8659-41fa-af74-634cc6090843",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ac3f16b9-a01c-4ae8-9e74-11102986c926"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "94e45e29-e652-4f27-9b5c-3494fa56b3d3",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "878dab99-72d4-4dd8-a2b0-c9246a331c90",
                      "parentUUID": "94e45e29-e652-4f27-9b5c-3494fa56b3d3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "878dab99-72d4-4dd8-a2b0-c9246a331c90"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a068e5ed-7f1e-4afb-96e8-4e721fbe1b18",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3d799026-2a3a-4c9f-8dd2-527175fe4ede",
                      "parentUUID": "a068e5ed-7f1e-4afb-96e8-4e721fbe1b18",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3d799026-2a3a-4c9f-8dd2-527175fe4ede"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "38bd3edd-8c47-460c-a0e7-26ac36e71057",
                  "title": "put /api/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 b -> Modify an existing SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b3a26eb9-bd82-4ad6-a097-e909257d225a",
                      "parentUUID": "38bd3edd-8c47-460c-a0e7-26ac36e71057",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b3a26eb9-bd82-4ad6-a097-e909257d225a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "722d6cf0-e104-4c8f-b017-e9266562e849",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1c7186e6-df6f-4a7a-8b32-ca30d2559aa4",
                      "parentUUID": "722d6cf0-e104-4c8f-b017-e9266562e849",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1c7186e6-df6f-4a7a-8b32-ca30d2559aa4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3ef1b403-324e-4757-a1ac-478baecbe242",
                  "title": "put /api/sku/:id/position",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Changing SKU position passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features put /api/sku/:id/position Changing SKU position passing its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID+'/position')\n.send(pos)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e9f5a78c-c2f1-43e3-9756-71900f2697ca",
                      "parentUUID": "3ef1b403-324e-4757-a1ac-478baecbe242",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e9f5a78c-c2f1-43e3-9756-71900f2697ca"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ff419d03-535f-4551-b323-185f6102d09f",
                  "title": "delete /api/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.2 -> Delete a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features delete /api/sku/:id FR 2.2 -> Delete a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fb97e9d2-096b-4640-b4e8-2c1ce631a6fa",
                      "parentUUID": "ff419d03-535f-4551-b323-185f6102d09f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fb97e9d2-096b-4640-b4e8-2c1ce631a6fa"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0c3dce65-a574-4152-a44b-2265eea21cff",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5cb4d989-aac4-466f-aa42-e94ecd76716d",
                      "parentUUID": "0c3dce65-a574-4152-a44b-2265eea21cff",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5cb4d989-aac4-466f-aa42-e94ecd76716d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e14f5fbf-4d5a-4a0d-9a2b-f67cbed33cf8",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ef1e16a2-6221-47b9-bb15-55807860c494",
                      "parentUUID": "e14f5fbf-4d5a-4a0d-9a2b-f67cbed33cf8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ef1e16a2-6221-47b9-bb15-55807860c494"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "94cab390-7ef2-4c88-a1b7-06108153b865",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4de65d67-d37c-485a-b76f-4a12cf5a3268",
                      "parentUUID": "94cab390-7ef2-4c88-a1b7-06108153b865",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4de65d67-d37c-485a-b76f-4a12cf5a3268"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "01ef7f65-6042-4cf8-9204-b420b100591b",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a251b6e3-f24a-462e-8fcf-4be6bc85ae63",
                      "parentUUID": "01ef7f65-6042-4cf8-9204-b420b100591b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a251b6e3-f24a-462e-8fcf-4be6bc85ae63"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7ff173c4-05a6-4305-b27e-adbe023c0951",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "06b95b06-cd01-45ed-be40-ca2c29ee6abc",
                      "parentUUID": "7ff173c4-05a6-4305-b27e-adbe023c0951",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "06b95b06-cd01-45ed-be40-ca2c29ee6abc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9fcde201-4754-4322-a619-45c54fbc5a92",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "bc0ff041-4ddb-4d60-8889-3cd0991a4001",
                      "parentUUID": "9fcde201-4754-4322-a619-45c54fbc5a92",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bc0ff041-4ddb-4d60-8889-3cd0991a4001"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "78310655-3d7b-4bc8-a927-f53f04b8a340",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "35fd271b-d117-46b4-8e00-f427a72f6069",
                      "parentUUID": "78310655-3d7b-4bc8-a927-f53f04b8a340",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "35fd271b-d117-46b4-8e00-f427a72f6069"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a0a82e01-9075-4dcb-9f5b-0fb48da6404c",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "79e37839-a43c-4991-8570-ab3c6e3fcd15",
                      "parentUUID": "a0a82e01-9075-4dcb-9f5b-0fb48da6404c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "79e37839-a43c-4991-8570-ab3c6e3fcd15"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d5cdd952-c8f0-4257-a5b4-fee68c905a31",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b6589ba8-bb33-472b-9d9d-5a9f136f51bd",
                      "parentUUID": "d5cdd952-c8f0-4257-a5b4-fee68c905a31",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b6589ba8-bb33-472b-9d9d-5a9f136f51bd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bd541e0f-c5c1-4cd4-8fa9-2d27b3e43315",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9c9e6fdf-0e1f-479d-b870-37d35732291d",
                      "parentUUID": "bd541e0f-c5c1-4cd4-8fa9-2d27b3e43315",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9c9e6fdf-0e1f-479d-b870-37d35732291d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1a54f517-89da-4035-8d8c-207f6c21cc62",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "97d64ae7-91f9-496f-a3e3-9a213720c39c",
                      "parentUUID": "1a54f517-89da-4035-8d8c-207f6c21cc62",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "97d64ae7-91f9-496f-a3e3-9a213720c39c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b1983001-571a-46de-9275-98c2b1cd91d7",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6cd36c9a-6856-40b7-ae90-9fa886952fe2",
                      "parentUUID": "b1983001-571a-46de-9275-98c2b1cd91d7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6cd36c9a-6856-40b7-ae90-9fa886952fe2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b0e08def-23e4-4dba-aa34-979730e083a2",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0a79a3c2-ef48-48a8-826a-8cf6aa32d8ef",
                      "parentUUID": "b0e08def-23e4-4dba-aa34-979730e083a2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0a79a3c2-ef48-48a8-826a-8cf6aa32d8ef"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f37ec2ea-c3a4-4e37-a568-911dc62d7ff9",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b483b2db-df9c-42f7-9073-648d1ae2241d",
                      "parentUUID": "f37ec2ea-c3a4-4e37-a568-911dc62d7ff9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b483b2db-df9c-42f7-9073-648d1ae2241d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "840b48e0-a1c4-431d-9101-8849a2b39905",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "325a11f4-064a-40b0-a7db-cee9895c8e36",
                      "parentUUID": "840b48e0-a1c4-431d-9101-8849a2b39905",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "325a11f4-064a-40b0-a7db-cee9895c8e36"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "20c91bc3-7535-4626-a108-2c6d3cdb87a7",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6135674c-f98f-4a70-a134-0ff74ec76d18",
                      "parentUUID": "20c91bc3-7535-4626-a108-2c6d3cdb87a7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6135674c-f98f-4a70-a134-0ff74ec76d18"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0e08cc01-b406-4771-98bd-62b02c91b8ea",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "62cfa25b-2fc3-4155-9e91-9e30893ef348",
                      "parentUUID": "0e08cc01-b406-4771-98bd-62b02c91b8ea",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "62cfa25b-2fc3-4155-9e91-9e30893ef348"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b615cc49-14ef-4b6e-9e09-58ce695180c2",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "78e34d46-82d5-415e-8fbf-2996723b058f",
                      "parentUUID": "b615cc49-14ef-4b6e-9e09-58ce695180c2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "78e34d46-82d5-415e-8fbf-2996723b058f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "23cdda0b-9185-4dce-aef2-00873870a9ff",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f42784cd-e15a-49f9-91e1-260c265b62f0",
                      "parentUUID": "23cdda0b-9185-4dce-aef2-00873870a9ff",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f42784cd-e15a-49f9-91e1-260c265b62f0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "76f3440f-c419-42f4-a9b9-524e13ef4bf1",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "ebe9b2f0-4a4d-42de-81a4-dd5eb5e91613",
                      "parentUUID": "76f3440f-c419-42f4-a9b9-524e13ef4bf1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ebe9b2f0-4a4d-42de-81a4-dd5eb5e91613"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1053655a-1e45-4213-b917-c3192b5920a4",
              "title": "Test skuitem CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "28f795df-a03d-4571-b6a1-367ddc081b8b",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "c31117bb-dc63-4178-8ee1-74b1ab64ad88",
                      "parentUUID": "28f795df-a03d-4571-b6a1-367ddc081b8b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c31117bb-dc63-4178-8ee1-74b1ab64ad88"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bbe76ed5-5843-4519-b8f6-3daa8a471e66",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "bd514fca-fb99-4d21-b743-57f124ef6412",
                      "parentUUID": "bbe76ed5-5843-4519-b8f6-3daa8a471e66",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bd514fca-fb99-4d21-b743-57f124ef6412"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "65779c38-a1fc-41cd-8bdc-a3e45fed5b5f",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e9715dd0-6282-44dd-83cc-b6c5b41561f7",
                      "parentUUID": "65779c38-a1fc-41cd-8bdc-a3e45fed5b5f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e9715dd0-6282-44dd-83cc-b6c5b41561f7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e3b4c3e8-5749-4209-a0e4-041562482c29",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b3b098c1-bdb1-4944-9aab-2a5e1d50fa57",
                      "parentUUID": "e3b4c3e8-5749-4209-a0e4-041562482c29",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b3b098c1-bdb1-4944-9aab-2a5e1d50fa57"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bea08da6-537a-437d-b264-58d8189867a1",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "be6ab7e9-5392-4c0f-8ad5-a94383b8c1d8",
                      "parentUUID": "bea08da6-537a-437d-b264-58d8189867a1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "be6ab7e9-5392-4c0f-8ad5-a94383b8c1d8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9842fe1c-8098-456f-adf6-820fd73096bb",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8ea62223-89d1-4e0c-bbb7-94ff3b31e638",
                      "parentUUID": "9842fe1c-8098-456f-adf6-820fd73096bb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8ea62223-89d1-4e0c-bbb7-94ff3b31e638"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "164a9760-7d01-4a6d-a817-45d8c46ec17f",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b7c284e8-87a5-4b20-a096-1a3c0559b9b6",
                      "parentUUID": "164a9760-7d01-4a6d-a817-45d8c46ec17f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b7c284e8-87a5-4b20-a096-1a3c0559b9b6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "141c7788-3bdb-4716-b9e9-00c3168eba34",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ae1fee07-5092-4b02-88b3-08fa2423948c",
                      "parentUUID": "141c7788-3bdb-4716-b9e9-00c3168eba34",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ae1fee07-5092-4b02-88b3-08fa2423948c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "17bf357a-cfa8-40f2-91d2-f033fc4e294a",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b7b2e2b3-2a4f-4f60-b5ee-797f996a98c7",
                      "parentUUID": "17bf357a-cfa8-40f2-91d2-f033fc4e294a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b7b2e2b3-2a4f-4f60-b5ee-797f996a98c7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "52c81588-8df9-4cd0-b68b-b554c8252bf2",
                  "title": "get /api/skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c3af1991-ed8b-4c95-9eca-b5215309df70",
                      "parentUUID": "52c81588-8df9-4cd0-b68b-b554c8252bf2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c3af1991-ed8b-4c95-9eca-b5215309df70"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "81212c74-5c7f-42c6-98d2-9969e90f88ce",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e75f8207-8bed-47d3-aafc-64c3437697a5",
                      "parentUUID": "81212c74-5c7f-42c6-98d2-9969e90f88ce",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e75f8207-8bed-47d3-aafc-64c3437697a5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bd8ea75b-5495-4792-8b1f-8df58832e9c1",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "894cf0dd-e53f-45eb-87cd-19dac0794a4f",
                      "parentUUID": "bd8ea75b-5495-4792-8b1f-8df58832e9c1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "894cf0dd-e53f-45eb-87cd-19dac0794a4f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "447f07d3-fa4a-407b-a6e9-dd3b9a376cb5",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "61edc3d7-b788-475d-bba4-a094c21d2f99",
                      "parentUUID": "447f07d3-fa4a-407b-a6e9-dd3b9a376cb5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "61edc3d7-b788-475d-bba4-a094c21d2f99"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "41fc0f23-5f91-4263-821c-2fed1faf04c3",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b408a367-844e-49ab-a058-f03286a6a46e",
                      "parentUUID": "41fc0f23-5f91-4263-821c-2fed1faf04c3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b408a367-844e-49ab-a058-f03286a6a46e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6cad9d14-8f7b-402b-b54d-6d8b3579b48f",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "8340938a-5518-49f0-8474-edf6c4075eec",
                      "parentUUID": "6cad9d14-8f7b-402b-b54d-6d8b3579b48f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8340938a-5518-49f0-8474-edf6c4075eec"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c8574082-6bc6-4bd0-98d6-cdce5e3d6606",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "a296d357-2479-4081-8f3b-8a7517e74303",
                      "parentUUID": "c8574082-6bc6-4bd0-98d6-cdce5e3d6606",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a296d357-2479-4081-8f3b-8a7517e74303"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a1e916b6-bb11-49a0-b731-499a25943111",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "c9f2a1aa-a7db-4209-b5cd-9f3dd9d43a18",
                      "parentUUID": "a1e916b6-bb11-49a0-b731-499a25943111",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c9f2a1aa-a7db-4209-b5cd-9f3dd9d43a18"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9dfa1984-e06a-49e8-ba5e-850603ebf457",
                  "title": "get /api/skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "950d8098-bf4d-42e7-aaa6-079d18f0f6bf",
                      "parentUUID": "9dfa1984-e06a-49e8-ba5e-850603ebf457",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "950d8098-bf4d-42e7-aaa6-079d18f0f6bf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8cebe99f-4dc1-43dd-9ef0-04133e61c755",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "dc8cc7af-e327-4002-a68a-9c9bef21a26a",
                      "parentUUID": "8cebe99f-4dc1-43dd-9ef0-04133e61c755",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "dc8cc7af-e327-4002-a68a-9c9bef21a26a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0ab83efc-c8c9-4b0c-a698-fac4945f261c",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "017ef382-9638-4bae-90a2-1539e3feb21b",
                      "parentUUID": "0ab83efc-c8c9-4b0c-a698-fac4945f261c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "017ef382-9638-4bae-90a2-1539e3feb21b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "63f59a11-a8f5-4008-a8d8-bd48d15a07bd",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9bc31aa6-1425-44ee-b001-637425ebb7ed",
                      "parentUUID": "63f59a11-a8f5-4008-a8d8-bd48d15a07bd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9bc31aa6-1425-44ee-b001-637425ebb7ed"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1846917c-feb0-4b5c-8342-03f74ece7aad",
              "title": "test positions CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "72b1815d-c0fe-438a-aec5-41a20ec88f1e",
                  "title": "Removing all Positions",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Positions",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features Removing all Positions Getting Positions",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "a4201562-77e5-4ba9-aad4-eebf18bc9f1e",
                      "parentUUID": "72b1815d-c0fe-438a-aec5-41a20ec88f1e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a4201562-77e5-4ba9-aad4-eebf18bc9f1e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1eff54ec-5e8b-484b-847c-15b26a227e3c",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d9a46ab0-f02d-4591-9368-0930ad19c56b",
                      "parentUUID": "1eff54ec-5e8b-484b-847c-15b26a227e3c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d9a46ab0-f02d-4591-9368-0930ad19c56b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "384567ac-bed3-4e4c-9593-1a49a8fe78cb",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4a9dbd1a-c524-4ba6-8b1a-64a21c066d56",
                      "parentUUID": "384567ac-bed3-4e4c-9593-1a49a8fe78cb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4a9dbd1a-c524-4ba6-8b1a-64a21c066d56"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f5b52025-10e0-46ea-906c-6aa08b7984bd",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "050d3e95-af9e-4ae7-bca6-65e9b626ccba",
                      "parentUUID": "f5b52025-10e0-46ea-906c-6aa08b7984bd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "050d3e95-af9e-4ae7-bca6-65e9b626ccba"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "67d5c3f4-b178-4681-ba07-e720ad7b3487",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "eee7ea18-b736-4e55-82c3-d9963ffac186",
                      "parentUUID": "67d5c3f4-b178-4681-ba07-e720ad7b3487",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "eee7ea18-b736-4e55-82c3-d9963ffac186"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "19ba8ce5-af63-4e2c-8690-7ef9aa1847df",
                  "title": " get /api/positions",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.3 -> List all positions",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  get /api/positions FR 3.1.3 -> List all positions",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "e07f3f2f-cd94-47b9-a1da-4095077c16cf",
                      "parentUUID": "19ba8ce5-af63-4e2c-8690-7ef9aa1847df",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e07f3f2f-cd94-47b9-a1da-4095077c16cf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0c5b694f-dd05-48b4-ab0b-a7feddeabc8b",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "eea01f85-fc58-4608-8b3c-0f62812d1b65",
                      "parentUUID": "0c5b694f-dd05-48b4-ab0b-a7feddeabc8b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "eea01f85-fc58-4608-8b3c-0f62812d1b65"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e33a58c5-dd26-424f-aefa-1a9f9995431a",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a5146fa1-ced9-4a73-9b66-08fe7d507a8a",
                      "parentUUID": "e33a58c5-dd26-424f-aefa-1a9f9995431a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a5146fa1-ced9-4a73-9b66-08fe7d507a8a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "35ccbcb3-0d48-459b-9b8d-703a2b63614c",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c2b9db2d-cd90-47d3-846e-bc64057af13e",
                      "parentUUID": "35ccbcb3-0d48-459b-9b8d-703a2b63614c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c2b9db2d-cd90-47d3-846e-bc64057af13e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8e521aaa-9bc7-4d48-a421-82fb2c5267b0",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a8fb664e-68db-46e3-a7c5-d6a693962a3e",
                      "parentUUID": "8e521aaa-9bc7-4d48-a421-82fb2c5267b0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a8fb664e-68db-46e3-a7c5-d6a693962a3e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1821873a-06bb-4ade-b597-c402ef8d7abc",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3fbbc1b7-5938-4e5e-b4b3-f3b9e987c4c3",
                      "parentUUID": "1821873a-06bb-4ade-b597-c402ef8d7abc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3fbbc1b7-5938-4e5e-b4b3-f3b9e987c4c3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bc7764d0-3b1e-4c83-afec-e90fb135c141",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e629947e-4c62-4156-87d5-c65504b4ea63",
                      "parentUUID": "bc7764d0-3b1e-4c83-afec-e90fb135c141",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e629947e-4c62-4156-87d5-c65504b4ea63"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a17e139d-e52d-457e-8f42-e2e498b0dd0b",
                  "title": " delete /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.2 -> Delete a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f00d3695-41e3-417d-a26e-0646154f1c84",
                      "parentUUID": "a17e139d-e52d-457e-8f42-e2e498b0dd0b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f00d3695-41e3-417d-a26e-0646154f1c84"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c909c2c9-1b35-4665-905d-de959c0224bd",
                  "title": " delete /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.2 -> Delete a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9df3fd20-217f-486f-95d7-3e93251cf424",
                      "parentUUID": "c909c2c9-1b35-4665-905d-de959c0224bd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9df3fd20-217f-486f-95d7-3e93251cf424"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "443f5210-b541-4f83-98d7-a693bd1c4940",
              "title": "Test TestDescriptor CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "e4f964b0-7494-4313-ac54-1a2ca5773b42",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "77fe8f57-d232-4978-84de-915f9ee0ee6b",
                      "parentUUID": "e4f964b0-7494-4313-ac54-1a2ca5773b42",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "77fe8f57-d232-4978-84de-915f9ee0ee6b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a5d0b749-a29e-4a00-8376-0ae8beaf41ec",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "a249c4d1-c999-45c9-bf27-7e9949f6f8aa",
                      "parentUUID": "a5d0b749-a29e-4a00-8376-0ae8beaf41ec",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a249c4d1-c999-45c9-bf27-7e9949f6f8aa"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 6,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b07dcf95-3003-4ecd-9b7a-674516e2ea8e",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "eca95d7f-232b-41bd-869f-f40f7457b582",
                      "parentUUID": "b07dcf95-3003-4ecd-9b7a-674516e2ea8e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "eca95d7f-232b-41bd-869f-f40f7457b582"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4326ab23-5b51-4fd4-8e0f-7598d131bbc7",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2ef9f295-50ec-401c-844f-bd9daa0b5dec",
                      "parentUUID": "4326ab23-5b51-4fd4-8e0f-7598d131bbc7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2ef9f295-50ec-401c-844f-bd9daa0b5dec"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ac5642c1-76ed-4dd2-a776-fd8a0f2d0d14",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "082cbb6e-68a8-41ba-9739-6da3bfaedf0b",
                      "parentUUID": "ac5642c1-76ed-4dd2-a776-fd8a0f2d0d14",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "082cbb6e-68a8-41ba-9739-6da3bfaedf0b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f584e8b9-2408-4a24-84f7-fd3df1b52d99",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "05e775e2-1ed2-4b23-80d7-93ee2d4741f8",
                      "parentUUID": "f584e8b9-2408-4a24-84f7-fd3df1b52d99",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "05e775e2-1ed2-4b23-80d7-93ee2d4741f8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "38e58544-d761-4e33-b46d-1c929ef8f7d8",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "56925389-6acf-4b30-9bd2-bc180d314d4e",
                      "parentUUID": "38e58544-d761-4e33-b46d-1c929ef8f7d8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "56925389-6acf-4b30-9bd2-bc180d314d4e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ab05bd02-9f8c-48bd-b974-13ce2161b6ba",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "42508773-befd-4b9c-9a1c-3b6f8cc92d7b",
                      "parentUUID": "ab05bd02-9f8c-48bd-b974-13ce2161b6ba",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "42508773-befd-4b9c-9a1c-3b6f8cc92d7b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "43d59fb7-53df-4a79-bcd3-e39e63e4bbb8",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f07652a9-9fe1-47ac-bb18-99f16fa5fa6c",
                      "parentUUID": "43d59fb7-53df-4a79-bcd3-e39e63e4bbb8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f07652a9-9fe1-47ac-bb18-99f16fa5fa6c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f041f2b2-c95c-43d5-b00c-f36729d0ecc5",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3940656f-43b8-48a9-a439-c31e3fc81ea1",
                      "parentUUID": "f041f2b2-c95c-43d5-b00c-f36729d0ecc5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3940656f-43b8-48a9-a439-c31e3fc81ea1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6ab829b5-a772-4eb6-a197-ec6617516a1e",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4a50ce53-1f3d-4c9f-9406-05f38f8e2523",
                      "parentUUID": "6ab829b5-a772-4eb6-a197-ec6617516a1e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4a50ce53-1f3d-4c9f-9406-05f38f8e2523"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a7bede2d-002a-46fa-b169-ed1e05182000",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "92cce7fb-abfc-4be8-bbfc-880f125e4df3",
                      "parentUUID": "a7bede2d-002a-46fa-b169-ed1e05182000",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "92cce7fb-abfc-4be8-bbfc-880f125e4df3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "027fc089-fd48-416d-8845-9c7dca2162a7",
                  "title": "test post test descriptor with not exixsting idsku",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a bad test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test post test descriptor with not exixsting idsku Creating a bad test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/testDescriptor')\n.send()\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "cbd364aa-3b2b-470e-b5ca-bc7135399a83",
                      "parentUUID": "027fc089-fd48-416d-8845-9c7dca2162a7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cbd364aa-3b2b-470e-b5ca-bc7135399a83"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1b875df4-22b7-4f31-a8d7-c16903bf14d5",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "26b7997d-53f9-442b-bf00-fb53944da863",
                      "parentUUID": "1b875df4-22b7-4f31-a8d7-c16903bf14d5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "26b7997d-53f9-442b-bf00-fb53944da863"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ea7d78d8-613c-47cc-92e0-d71d284053c7",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b88ce978-d8f7-4e7f-89cb-22b8fe65f0c1",
                      "parentUUID": "ea7d78d8-613c-47cc-92e0-d71d284053c7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b88ce978-d8f7-4e7f-89cb-22b8fe65f0c1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "97fb84b7-1e3d-4aa5-9ccd-9d3721d27328",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "07675f64-15b6-4eaf-86d3-e5880d90be1a",
                      "parentUUID": "97fb84b7-1e3d-4aa5-9ccd-9d3721d27328",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "07675f64-15b6-4eaf-86d3-e5880d90be1a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "65c763f5-7211-428c-92c4-4f9d57279b79",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "577e596f-3d41-4d0e-9a50-056b5fbe0584",
                      "parentUUID": "65c763f5-7211-428c-92c4-4f9d57279b79",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "577e596f-3d41-4d0e-9a50-056b5fbe0584"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c6236657-0c3e-4e34-b4fc-8cdce94fef4d",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "6e3772bc-7aa3-4457-9f7f-622a9a8e8c35",
                      "parentUUID": "c6236657-0c3e-4e34-b4fc-8cdce94fef4d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6e3772bc-7aa3-4457-9f7f-622a9a8e8c35"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c8592fe3-2fab-46c6-a0e1-4523764a56d8",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1904585c-72a3-4646-b2ff-1b8ccec91c0c",
                      "parentUUID": "c8592fe3-2fab-46c6-a0e1-4523764a56d8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1904585c-72a3-4646-b2ff-1b8ccec91c0c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "06725dd0-ebbf-4a9a-901d-93ce399a7d32",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "020b024c-063c-4d65-8e33-5715a538dadd",
                      "parentUUID": "06725dd0-ebbf-4a9a-901d-93ce399a7d32",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "020b024c-063c-4d65-8e33-5715a538dadd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "64553a80-3817-4d35-8cf0-e9cabf9e4216",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6cc1f351-d199-424a-902b-d5f39e04e2dd",
                      "parentUUID": "64553a80-3817-4d35-8cf0-e9cabf9e4216",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6cc1f351-d199-424a-902b-d5f39e04e2dd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f2f3c1ba-c44a-47c5-82a8-3f9663c8023a",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e7019960-38eb-4f2d-b4b2-d0f45a25d72c",
                      "parentUUID": "f2f3c1ba-c44a-47c5-82a8-3f9663c8023a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e7019960-38eb-4f2d-b4b2-d0f45a25d72c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a5984dbf-4011-4444-b2f6-4eef7b925276",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    res.body.should.be.a('array');\n    agent.put('/api/testDescriptor/'+10000)\n    .send()\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));               \n});",
                      "err": {},
                      "uuid": "70cba4ff-bb3c-435d-a646-7fa9479733a3",
                      "parentUUID": "a5984dbf-4011-4444-b2f6-4eef7b925276",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "70cba4ff-bb3c-435d-a646-7fa9479733a3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ed2da8dc-a01e-4ecd-b624-5cfd3230cde6",
                  "title": "delete /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "151e6dbb-1205-4544-ab55-4a93cd8b6f21",
                      "parentUUID": "ed2da8dc-a01e-4ecd-b624-5cfd3230cde6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "151e6dbb-1205-4544-ab55-4a93cd8b6f21"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "17343867-42af-4702-81de-594bc1ed4a52",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "991f7206-0be3-4c3a-bb52-34e34f73b16e",
                      "parentUUID": "17343867-42af-4702-81de-594bc1ed4a52",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "991f7206-0be3-4c3a-bb52-34e34f73b16e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4c77a294-9ffa-442e-b633-c254fce0ea4a",
                  "title": "delete /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "393e4638-7dbe-4ce1-8cb1-c457d8231471",
                      "parentUUID": "4c77a294-9ffa-442e-b633-c254fce0ea4a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "393e4638-7dbe-4ce1-8cb1-c457d8231471"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b4e1e28c-f9ee-4498-b34c-18fe55fc8e93",
              "title": "Test TestResult CRUD",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "721efca5-c3f1-487d-97c5-ffc335635ea4",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0ff6bb1a-7fdd-497e-abba-20a1594e7ba3",
                      "parentUUID": "721efca5-c3f1-487d-97c5-ffc335635ea4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0ff6bb1a-7fdd-497e-abba-20a1594e7ba3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "af9addad-3d94-485b-8700-65a00271b571",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "d8134a16-9a35-4700-b1f7-e131ca66f6d1",
                      "parentUUID": "af9addad-3d94-485b-8700-65a00271b571",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d8134a16-9a35-4700-b1f7-e131ca66f6d1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4ca6e94d-29bd-483b-b077-e4a0af7cf162",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "5834cdc1-b11e-45e5-aa1b-245d439213cd",
                      "parentUUID": "4ca6e94d-29bd-483b-b077-e4a0af7cf162",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5834cdc1-b11e-45e5-aa1b-245d439213cd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "59bca216-4d84-4815-aacf-a39e416e3a68",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ae00f908-f725-48e6-805b-4a583dbd4aa7",
                      "parentUUID": "59bca216-4d84-4815-aacf-a39e416e3a68",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ae00f908-f725-48e6-805b-4a583dbd4aa7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "685930d1-8aff-46f4-a8e2-77e5c37e59f6",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "168deb89-d41c-4cad-b349-4a1e8d59227c",
                      "parentUUID": "685930d1-8aff-46f4-a8e2-77e5c37e59f6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "168deb89-d41c-4cad-b349-4a1e8d59227c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c9140ab9-9ea7-4cad-80fe-54e88d6a7763",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7392a646-1611-461e-9d86-cf1f44843bbf",
                      "parentUUID": "c9140ab9-9ea7-4cad-80fe-54e88d6a7763",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7392a646-1611-461e-9d86-cf1f44843bbf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "707eb5c9-3167-4cd7-80a1-f30c19a95659",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "484a401c-b178-4e1c-9b13-aae13766f733",
                      "parentUUID": "707eb5c9-3167-4cd7-80a1-f30c19a95659",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "484a401c-b178-4e1c-9b13-aae13766f733"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5accf396-e941-40b2-9491-db73cae73fad",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "06a1da88-0f27-4973-af4d-ad4637f3f4c9",
                      "parentUUID": "5accf396-e941-40b2-9491-db73cae73fad",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "06a1da88-0f27-4973-af4d-ad4637f3f4c9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "209dc443-e634-483f-aa89-1e717a763d1b",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3d553b04-9e41-4a26-9d49-455c2749f6d5",
                      "parentUUID": "209dc443-e634-483f-aa89-1e717a763d1b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3d553b04-9e41-4a26-9d49-455c2749f6d5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7200dec9-5761-4e28-bcd3-95f8e075a4ce",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "de2c43ad-f4a1-4fbc-99d7-f11b9febaf52",
                      "parentUUID": "7200dec9-5761-4e28-bcd3-95f8e075a4ce",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "de2c43ad-f4a1-4fbc-99d7-f11b9febaf52"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4d9d4d60-506b-4cbf-8ea1-b28f6d9d56cc",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2761521d-c6e3-4c78-969b-74e96c657f2c",
                      "parentUUID": "4d9d4d60-506b-4cbf-8ea1-b28f6d9d56cc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2761521d-c6e3-4c78-969b-74e96c657f2c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1ebfcacd-cb23-4ab5-ad9b-f0636c2739a7",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4e3d481e-b186-419c-9039-c4c965439bac",
                      "parentUUID": "1ebfcacd-cb23-4ab5-ad9b-f0636c2739a7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4e3d481e-b186-419c-9039-c4c965439bac"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d2ee3481-4296-4e79-b682-0176c0b7a5bb",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.1 -> Add a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult FR 3.2.1 -> Add a quality test",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idtds = ids.getIdTestDescriptor();\nlet testResult = newTestResult(mytr.rfid, idtds[mytr.idTestDescriptor], mytr.Date, mytr.Result);\n//console.log(testResult);\nagent.post('/api/skuitems/testResult')\n.send(testResult)\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "cbab3c0b-b16d-411d-9f96-0a9b4f0866bb",
                      "parentUUID": "d2ee3481-4296-4e79-b682-0176c0b7a5bb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cbab3c0b-b16d-411d-9f96-0a9b4f0866bb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5fb47c46-07f2-47f5-b226-eeecd08dfe1c",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creates a new test Result for a certain sku item defined by RFID",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "0075d274-32a0-4ac8-937b-f152a3c03f95",
                      "parentUUID": "5fb47c46-07f2-47f5-b226-eeecd08dfe1c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0075d274-32a0-4ac8-937b-f152a3c03f95"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f114dd03-20cc-4e47-b22d-490900ca2ea0",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creates a new test Result for a certain sku item defined by RFID",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "42b7c359-d84d-41d8-b099-f55feefb37f5",
                      "parentUUID": "f114dd03-20cc-4e47-b22d-490900ca2ea0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "42b7c359-d84d-41d8-b099-f55feefb37f5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d92cb9aa-01d2-4c14-9f7a-32cfb3973ae3",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a7330410-2e32-4e8e-b7a0-a1fefe063da6",
                      "parentUUID": "d92cb9aa-01d2-4c14-9f7a-32cfb3973ae3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a7330410-2e32-4e8e-b7a0-a1fefe063da6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3f390163-9803-4870-8e1c-e80378b42020",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "64b16f69-b88e-4850-a5ae-9303c527b8a0",
                      "parentUUID": "3f390163-9803-4870-8e1c-e80378b42020",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "64b16f69-b88e-4850-a5ae-9303c527b8a0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f1cac5a1-9ec2-4151-a68b-94011b3bf9a4",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b39745d0-5a31-4122-87a8-493a7f3136c8",
                      "parentUUID": "f1cac5a1-9ec2-4151-a68b-94011b3bf9a4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b39745d0-5a31-4122-87a8-493a7f3136c8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c6722acb-5e77-49d9-809a-82f0dac44b59",
                  "title": " get /api/skuitems/:rfid/testResults/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get a specific test result with the rfid and id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults/:id Get a specific test result with the rfid and id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    //console.log(res.body[0]);\n    agent.get('/api/skuitems/'+rfid+'/testResults/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "9ee5556e-623a-46dd-bc4b-8b96b4747db4",
                      "parentUUID": "c6722acb-5e77-49d9-809a-82f0dac44b59",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9ee5556e-623a-46dd-bc4b-8b96b4747db4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c771f290-249a-4051-9837-0116c2b10c52",
                  "title": " get /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get a specific test result with the rfid and id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResult/:id Get a specific test result with the rfid and id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let alltdids = ids.getIdTestDescriptor();\n    console.log(alltdids);\n    agent.get('/api/skuitems/'+rfid+'/testResult/'+alltdids[0])\n    .then(function(res2){\n        console.log(res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "89d300f9-3ce9-4f39-bbd5-82d5c44baa1b",
                      "parentUUID": "c771f290-249a-4051-9837-0116c2b10c52",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "89d300f9-3ce9-4f39-bbd5-82d5c44baa1b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a6c2a99d-4034-4300-9aa2-a8613bb52b5f",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.2 -> Modify a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id FR 3.2.2 -> Modify a quality test",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    console.log(\"this is it\", res.body);\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        console.log(\"I'm heeeeereeee\", res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "60b424ae-42f6-4ac7-8cee-2308e59136ad",
                      "parentUUID": "a6c2a99d-4034-4300-9aa2-a8613bb52b5f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "60b424ae-42f6-4ac7-8cee-2308e59136ad"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "37963f52-9bc2-4d9f-bb55-4bf96c7f967e",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a test results given its rfid and id and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "c4ea5b58-1878-46b3-a0ba-92dc893fafb1",
                      "parentUUID": "37963f52-9bc2-4d9f-bb55-4bf96c7f967e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c4ea5b58-1878-46b3-a0ba-92dc893fafb1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "007d8baa-c566-4c00-aed4-208c13e1f133",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a test results given its rfid and id and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "6e316661-eb74-4915-a4b2-b99df61c5cb7",
                      "parentUUID": "007d8baa-c566-4c00-aed4-208c13e1f133",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6e316661-eb74-4915-a4b2-b99df61c5cb7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "958bfde5-dd65-4617-9ef2-1382935f1775",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "126bd610-a224-42f1-bd77-b4717437444f",
                      "parentUUID": "958bfde5-dd65-4617-9ef2-1382935f1775",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "126bd610-a224-42f1-bd77-b4717437444f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d3104848-49dc-4833-8253-23c0a29f5bdd",
                  "title": " delete /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.3 -> Delete a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  delete /api/skuitems/:rfid/testResult/:id FR 3.2.3 -> Delete a quality test",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    // console.log(res.body);\n    agent.delete('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "1d29f653-f3bc-45a3-8f27-162b248a89dc",
                      "parentUUID": "d3104848-49dc-4833-8253-23c0a29f5bdd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1d29f653-f3bc-45a3-8f27-162b248a89dc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d65819ce-5703-4a38-a09d-b09ab1d143e9",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0ef000c8-2b5b-4f08-8673-14263e7482e5",
                      "parentUUID": "d65819ce-5703-4a38-a09d-b09ab1d143e9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0ef000c8-2b5b-4f08-8673-14263e7482e5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7fefc882-eb67-443a-b007-0346c9ba64b5",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "f3b5b7a6-46c2-4c30-ad5f-ec79b561633a",
                      "parentUUID": "7fefc882-eb67-443a-b007-0346c9ba64b5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f3b5b7a6-46c2-4c30-ad5f-ec79b561633a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a0424891-5fad-40c5-8ca6-4a4551e43627",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "13459ae9-f128-455a-a05c-e82532d2edca",
                      "parentUUID": "a0424891-5fad-40c5-8ca6-4a4551e43627",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "13459ae9-f128-455a-a05c-e82532d2edca"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "85bcdfe8-3259-4aad-823e-0e2808324d0a",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "32fc7b25-36ce-4266-a54c-ff57553b339c",
                      "parentUUID": "85bcdfe8-3259-4aad-823e-0e2808324d0a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "32fc7b25-36ce-4266-a54c-ff57553b339c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a9f49300-1b74-4d9a-b2b6-57d2a8d508a6",
              "title": "Test user CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "d5309cf4-f7f2-45ab-98c9-f72af44fbd3c",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c73c72be-ad29-4d36-b826-d609fe9cb82d",
                      "parentUUID": "d5309cf4-f7f2-45ab-98c9-f72af44fbd3c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c73c72be-ad29-4d36-b826-d609fe9cb82d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6800e194-f301-48e1-84c9-ea5cfa9a861f",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d856b51f-c6f7-46d5-9cbf-7a29a21077f2",
                      "parentUUID": "6800e194-f301-48e1-84c9-ea5cfa9a861f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d856b51f-c6f7-46d5-9cbf-7a29a21077f2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2460a34d-f572-40fd-a011-5d2fbf76bd34",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fba537e8-33a3-4aae-8150-a1b0545d9feb",
                      "parentUUID": "2460a34d-f572-40fd-a011-5d2fbf76bd34",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fba537e8-33a3-4aae-8150-a1b0545d9feb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4e06a260-32e2-471c-b895-7b3ba653b6b9",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8cd02a43-6c78-4025-aa2e-5ab5d58cff12",
                      "parentUUID": "4e06a260-32e2-471c-b895-7b3ba653b6b9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8cd02a43-6c78-4025-aa2e-5ab5d58cff12"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "029a0794-a144-4fc1-87fd-5218df10454e",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 58,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "68dcfc3e-c833-4dac-8c46-45200f2d8745",
                      "parentUUID": "029a0794-a144-4fc1-87fd-5218df10454e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "68dcfc3e-c833-4dac-8c46-45200f2d8745"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 58,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f05e38e9-78f8-4850-8aca-c19ed678a8ee",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "67128ed0-b426-4a09-8a6f-f205f0b79426",
                      "parentUUID": "f05e38e9-78f8-4850-8aca-c19ed678a8ee",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "67128ed0-b426-4a09-8a6f-f205f0b79426"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "009e66fd-8eac-4d1e-b66a-d04c25be1f95",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5472b6df-fd6f-42bb-8939-13e78740a33c",
                      "parentUUID": "009e66fd-8eac-4d1e-b66a-d04c25be1f95",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5472b6df-fd6f-42bb-8939-13e78740a33c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c24b37ed-5a7d-4a85-a3cf-7c2e3b9b3ada",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ec2a19ef-d97e-4807-b74d-c0bd674f8186",
                      "parentUUID": "c24b37ed-5a7d-4a85-a3cf-7c2e3b9b3ada",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ec2a19ef-d97e-4807-b74d-c0bd674f8186"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "78b5c003-2c50-4ca8-9952-41817d804093",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c649f679-c7d2-4926-9bc2-79ce15202a59",
                      "parentUUID": "78b5c003-2c50-4ca8-9952-41817d804093",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c649f679-c7d2-4926-9bc2-79ce15202a59"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b7a7a053-5bf0-4439-b213-ced40befb748",
              "title": "Test RestockOrder CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "3ea8889a-03da-4c02-abe3-177398e96717",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "20ccfac8-6861-4936-9fc1-4a553bb01704",
                      "parentUUID": "3ea8889a-03da-4c02-abe3-177398e96717",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "20ccfac8-6861-4936-9fc1-4a553bb01704"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "89a38222-f64a-4695-8d96-c0bb4dd252e3",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "8ae194ba-499a-4b3c-81f7-bb8930a53c7a",
                      "parentUUID": "89a38222-f64a-4695-8d96-c0bb4dd252e3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8ae194ba-499a-4b3c-81f7-bb8930a53c7a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "17d3fbfd-c112-4e32-8c4c-97933a36431f",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "be25592c-1dff-4de3-840a-984426183a74",
                      "parentUUID": "17d3fbfd-c112-4e32-8c4c-97933a36431f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "be25592c-1dff-4de3-840a-984426183a74"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8d61c27e-6502-4263-94ff-420d4409a8da",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a86b2dd6-2798-4bf9-925b-919e0191375b",
                      "parentUUID": "8d61c27e-6502-4263-94ff-420d4409a8da",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a86b2dd6-2798-4bf9-925b-919e0191375b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "64e3b9ca-7840-4f22-9c00-5e18a65a0539",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "88da8ed8-f23e-4f41-be22-aae08cb08bc3",
                      "parentUUID": "64e3b9ca-7840-4f22-9c00-5e18a65a0539",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "88da8ed8-f23e-4f41-be22-aae08cb08bc3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ad826995-1a75-411e-a400-b57f82d980d5",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2d4d9d44-8000-49e7-bfc0-a34e21a8cc85",
                      "parentUUID": "ad826995-1a75-411e-a400-b57f82d980d5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2d4d9d44-8000-49e7-bfc0-a34e21a8cc85"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1a8de84d-8ae4-48a6-b869-6c7208c68841",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "321439ff-3450-4381-97f0-d7a00be9fdb6",
                      "parentUUID": "1a8de84d-8ae4-48a6-b869-6c7208c68841",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "321439ff-3450-4381-97f0-d7a00be9fdb6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e0fa5f2b-c0e3-456c-bbcf-760f868f0724",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 58,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b8d22ce8-e5b9-4f5a-b982-1966980f5175",
                      "parentUUID": "e0fa5f2b-c0e3-456c-bbcf-760f868f0724",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b8d22ce8-e5b9-4f5a-b982-1966980f5175"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 58,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0ba83e57-8311-48c7-9c24-1bd7a81d2f67",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 58,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7b9ec62f-1829-4efa-9e78-659e8a6f296e",
                      "parentUUID": "0ba83e57-8311-48c7-9c24-1bd7a81d2f67",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7b9ec62f-1829-4efa-9e78-659e8a6f296e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 58,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d988a832-f116-4baa-a616-53fb262f5c45",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "dc6e8eb4-13b7-4f3c-a1df-a6de10dc4966",
                      "parentUUID": "d988a832-f116-4baa-a616-53fb262f5c45",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "dc6e8eb4-13b7-4f3c-a1df-a6de10dc4966"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "769598be-2c7c-410b-b796-0ae0fd404442",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "821c02f6-f1d3-4750-973a-800831164f42",
                      "parentUUID": "769598be-2c7c-410b-b796-0ae0fd404442",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "821c02f6-f1d3-4750-973a-800831164f42"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d5bcb825-7f77-4a5b-a2fb-5d8ce1b4fcbc",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "36a5a6f3-ab4d-454f-b3ba-4f472a8b2047",
                      "parentUUID": "d5bcb825-7f77-4a5b-a2fb-5d8ce1b4fcbc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "36a5a6f3-ab4d-454f-b3ba-4f472a8b2047"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4d913904-fc0e-4f74-b623-a2b8cabcdeaa",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "06b938f5-988e-47f7-ad76-c0e39989ce7b",
                      "parentUUID": "4d913904-fc0e-4f74-b623-a2b8cabcdeaa",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "06b938f5-988e-47f7-ad76-c0e39989ce7b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "46a6ce32-dba2-46c1-8927-34b6ed470efb",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "9f83691a-bc56-48bc-9f1a-28cf221dd7f9",
                      "parentUUID": "46a6ce32-dba2-46c1-8927-34b6ed470efb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9f83691a-bc56-48bc-9f1a-28cf221dd7f9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ba25749f-6781-4c8f-a1da-51430b5ad0e1",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 14,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "cf739479-d741-4cb2-a743-4cb58b2b21bd",
                      "parentUUID": "ba25749f-6781-4c8f-a1da-51430b5ad0e1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cf739479-d741-4cb2-a743-4cb58b2b21bd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 14,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d8b4fbe6-3772-4063-a077-3f7a471a9813",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a99c676b-401f-4de8-bb5c-f99cf80a0293",
                      "parentUUID": "d8b4fbe6-3772-4063-a077-3f7a471a9813",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a99c676b-401f-4de8-bb5c-f99cf80a0293"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ea9f2af1-8031-4b60-83d9-80a3d0df7aec",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet firstSupplierId;\nagent.get('/api/suppliers')\n.then(function(res){\n    firstSupplierId = res.body[0].id;\n    agent.post('/api/restockOrder')\n    .send(myrestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "c0617ce4-d781-425f-9d3b-8aaaef21821d",
                      "parentUUID": "ea9f2af1-8031-4b60-83d9-80a3d0df7aec",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c0617ce4-d781-425f-9d3b-8aaaef21821d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "01c4cc60-bf48-4979-85ba-cf3866c72131",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "579c7bcf-630e-406e-bdef-da72e75a5815",
                      "parentUUID": "01c4cc60-bf48-4979-85ba-cf3866c72131",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "579c7bcf-630e-406e-bdef-da72e75a5815"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "74f1d35e-cad1-4c05-8ae0-7826073de760",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "092e63d8-8842-42fc-b341-3f25e5325655",
                      "parentUUID": "74f1d35e-cad1-4c05-8ae0-7826073de760",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "092e63d8-8842-42fc-b341-3f25e5325655"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1d76f367-924a-47b4-8859-c8c585a11d45",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "4c59c36d-789c-4ede-b61b-9fea715913c0",
                      "parentUUID": "1d76f367-924a-47b4-8859-c8c585a11d45",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4c59c36d-789c-4ede-b61b-9fea715913c0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1fa2c48f-4db8-49c3-8aa2-0bb28db29a42",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "6f50405a-9462-4ea5-b860-8f5151183e07",
                      "parentUUID": "1fa2c48f-4db8-49c3-8aa2-0bb28db29a42",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6f50405a-9462-4ea5-b860-8f5151183e07"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "772c66eb-60aa-4e06-949b-830cf4e72123",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "75651158-d5f7-473a-85f3-f70e433028a9",
                      "parentUUID": "772c66eb-60aa-4e06-949b-830cf4e72123",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "75651158-d5f7-473a-85f3-f70e433028a9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "27847f52-df87-4dcf-963e-5076070d4e29",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fb7d62d0-318c-49fc-97da-f6c4a6364b9f",
                      "parentUUID": "27847f52-df87-4dcf-963e-5076070d4e29",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fb7d62d0-318c-49fc-97da-f6c4a6364b9f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d6a5573a-1116-4747-97fa-0d62a3f3b70e",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "3db80ed0-8e91-4784-b27b-09777fcfdcb7",
                      "parentUUID": "d6a5573a-1116-4747-97fa-0d62a3f3b70e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3db80ed0-8e91-4784-b27b-09777fcfdcb7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d2d46b57-1089-4ca9-833d-5cd77eaa7e50",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a60aec9a-080b-4c37-b980-3060098edcb5",
                      "parentUUID": "d2d46b57-1089-4ca9-833d-5cd77eaa7e50",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a60aec9a-080b-4c37-b980-3060098edcb5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9f5493f2-19e6-4b55-95c4-faabbf97136e",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":allskuitems})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "ae10279c-4c6b-4da3-9610-be5d2549a641",
                      "parentUUID": "9f5493f2-19e6-4b55-95c4-faabbf97136e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ae10279c-4c6b-4da3-9610-be5d2549a641"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6d146454-cd00-4447-97a3-73b0912fee59",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send(null)\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "a67117b1-4bb7-4aac-b02e-00560b44d8d5",
                      "parentUUID": "6d146454-cd00-4447-97a3-73b0912fee59",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a67117b1-4bb7-4aac-b02e-00560b44d8d5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a840d4a3-1819-4d87-8bc7-18ab7d9a0d30",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "77c7e60f-d457-46d6-8a88-a6b306654898",
                      "parentUUID": "a840d4a3-1819-4d87-8bc7-18ab7d9a0d30",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "77c7e60f-d457-46d6-8a88-a6b306654898"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0e479c7c-d0e4-46c1-83c6-26678e2f449f",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "989d93fd-7d52-44d1-b3b6-cc141315e52f",
                      "parentUUID": "0e479c7c-d0e4-46c1-83c6-26678e2f449f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "989d93fd-7d52-44d1-b3b6-cc141315e52f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a70d45d5-d9c8-4faf-9eeb-d084ec8b8a3c",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "e00ab3a5-5453-4d06-8a93-0983bbab1599",
                      "parentUUID": "a70d45d5-d9c8-4faf-9eeb-d084ec8b8a3c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e00ab3a5-5453-4d06-8a93-0983bbab1599"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3ba52873-2d7d-4e46-bd91-4133b252108b",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 10000;\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2021/12/29\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "7a3870dd-5fff-43db-8dd6-12791031ce6c",
                      "parentUUID": "3ba52873-2d7d-4e46-bd91-4133b252108b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7a3870dd-5fff-43db-8dd6-12791031ce6c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d0543da3-b43c-4577-ba71-4f7213ac18d4",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "1e85d7cd-f221-4604-9a80-327169a221f2",
                      "parentUUID": "d0543da3-b43c-4577-ba71-4f7213ac18d4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1e85d7cd-f221-4604-9a80-327169a221f2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b3ad00d5-fa59-4916-915a-ca614fa29ac0",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "53e5c185-38ef-45ed-a5cf-51834a488900",
                      "parentUUID": "b3ad00d5-fa59-4916-915a-ca614fa29ac0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "53e5c185-38ef-45ed-a5cf-51834a488900"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0215b3a1-36db-4ec1-add5-2c819adf6d68",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "ecffcb72-da3a-44fc-821f-afa4887ad9b1",
                      "parentUUID": "0215b3a1-36db-4ec1-add5-2c819adf6d68",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ecffcb72-da3a-44fc-821f-afa4887ad9b1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d68ddf67-9381-401c-8944-38469d87ee46",
              "title": "Test ReturnOrder CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "490ee6f3-76b6-499e-bda0-79b77edf81a4",
                  "title": "Removing all return orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features Removing all return orders Getting and removing",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/returnOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8ce090ed-685b-49af-ba86-d0a6b4f7e093",
                      "parentUUID": "490ee6f3-76b6-499e-bda0-79b77edf81a4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8ce090ed-685b-49af-ba86-d0a6b4f7e093"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "863ce14a-44de-49f5-b2be-c5dbff2f27e3",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "1348a239-d305-4c62-8fd6-1665f13f6d75",
                      "parentUUID": "863ce14a-44de-49f5-b2be-c5dbff2f27e3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1348a239-d305-4c62-8fd6-1665f13f6d75"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0dc3dd6b-648b-41e8-a33f-77f53fd599a5",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "7877327d-4d65-4472-9d90-d6ced9f4db93",
                      "parentUUID": "0dc3dd6b-648b-41e8-a33f-77f53fd599a5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7877327d-4d65-4472-9d90-d6ced9f4db93"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0f4aba06-fb9c-480c-a00e-087d19e038d2",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "d1202d86-b644-423f-b756-5ee43b94c03a",
                      "parentUUID": "0f4aba06-fb9c-480c-a00e-087d19e038d2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d1202d86-b644-423f-b756-5ee43b94c03a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "30d5e669-0ff4-46f1-b898-1760ecd9d968",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "29d3a40d-c986-40f4-8bc7-01bc9c75ea98",
                      "parentUUID": "30d5e669-0ff4-46f1-b898-1760ecd9d968",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "29d3a40d-c986-40f4-8bc7-01bc9c75ea98"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "015dff2d-06f2-4dbb-86b7-41e823f53f44",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fa45e4be-d0f4-4126-8bd6-d3207a8d1a6d",
                      "parentUUID": "015dff2d-06f2-4dbb-86b7-41e823f53f44",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fa45e4be-d0f4-4126-8bd6-d3207a8d1a6d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b5afa40d-6e60-4eea-8187-648d63e0b0a5",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d07dcc2e-3509-4bf4-be15-9c5ecfe70b46",
                      "parentUUID": "b5afa40d-6e60-4eea-8187-648d63e0b0a5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d07dcc2e-3509-4bf4-be15-9c5ecfe70b46"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ea4cb752-563e-423a-b6a0-eac771b5a255",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3e936561-7434-4d42-b3f2-0bccc7ab96bd",
                      "parentUUID": "ea4cb752-563e-423a-b6a0-eac771b5a255",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3e936561-7434-4d42-b3f2-0bccc7ab96bd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cd080094-b8d7-4982-85c8-50cb0760db73",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 60,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d876ce03-17e7-4f2b-aee7-dc8536704972",
                      "parentUUID": "cd080094-b8d7-4982-85c8-50cb0760db73",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d876ce03-17e7-4f2b-aee7-dc8536704972"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 60,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5ba3611d-ea60-452d-ae93-b0d7b6aa1b0d",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f4221acf-5146-4889-9ac0-a2531a52dfdd",
                      "parentUUID": "5ba3611d-ea60-452d-ae93-b0d7b6aa1b0d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f4221acf-5146-4889-9ac0-a2531a52dfdd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "81420da3-1e39-4ace-8a7c-88e053cd7339",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "41bfec24-f4c8-4773-9d50-b8c4b95896f8",
                      "parentUUID": "81420da3-1e39-4ace-8a7c-88e053cd7339",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "41bfec24-f4c8-4773-9d50-b8c4b95896f8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "dbcaf726-07e9-4c1c-a753-59dc1601d500",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "84a004df-ee52-4380-9c5a-a6095e6aa387",
                      "parentUUID": "dbcaf726-07e9-4c1c-a753-59dc1601d500",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "84a004df-ee52-4380-9c5a-a6095e6aa387"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c18d0479-6e49-48bc-8b5e-5775ee45bc43",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "47b9bae5-a18f-44a8-82bd-27e9ead5294c",
                      "parentUUID": "c18d0479-6e49-48bc-8b5e-5775ee45bc43",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "47b9bae5-a18f-44a8-82bd-27e9ead5294c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7a1fa0d4-bc04-48e2-9bff-e7ee8f5c2511",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "d1c907f3-19c6-4205-b45d-034b4a2b6e72",
                      "parentUUID": "7a1fa0d4-bc04-48e2-9bff-e7ee8f5c2511",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d1c907f3-19c6-4205-b45d-034b4a2b6e72"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "32aa932b-8d1a-4320-8a43-137af70b056d",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "d5d959c1-4321-450a-a5ea-3914a1b4e535",
                      "parentUUID": "32aa932b-8d1a-4320-8a43-137af70b056d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d5d959c1-4321-450a-a5ea-3914a1b4e535"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "40dfba07-59af-49e7-aefe-a846a2a52e22",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "969839b8-c232-4fd1-ba05-64bc8e33e2c1",
                      "parentUUID": "40dfba07-59af-49e7-aefe-a846a2a52e22",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "969839b8-c232-4fd1-ba05-64bc8e33e2c1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "be57f079-d138-4fb3-ac64-0e11971b5e96",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "60d59f4d-a7b3-4eeb-a227-e8513b07014a",
                      "parentUUID": "be57f079-d138-4fb3-ac64-0e11971b5e96",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "60d59f4d-a7b3-4eeb-a227-e8513b07014a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d79b5016-29ac-42be-8d3c-a5fcb727409b",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "de94fa72-a724-4720-b07d-b1b201715105",
                      "parentUUID": "d79b5016-29ac-42be-8d3c-a5fcb727409b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "de94fa72-a724-4720-b07d-b1b201715105"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3276ec36-5361-4cc5-969e-843910b1641d",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "6abb7f15-ff90-4853-8fb0-61072688e05f",
                      "parentUUID": "3276ec36-5361-4cc5-969e-843910b1641d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6abb7f15-ff90-4853-8fb0-61072688e05f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ac31be31-4f08-48ea-851f-bcfa58c54230",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "99b21db6-babb-44ce-8482-d9eae1e463fe",
                      "parentUUID": "ac31be31-4f08-48ea-851f-bcfa58c54230",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "99b21db6-babb-44ce-8482-d9eae1e463fe"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8b645f6a-84f1-4256-8c4a-049d6b599581",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d163ac9f-6c43-4931-828b-0bd28a529f5b",
                      "parentUUID": "8b645f6a-84f1-4256-8c4a-049d6b599581",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d163ac9f-6c43-4931-828b-0bd28a529f5b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "464cd36a-a6ed-4b80-bc70-5a38fa693409",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "73c5679b-0db5-4bd0-8dca-5b1891ef301c",
                      "parentUUID": "464cd36a-a6ed-4b80-bc70-5a38fa693409",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "73c5679b-0db5-4bd0-8dca-5b1891ef301c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0392cc05-8ce3-43b5-9141-aae0359aa18e",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ed18ff20-2c60-45d7-910b-476491e1effe",
                      "parentUUID": "0392cc05-8ce3-43b5-9141-aae0359aa18e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ed18ff20-2c60-45d7-910b-476491e1effe"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "61d4fdf8-a3bc-4562-8f7a-ef1294462f64",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/returnOrder')\n.send(myretord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "84a64e07-0846-4e32-9f07-f4925e7eb4e7",
                      "parentUUID": "61d4fdf8-a3bc-4562-8f7a-ef1294462f64",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "84a64e07-0846-4e32-9f07-f4925e7eb4e7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a93c48db-a1a1-4bcb-a99c-1d771248cd46",
                  "title": " get /api/returnOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all return orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders  get all return orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idrestockorders = ids.getIdRestockOrdersIssued();\n    let idretord = [];\n    res.body.length.should.be.eql(myretord.length);\n    for(let i = 0; i<res.body.length; i++){\n        idretord[i] = res.body[i].id;\n        res.body[i].returnDate.should.equal(myretord[i].returnDate);\n        res.body[i].restockOrderId.should.equal(idrestockorders[myretord[i].restockOrderId]);\n    }\n    ids.setIdReturnOrders(idretord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a8a6b6e5-b0b3-4ad1-a4f0-2d42de9cbedb",
                      "parentUUID": "a93c48db-a1a1-4bcb-a99c-1d771248cd46",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a8a6b6e5-b0b3-4ad1-a4f0-2d42de9cbedb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "68bcd14e-0944-4bab-8682-2da984e41fab",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsret = ids.getIdReturnOrders();\n//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+idsret[id])\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.returnDate.should.equal(myretord.returnDate);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f63ff2a6-a928-4e8f-b6a9-c48c6b0a00a0",
                      "parentUUID": "68bcd14e-0944-4bab-8682-2da984e41fab",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f63ff2a6-a928-4e8f-b6a9-c48c6b0a00a0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1d0c6013-bd7a-44bb-9d34-68c987c5e24f",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6ad9b0e7-1436-4ba7-a2f9-d16ac7d8fcc7",
                      "parentUUID": "1d0c6013-bd7a-44bb-9d34-68c987c5e24f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6ad9b0e7-1436-4ba7-a2f9-d16ac7d8fcc7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "daedc81c-9f09-4b90-b2c0-f5b2d1bceab5",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c58e39e8-c615-488e-9997-6de32fca5dd8",
                      "parentUUID": "daedc81c-9f09-4b90-b2c0-f5b2d1bceab5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c58e39e8-c615-488e-9997-6de32fca5dd8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9596c23c-6cfc-4e53-b994-e7e3305afb46",
              "title": "Test Internal Order CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "da53c731-f5d6-4522-b26f-056d7a4045de",
                  "title": "Removing all Internal Orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Interna Orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features Removing all Internal Orders Getting Interna Orders",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/internalOrders/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "114ae294-e151-47ac-b910-d2499c589d25",
                      "parentUUID": "da53c731-f5d6-4522-b26f-056d7a4045de",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "114ae294-e151-47ac-b910-d2499c589d25"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8873fc95-530c-4a41-a28c-95a946527e16",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "2b42973a-ea0f-4b93-9d1a-33575c104db8",
                      "parentUUID": "8873fc95-530c-4a41-a28c-95a946527e16",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2b42973a-ea0f-4b93-9d1a-33575c104db8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a4c1a484-a55b-41d5-99a8-ea6dd9f7ddf1",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "986290e3-d60c-48e2-9d19-701f5b8a5ad4",
                      "parentUUID": "a4c1a484-a55b-41d5-99a8-ea6dd9f7ddf1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "986290e3-d60c-48e2-9d19-701f5b8a5ad4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a6c89c55-e33d-40ba-bb87-ba85119e93f0",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "82a93d16-9d65-4230-b049-f85f21407023",
                      "parentUUID": "a6c89c55-e33d-40ba-bb87-ba85119e93f0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "82a93d16-9d65-4230-b049-f85f21407023"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6eb7c04c-29a3-491f-988b-8639df475026",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b962ede9-7b29-4181-b363-abee501562f7",
                      "parentUUID": "6eb7c04c-29a3-491f-988b-8639df475026",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b962ede9-7b29-4181-b363-abee501562f7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6bceea33-a832-4c88-a3e3-63f988274790",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3233c56d-6498-4ecb-9e04-2bba099a027c",
                      "parentUUID": "6bceea33-a832-4c88-a3e3-63f988274790",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3233c56d-6498-4ecb-9e04-2bba099a027c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c8657cec-87ec-447e-8d9b-fb06acf33722",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "99c32f24-1adb-4b73-b483-0a4cc59f14d1",
                      "parentUUID": "c8657cec-87ec-447e-8d9b-fb06acf33722",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "99c32f24-1adb-4b73-b483-0a4cc59f14d1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9a63ab45-872e-40b6-9e22-6ae10709d009",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0a6235df-4b01-4386-a3dc-3c459783c0a8",
                      "parentUUID": "9a63ab45-872e-40b6-9e22-6ae10709d009",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0a6235df-4b01-4386-a3dc-3c459783c0a8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "682d9ed7-ba11-48e6-9ca7-75ea6c60ef0b",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 14,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                      "err": {},
                      "uuid": "891e9f19-950d-4810-87e8-cab561448c84",
                      "parentUUID": "682d9ed7-ba11-48e6-9ca7-75ea6c60ef0b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "891e9f19-950d-4810-87e8-cab561448c84"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 14,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3f9c1144-e2be-4227-a35c-89f0a9718340",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 15,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                      "err": {},
                      "uuid": "440c0c0c-ced9-4f5b-a0b9-8a2ec6cb4095",
                      "parentUUID": "3f9c1144-e2be-4227-a35c-89f0a9718340",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "440c0c0c-ced9-4f5b-a0b9-8a2ec6cb4095"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 15,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5ac90efa-6e8c-4f19-bb13-c83d75e99d5a",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(currentInternalOrders[ith]);\nagent.post('/api/internalOrders')\n.send(intord)\n.then(function(res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "bc91b65e-7196-4198-b81c-ee7afb1e5bbb",
                      "parentUUID": "5ac90efa-6e8c-4f19-bb13-c83d75e99d5a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bc91b65e-7196-4198-b81c-ee7afb1e5bbb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "82025a81-fc67-4ab5-986a-65bdc3dcbbc8",
                  "title": " get /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all internal orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4dc5457b-019b-4612-94f4-589089409d43",
                      "parentUUID": "82025a81-fc67-4ab5-986a-65bdc3dcbbc8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4dc5457b-019b-4612-94f4-589089409d43"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bc0a0e03-7126-4542-ae55-1824bf77afa8",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "04b4b30e-cfea-42fa-8b93-29141f308278",
                      "parentUUID": "bc0a0e03-7126-4542-ae55-1824bf77afa8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "04b4b30e-cfea-42fa-8b93-29141f308278"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2c415036-a293-4cf9-9290-b26ffe5badde",
                  "title": " put /api/internalOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify the state of an IO",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "37277db7-0113-4e87-9a35-2231780fa4c6",
                      "parentUUID": "2c415036-a293-4cf9-9290-b26ffe5badde",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "37277db7-0113-4e87-9a35-2231780fa4c6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e2ce4227-94e6-4624-b669-1cc6f878924b",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0ec57cca-ae95-42f0-8b88-4341f4b5c6d3",
                      "parentUUID": "e2ce4227-94e6-4624-b669-1cc6f878924b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0ec57cca-ae95-42f0-8b88-4341f4b5c6d3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a0af9d17-f7cf-41dc-9cdd-6c7f13fab593",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersAccepted')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order accepted', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "aa698e40-af75-48a0-9ccd-1380c7a2c42a",
                      "parentUUID": "a0af9d17-f7cf-41dc-9cdd-6c7f13fab593",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "aa698e40-af75-48a0-9ccd-1380c7a2c42a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "46e12a34-02e7-4bf0-900f-762b66c3702c",
                  "title": " put /api/internalOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify the state of an IO",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                      "timedOut": false,
                      "duration": 5,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "ae61bd5a-77a4-4c1a-b368-0be4ef5bf44b",
                      "parentUUID": "46e12a34-02e7-4bf0-900f-762b66c3702c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ae61bd5a-77a4-4c1a-b368-0be4ef5bf44b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9bf03ef7-18af-46bb-b5c8-22ca05259558",
                  "title": " get /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all internal orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b4954e3b-bc9c-46a9-a129-38cc6523370e",
                      "parentUUID": "9bf03ef7-18af-46bb-b5c8-22ca05259558",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b4954e3b-bc9c-46a9-a129-38cc6523370e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d5ef0d31-dc6e-4e5b-b3ad-0aaec660da15",
              "title": "Test Item CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "77bb7f39-80c3-4a7c-af07-e2d2f3b1b186",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "35b03135-dc37-443c-8fe1-dc71947706b6",
                      "parentUUID": "77bb7f39-80c3-4a7c-af07-e2d2f3b1b186",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "35b03135-dc37-443c-8fe1-dc71947706b6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5db2850e-dbeb-4523-b712-c9b2b0588be5",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "2d923c86-edc4-42f7-97f2-05439913bb8d",
                      "parentUUID": "5db2850e-dbeb-4523-b712-c9b2b0588be5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2d923c86-edc4-42f7-97f2-05439913bb8d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5ff294a2-c587-495a-82a3-61d414c23b62",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2c9b45dd-b872-4e70-8658-98c9d271c3f7",
                      "parentUUID": "5ff294a2-c587-495a-82a3-61d414c23b62",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2c9b45dd-b872-4e70-8658-98c9d271c3f7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0344289f-ce30-4fe4-806e-b86533e36c3d",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3d7c39ad-15c3-49d5-b723-8b0eb5632f9c",
                      "parentUUID": "0344289f-ce30-4fe4-806e-b86533e36c3d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3d7c39ad-15c3-49d5-b723-8b0eb5632f9c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e4569347-47d5-4e6b-8c9d-b4e8c73d7ba5",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4ae73e5a-f77c-42d3-8463-ea8dca41df43",
                      "parentUUID": "e4569347-47d5-4e6b-8c9d-b4e8c73d7ba5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4ae73e5a-f77c-42d3-8463-ea8dca41df43"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "508cdac9-451a-4543-a60b-d5a4da52f500",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "73f4f579-b876-4596-95bd-6854f76a6ba6",
                      "parentUUID": "508cdac9-451a-4543-a60b-d5a4da52f500",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "73f4f579-b876-4596-95bd-6854f76a6ba6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "01b9c154-f876-477f-ae74-5bf7bf268d59",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "af1d072a-7328-4add-9898-86ee21bc6b38",
                      "parentUUID": "01b9c154-f876-477f-ae74-5bf7bf268d59",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "af1d072a-7328-4add-9898-86ee21bc6b38"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "35534724-04ef-4459-aa71-a0ccee28c5f4",
                  "title": "Removing all Items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features Removing all Items Getting Items",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "53df33d0-997b-4c71-a3fb-022c007f4d05",
                      "parentUUID": "35534724-04ef-4459-aa71-a0ccee28c5f4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "53df33d0-997b-4c71-a3fb-022c007f4d05"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bb526291-1ee2-4797-97ac-45e1a60de1b2",
                  "title": " get /api/items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/items Getting all items",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "24f03c95-2db1-4c26-a123-eeddf00e83bd",
                      "parentUUID": "bb526291-1ee2-4797-97ac-45e1a60de1b2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "24f03c95-2db1-4c26-a123-eeddf00e83bd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d11fcb56-26f1-486b-99a5-9a34e729e95f",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 58,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "325f7195-6c2e-48fb-9d5c-9d77a07dcf6d",
                      "parentUUID": "d11fcb56-26f1-486b-99a5-9a34e729e95f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "325f7195-6c2e-48fb-9d5c-9d77a07dcf6d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 58,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e76f5926-39f3-4ec8-ae41-a3882542f84c",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 58,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "64e66471-34f1-41fe-a789-52c4ceae276e",
                      "parentUUID": "e76f5926-39f3-4ec8-ae41-a3882542f84c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "64e66471-34f1-41fe-a789-52c4ceae276e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 58,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c5d03719-6c86-48ea-ac08-9130073cc4ac",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "99e49eb5-4a25-4595-b47e-8481bf1cec25",
                      "parentUUID": "c5d03719-6c86-48ea-ac08-9130073cc4ac",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "99e49eb5-4a25-4595-b47e-8481bf1cec25"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "08b707a3-e116-4dc1-b779-b4e78954c309",
                  "title": "post /api/item/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/item/ Adding item details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "63751db6-cacb-4919-9bf5-251f49d42af6",
                      "parentUUID": "08b707a3-e116-4dc1-b779-b4e78954c309",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "63751db6-cacb-4919-9bf5-251f49d42af6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ff098762-b585-4f21-b78a-6d467063b774",
                  "title": "post /api/item/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/item/ Adding item details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "12459426-366d-42f9-899d-2d18ec5bd26e",
                      "parentUUID": "ff098762-b585-4f21-b78a-6d467063b774",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "12459426-366d-42f9-899d-2d18ec5bd26e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f6464fcc-9f83-4795-b821-c54b6ff449e9",
                  "title": " get /api/items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/items Getting all items",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "e412f751-7008-4e88-b0e3-187ef80ef887",
                      "parentUUID": "f6464fcc-9f83-4795-b821-c54b6ff449e9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e412f751-7008-4e88-b0e3-187ef80ef887"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "585a50e3-fe08-4a4f-8101-651977f1d367",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+itemid)\n.then(r => {\n    let idskus = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(r.status, expCode);\n    if (r.status == 200) {\n        r.body.should.be.a('object');\n        r.body.id.should.equal(itemid);\n        r.body.description.should.equal(myexpitem.description);\n        r.body.price.should.equal(myexpitem.price);\n        r.body.SKUId.should.equal(idskus[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "d495d0c3-c478-4759-a91d-d95df2eafdf6",
                      "parentUUID": "585a50e3-fe08-4a4f-8101-651977f1d367",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d495d0c3-c478-4759-a91d-d95df2eafdf6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4793c309-08a0-40fb-b6c0-d20b7b5bc83b",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "07510e20-8d8a-44b9-84e7-ff962d47d538",
                      "parentUUID": "4793c309-08a0-40fb-b6c0-d20b7b5bc83b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "07510e20-8d8a-44b9-84e7-ff962d47d538"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "563988d4-ff9a-42d4-8102-8a65ded8ad13",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "d433d7f1-5a7f-4a0c-94b1-4e04712c01b4",
                      "parentUUID": "563988d4-ff9a-42d4-8102-8a65ded8ad13",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d433d7f1-5a7f-4a0c-94b1-4e04712c01b4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "db38c52a-a0c7-440d-a8cd-b899355aeeda",
                  "title": " put /api/item/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify an item given its ID and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  put /api/item/:id Modify an item given its ID and new fields",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/item/'+ith)\n.send(updateItem(newDescription, newPrice))\n.then(res => {\n    let idsku = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(res.status, expCode);\n    agent.get('/api/items/'+ith)\n    .then (r => {\n        console.log(r.body);\n        assert.equal(r.status,200);\n        r.body.should.be.a('object');\n        r.body.id.should.equal(myexpitem.id);\n        r.body.description.should.equal(newDescription);\n        r.body.price.should.equal(newPrice);\n        r.body.SKUId.should.equal(idsku[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    });\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "65c4b3c1-fd9c-41da-a646-24ddc1777e49",
                      "parentUUID": "db38c52a-a0c7-440d-a8cd-b899355aeeda",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "65c4b3c1-fd9c-41da-a646-24ddc1777e49"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f6a21930-3763-42a7-9600-1bd96dda68fa",
                  "title": " delete /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete an item given its id",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  delete /api/items/:id Delete an item given its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/items/'+ith)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "79ca935e-9b58-4114-96e4-1c053b61e969",
                      "parentUUID": "f6a21930-3763-42a7-9600-1bd96dda68fa",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "79ca935e-9b58-4114-96e4-1c053b61e969"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "607db3c4-1039-435b-84ca-2b599351e482",
                  "title": "Removing all Items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features Removing all Items Getting Items",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "ee7f872b-8252-4795-9e73-bb0e4897a38c",
                      "parentUUID": "607db3c4-1039-435b-84ca-2b599351e482",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ee7f872b-8252-4795-9e73-bb0e4897a38c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7cd2e7ab-539e-4a6f-a47e-f223dde0664d",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "81f1d9ac-5c89-43db-95ab-767a8a398044",
                      "parentUUID": "7cd2e7ab-539e-4a6f-a47e-f223dde0664d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "81f1d9ac-5c89-43db-95ab-767a8a398044"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8401d0ce-4fe6-41ba-b4d1-65d63d5a1de7",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "cd6fde20-9dc7-490e-953c-377aae18c098",
                      "parentUUID": "8401d0ce-4fe6-41ba-b4d1-65d63d5a1de7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cd6fde20-9dc7-490e-953c-377aae18c098"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}