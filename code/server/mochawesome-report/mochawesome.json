{
  "stats": {
    "suites": 542,
    "tests": 520,
    "passes": 520,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-07T23:17:40.483Z",
    "end": "2022-06-07T23:17:43.345Z",
    "duration": 2862,
    "testsRegistered": 520,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8279f8c3-ee7e-4e8e-825a-802aa7c96de5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "561a729b-6574-4a6b-b5a7-c2fbe4b044c6",
          "title": "Test sku CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2135c366-03c1-4993-8357-f05b057ef96f",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test sku CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 904,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "eb3d7cf4-134c-4549-adbc-8b2b78e5058f",
                  "parentUUID": "2135c366-03c1-4993-8357-f05b057ef96f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eb3d7cf4-134c-4549-adbc-8b2b78e5058f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 904,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cc1186bd-4156-4306-a6bd-fb41bc7f47a5",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "508d75cd-dfde-475d-8247-292d3334bbc6",
                  "parentUUID": "cc1186bd-4156-4306-a6bd-fb41bc7f47a5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "508d75cd-dfde-475d-8247-292d3334bbc6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ee0528e1-c28c-4e24-843f-260ff0094b7f",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0cbba74d-09aa-43dd-a061-42d41d82066d",
                  "parentUUID": "ee0528e1-c28c-4e24-843f-260ff0094b7f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0cbba74d-09aa-43dd-a061-42d41d82066d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "463ab6f8-b1cb-4922-ac61-de29360c636a",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "076e39b3-2943-439a-8919-3d1af9fab7ec",
                  "parentUUID": "463ab6f8-b1cb-4922-ac61-de29360c636a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "076e39b3-2943-439a-8919-3d1af9fab7ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2e4bd451-f86f-42a3-9999-02f2b97bf04f",
              "title": "put /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 b -> Modify an existing SKU",
                  "fullTitle": "Test sku CRUD features put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "69392fc0-bfe1-4a42-a543-7a5d639ab6d4",
                  "parentUUID": "2e4bd451-f86f-42a3-9999-02f2b97bf04f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "69392fc0-bfe1-4a42-a543-7a5d639ab6d4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "33fc4383-1cd2-4d3e-994c-32e6b9b7e04d",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "477952a6-e5d7-4e9b-a00e-064e136f2735",
                  "parentUUID": "33fc4383-1cd2-4d3e-994c-32e6b9b7e04d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "477952a6-e5d7-4e9b-a00e-064e136f2735"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "61127ead-1f57-4645-a27e-7db8230bb51b",
              "title": "put /api/sku/:id/position",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Changing SKU position passing its id",
                  "fullTitle": "Test sku CRUD features put /api/sku/:id/position Changing SKU position passing its id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID+'/position')\n.send(pos)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4a5b018e-119b-4070-8822-ebff4df4d8e3",
                  "parentUUID": "61127ead-1f57-4645-a27e-7db8230bb51b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4a5b018e-119b-4070-8822-ebff4df4d8e3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d1852e4f-4889-4271-8a7d-2d8ea4123113",
              "title": "delete /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.2 -> Delete a SKU",
                  "fullTitle": "Test sku CRUD features delete /api/sku/:id FR 2.2 -> Delete a SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "573c9251-2df3-4a4c-a985-853d8dc3ed9f",
                  "parentUUID": "d1852e4f-4889-4271-8a7d-2d8ea4123113",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "573c9251-2df3-4a4c-a985-853d8dc3ed9f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "30cf3e16-2194-46d5-865d-13afdcfdc4df",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "08ef0af3-cbd5-450c-b417-b0548db1b259",
                  "parentUUID": "30cf3e16-2194-46d5-865d-13afdcfdc4df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "08ef0af3-cbd5-450c-b417-b0548db1b259"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1a131d84-5d5d-49ab-8ec2-e743eee98e2c",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1dda09d8-49fa-4365-bdab-92e3d94b5725",
                  "parentUUID": "1a131d84-5d5d-49ab-8ec2-e743eee98e2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1dda09d8-49fa-4365-bdab-92e3d94b5725"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "457b167b-1d6c-4c99-a99d-d5ccf4f7a991",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4e437049-570c-4e2c-abed-bef4815eb6ad",
                  "parentUUID": "457b167b-1d6c-4c99-a99d-d5ccf4f7a991",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e437049-570c-4e2c-abed-bef4815eb6ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "40b799f8-bfd8-4ce0-8906-2fb789739d76",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "409eb1b1-18b2-42b3-a796-ed2ebef17589",
                  "parentUUID": "40b799f8-bfd8-4ce0-8906-2fb789739d76",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "409eb1b1-18b2-42b3-a796-ed2ebef17589"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "37613d42-bbe9-4a1b-a634-05b33a35166c",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2be0d049-692b-4cbf-a1a9-aaa10241c318",
                  "parentUUID": "37613d42-bbe9-4a1b-a634-05b33a35166c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2be0d049-692b-4cbf-a1a9-aaa10241c318"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0e408ab3-b08f-4999-b994-2f83d2cb5243",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a52f53b5-1b78-4336-b033-59d21d8cb067",
                  "parentUUID": "0e408ab3-b08f-4999-b994-2f83d2cb5243",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a52f53b5-1b78-4336-b033-59d21d8cb067"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b2269ab0-1b4a-41fb-b0a5-d49eed30898d",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9c636c94-a223-4d0b-8409-f942d92d3c4e",
                  "parentUUID": "b2269ab0-1b4a-41fb-b0a5-d49eed30898d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c636c94-a223-4d0b-8409-f942d92d3c4e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "60d56828-6a6e-4e84-82e7-4f8fe44be0e9",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4d65b436-c974-4650-98ba-4c49d618bca0",
                  "parentUUID": "60d56828-6a6e-4e84-82e7-4f8fe44be0e9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4d65b436-c974-4650-98ba-4c49d618bca0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3b00db3d-3a4b-4fd8-91b1-1cea5bb5f861",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9c77afd4-abc9-4e4a-9040-f665b57f693f",
                  "parentUUID": "3b00db3d-3a4b-4fd8-91b1-1cea5bb5f861",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c77afd4-abc9-4e4a-9040-f665b57f693f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "21cd0919-6a9e-4426-82fb-70a12fa883b0",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ff7e2b5c-1468-45eb-8d82-e3c760d85f46",
                  "parentUUID": "21cd0919-6a9e-4426-82fb-70a12fa883b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff7e2b5c-1468-45eb-8d82-e3c760d85f46"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "60981625-cd2e-4b11-a7fb-20621e0b1854",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7c19ceb4-5d4b-4887-b265-64730012511a",
                  "parentUUID": "60981625-cd2e-4b11-a7fb-20621e0b1854",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7c19ceb4-5d4b-4887-b265-64730012511a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6af06131-e8ef-4e8b-9134-f4554d67e10c",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0dc632fd-dbd8-4a6a-85b7-71e82bcad045",
                  "parentUUID": "6af06131-e8ef-4e8b-9134-f4554d67e10c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0dc632fd-dbd8-4a6a-85b7-71e82bcad045"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "df7e0613-ee25-4df1-b20e-503ef1c3f155",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4fcae433-0321-435f-8b32-a532b2ce101c",
                  "parentUUID": "df7e0613-ee25-4df1-b20e-503ef1c3f155",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4fcae433-0321-435f-8b32-a532b2ce101c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "812b472a-02e1-485e-aa33-1fde2d99d2ab",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9bbdbd5e-edee-4b39-9f67-c3395cef9ad8",
                  "parentUUID": "812b472a-02e1-485e-aa33-1fde2d99d2ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9bbdbd5e-edee-4b39-9f67-c3395cef9ad8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "98abb3d2-c7fc-46a9-ade7-dbbb8ce55976",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b4fe81dd-9164-4bd7-8d8b-d6acb9f5a663",
                  "parentUUID": "98abb3d2-c7fc-46a9-ade7-dbbb8ce55976",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b4fe81dd-9164-4bd7-8d8b-d6acb9f5a663"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1e048663-084b-4306-9884-2c3a195f9300",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "015d2b76-e6f6-450a-af3b-fd16191780a6",
                  "parentUUID": "1e048663-084b-4306-9884-2c3a195f9300",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "015d2b76-e6f6-450a-af3b-fd16191780a6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6b3fb6d7-d98c-46ac-b89a-4b8cd94c603e",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3d7c8d70-0a24-48e8-a04a-e9fbe2584560",
                  "parentUUID": "6b3fb6d7-d98c-46ac-b89a-4b8cd94c603e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d7c8d70-0a24-48e8-a04a-e9fbe2584560"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d17e2abc-fb3c-499e-82e5-d85c22c18256",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d6818ba7-be04-4f34-83d6-aadea0f9923a",
                  "parentUUID": "d17e2abc-fb3c-499e-82e5-d85c22c18256",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6818ba7-be04-4f34-83d6-aadea0f9923a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "70c2e6e0-0653-4fd3-a4e6-525ed5191412",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "74d9d53f-735f-46d4-8f79-db08bdd208a7",
                  "parentUUID": "70c2e6e0-0653-4fd3-a4e6-525ed5191412",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "74d9d53f-735f-46d4-8f79-db08bdd208a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "94b71f77-f9b6-402a-963b-7b4ceaa42fe8",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test sku CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "8a618ec9-cbce-42c4-8c28-430d2d2ad11f",
                  "parentUUID": "94b71f77-f9b6-402a-963b-7b4ceaa42fe8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8a618ec9-cbce-42c4-8c28-430d2d2ad11f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f479df18-0939-41d6-9130-977afdd59b14",
          "title": "Test skuitem CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "13b524e8-5523-4b04-b9dd-bb77644931e8",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "5e8f619b-564e-444c-ba04-59978124a746",
                  "parentUUID": "13b524e8-5523-4b04-b9dd-bb77644931e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e8f619b-564e-444c-ba04-59978124a746"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9451d559-ce6f-4c85-bdfc-9c6935e6dd77",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test skuitem CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "866e316f-8f61-4c47-8231-214dfa0ce522",
                  "parentUUID": "9451d559-ce6f-4c85-bdfc-9c6935e6dd77",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "866e316f-8f61-4c47-8231-214dfa0ce522"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "007e9668-3089-4699-8add-4d58207f2cf5",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e65a2f8f-43a1-4745-b63b-1d52e351aa50",
                  "parentUUID": "007e9668-3089-4699-8add-4d58207f2cf5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e65a2f8f-43a1-4745-b63b-1d52e351aa50"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "174d85e1-8291-4819-b900-a2a9a234d112",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0435e83c-e056-4af8-be6b-8e75e30c5ee9",
                  "parentUUID": "174d85e1-8291-4819-b900-a2a9a234d112",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0435e83c-e056-4af8-be6b-8e75e30c5ee9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c64d5f84-239f-47e9-a79d-aab1fa04d6d4",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test skuitem CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6812264d-bc4d-46c7-8945-b964b928be4b",
                  "parentUUID": "c64d5f84-239f-47e9-a79d-aab1fa04d6d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6812264d-bc4d-46c7-8945-b964b928be4b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "60de6b42-70e4-4b06-bb53-7438c38cda99",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "02ca1565-8e52-4144-9c5b-bdaac11b964c",
                  "parentUUID": "60de6b42-70e4-4b06-bb53-7438c38cda99",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "02ca1565-8e52-4144-9c5b-bdaac11b964c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ebe9d45d-2c0d-473b-b8e1-699c6e4abbae",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fa958cdd-069c-49c0-9142-2b7f8b1c346b",
                  "parentUUID": "ebe9d45d-2c0d-473b-b8e1-699c6e4abbae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fa958cdd-069c-49c0-9142-2b7f8b1c346b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "39f2163b-7974-4501-b54a-bf9f632aec3f",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "239b7d7f-0c83-4af9-84e1-3859487afa65",
                  "parentUUID": "39f2163b-7974-4501-b54a-bf9f632aec3f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "239b7d7f-0c83-4af9-84e1-3859487afa65"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e9ea4a79-da0d-485d-8ffa-cdc6597bdf26",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "070ae2d6-8385-4464-b4d8-4120b462ab57",
                  "parentUUID": "e9ea4a79-da0d-485d-8ffa-cdc6597bdf26",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "070ae2d6-8385-4464-b4d8-4120b462ab57"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5d3a41fa-3a40-46d8-847c-a5c86253ace2",
              "title": "get /api/skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7e681aac-efde-4131-9f85-d68f47877776",
                  "parentUUID": "5d3a41fa-3a40-46d8-847c-a5c86253ace2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7e681aac-efde-4131-9f85-d68f47877776"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "426e03fb-8787-4a29-b4db-07f06dc4cbdf",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cee82ff8-7a45-4e20-87a5-32e6df31f95c",
                  "parentUUID": "426e03fb-8787-4a29-b4db-07f06dc4cbdf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cee82ff8-7a45-4e20-87a5-32e6df31f95c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5818385e-e0d3-475c-bfe5-bf0a45fa132c",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a1a4469d-b324-4fb5-818d-4a4f5c08e497",
                  "parentUUID": "5818385e-e0d3-475c-bfe5-bf0a45fa132c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1a4469d-b324-4fb5-818d-4a4f5c08e497"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0a6a439d-83b2-40c0-8393-4bf3985082eb",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1542d6c0-68d6-4b72-a254-07a35d8e6bc8",
                  "parentUUID": "0a6a439d-83b2-40c0-8393-4bf3985082eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1542d6c0-68d6-4b72-a254-07a35d8e6bc8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6b549585-4cb3-4ad0-a8b7-038cb328af1b",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7568fd47-e418-46bb-87a0-8feae90b34c2",
                  "parentUUID": "6b549585-4cb3-4ad0-a8b7-038cb328af1b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7568fd47-e418-46bb-87a0-8feae90b34c2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "154076e1-a110-458c-90bf-2a3160b4c90d",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "182ebbbd-a43c-43cc-9c74-0b55867d5850",
                  "parentUUID": "154076e1-a110-458c-90bf-2a3160b4c90d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "182ebbbd-a43c-43cc-9c74-0b55867d5850"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d2ba3760-6fa9-4371-9db0-5a42250d05b3",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "6f1f440c-04e1-4810-a20d-9e37209b8fce",
                  "parentUUID": "d2ba3760-6fa9-4371-9db0-5a42250d05b3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f1f440c-04e1-4810-a20d-9e37209b8fce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "86e286de-203b-4770-a705-845d967643fe",
              "title": "get /api/skuitems/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its id",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "4c4c142d-37d6-4f9a-83af-651403dd0923",
                  "parentUUID": "86e286de-203b-4770-a705-845d967643fe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c4c142d-37d6-4f9a-83af-651403dd0923"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9e2011d7-011c-407a-b59c-85bf7967ca84",
              "title": "get /api/skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ab684e0f-6053-4ff0-9dcd-af24f22e9342",
                  "parentUUID": "9e2011d7-011c-407a-b59c-85bf7967ca84",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab684e0f-6053-4ff0-9dcd-af24f22e9342"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6e2a04d8-2be3-43ef-a949-f6a022702b56",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f0e5152c-bf4e-4341-bb3f-6211ac3e40ae",
                  "parentUUID": "6e2a04d8-2be3-43ef-a949-f6a022702b56",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0e5152c-bf4e-4341-bb3f-6211ac3e40ae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "28e44132-0580-4105-9a57-e4534b8717bf",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "362a3ca7-9036-4e79-8751-33df91754f3b",
                  "parentUUID": "28e44132-0580-4105-9a57-e4534b8717bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "362a3ca7-9036-4e79-8751-33df91754f3b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "80c9e35e-71a7-4273-b6a5-5aef78d4f527",
              "title": "get /api/skuitems/:RFID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems passing its rfid",
                  "fullTitle": "Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "282b2a5a-9e34-4e1c-b9bf-09101aceac36",
                  "parentUUID": "80c9e35e-71a7-4273-b6a5-5aef78d4f527",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "282b2a5a-9e34-4e1c-b9bf-09101aceac36"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "795126a3-e02d-4ea1-b976-2eca9a49fd07",
          "title": "test positions CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "13479ff8-25e6-4bdb-83cb-ad96322ccce3",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "test positions CRUD features Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "22b48db9-f055-4a0f-af4c-f01f5aa6cb95",
                  "parentUUID": "13479ff8-25e6-4bdb-83cb-ad96322ccce3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "22b48db9-f055-4a0f-af4c-f01f5aa6cb95"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a26452d2-4c62-4e26-a51c-d4bbeec01df0",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4ad6b3eb-57b8-4fb7-9a06-99acd59f6716",
                  "parentUUID": "a26452d2-4c62-4e26-a51c-d4bbeec01df0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ad6b3eb-57b8-4fb7-9a06-99acd59f6716"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2b21bc2c-2d77-4eb0-a410-818c0dcb33c3",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4926233b-80f1-422c-8e8a-6b0869cd2589",
                  "parentUUID": "2b21bc2c-2d77-4eb0-a410-818c0dcb33c3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4926233b-80f1-422c-8e8a-6b0869cd2589"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "36f43079-6b65-498c-94e2-7893142f3c16",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "90071569-db1f-4420-958d-bbeb179d0a48",
                  "parentUUID": "36f43079-6b65-498c-94e2-7893142f3c16",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "90071569-db1f-4420-958d-bbeb179d0a48"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e6e4a039-20e5-4756-8f74-2c0ff011a07d",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "24c6f651-ef3a-41ac-a017-8da6dd337a8c",
                  "parentUUID": "e6e4a039-20e5-4756-8f74-2c0ff011a07d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24c6f651-ef3a-41ac-a017-8da6dd337a8c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7b27c7cc-d8b9-4da4-8eb7-113bf81f0aff",
              "title": " get /api/positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.3 -> List all positions",
                  "fullTitle": "test positions CRUD features  get /api/positions FR 3.1.3 -> List all positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "6dfc398e-e1a2-4d67-be0f-e9c5dca9b2c4",
                  "parentUUID": "7b27c7cc-d8b9-4da4-8eb7-113bf81f0aff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6dfc398e-e1a2-4d67-be0f-e9c5dca9b2c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "093d5ff4-155a-46f7-aa83-f9df7348be32",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3db07cbf-bd3b-465e-880f-962da3479c0e",
                  "parentUUID": "093d5ff4-155a-46f7-aa83-f9df7348be32",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3db07cbf-bd3b-465e-880f-962da3479c0e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3538c1ff-f2f8-4226-88c9-1d5a20eca6b4",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "11adb2cf-4d82-4905-8b82-7ab388309691",
                  "parentUUID": "3538c1ff-f2f8-4226-88c9-1d5a20eca6b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "11adb2cf-4d82-4905-8b82-7ab388309691"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "11939fe9-90f4-4795-ad29-b177e6b22be8",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d97bdeb9-73ce-4adc-91c3-73d63d026698",
                  "parentUUID": "11939fe9-90f4-4795-ad29-b177e6b22be8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d97bdeb9-73ce-4adc-91c3-73d63d026698"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7cbb5e97-205a-458e-94f5-edc3936fbfcb",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f2375318-e62d-44e3-99cc-a218ba3e75e5",
                  "parentUUID": "7cbb5e97-205a-458e-94f5-edc3936fbfcb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f2375318-e62d-44e3-99cc-a218ba3e75e5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a39cd17a-d934-4513-b3e6-0550cf51feac",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8aa2a447-c123-4d47-8a45-81dad9058601",
                  "parentUUID": "a39cd17a-d934-4513-b3e6-0550cf51feac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8aa2a447-c123-4d47-8a45-81dad9058601"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f6a65ee7-96e7-485a-9dfa-9d885249b08a",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f677598a-30f5-454d-8d53-68c5bbb94adf",
                  "parentUUID": "f6a65ee7-96e7-485a-9dfa-9d885249b08a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f677598a-30f5-454d-8d53-68c5bbb94adf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "64fcfaba-ffa7-4c4e-a139-0869b27f93c7",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "af77b432-b501-4e28-9069-1940f078c7ca",
                  "parentUUID": "64fcfaba-ffa7-4c4e-a139-0869b27f93c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "af77b432-b501-4e28-9069-1940f078c7ca"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "de02bf5b-a269-4230-8ee4-6083a05143d3",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f1e4355d-43b5-41f9-bb37-7239b2fa6ae0",
                  "parentUUID": "de02bf5b-a269-4230-8ee4-6083a05143d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f1e4355d-43b5-41f9-bb37-7239b2fa6ae0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "22e390a8-f9df-40f0-90ef-7103da622d63",
          "title": "Test TestDescriptor CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f096e865-8d4e-4750-af77-eee7ae0f87d1",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestDescriptor CRUD features removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6db88743-f74b-4fde-8118-406837252a53",
                  "parentUUID": "f096e865-8d4e-4750-af77-eee7ae0f87d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6db88743-f74b-4fde-8118-406837252a53"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c6599d9e-9756-4b9b-a699-92e38ba33e24",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestDescriptor CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "5f1e0435-36ac-4ba9-b9e9-1f2e719873cb",
                  "parentUUID": "c6599d9e-9756-4b9b-a699-92e38ba33e24",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f1e0435-36ac-4ba9-b9e9-1f2e719873cb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bb894942-4b98-4be8-b196-0a3df78848a9",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestDescriptor CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "2c81d3ff-2fa7-4424-989d-2f21709d9465",
                  "parentUUID": "bb894942-4b98-4be8-b196-0a3df78848a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2c81d3ff-2fa7-4424-989d-2f21709d9465"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8d0af288-0fcd-4b66-b931-f831c32d33fb",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5f091919-9169-4033-bcb3-220d83f283d1",
                  "parentUUID": "8d0af288-0fcd-4b66-b931-f831c32d33fb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f091919-9169-4033-bcb3-220d83f283d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2476db64-51ff-4ccb-8e90-e3be6452bbb4",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "33e09593-0b05-4e3e-bff7-9428d26e2c43",
                  "parentUUID": "2476db64-51ff-4ccb-8e90-e3be6452bbb4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "33e09593-0b05-4e3e-bff7-9428d26e2c43"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "db29dcf0-acd5-41ff-9b30-937839dcf2fa",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d48719aa-49f7-4d1c-8c5c-34f4dae0c715",
                  "parentUUID": "db29dcf0-acd5-41ff-9b30-937839dcf2fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d48719aa-49f7-4d1c-8c5c-34f4dae0c715"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6c41b106-f6a1-4c48-9a62-20f9c415a326",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e71c0d9c-4718-436c-a10e-c5faba8aeb60",
                  "parentUUID": "6c41b106-f6a1-4c48-9a62-20f9c415a326",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e71c0d9c-4718-436c-a10e-c5faba8aeb60"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4e1009c8-6031-4689-8461-938d3ab6b94e",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "03f36522-c8d1-4a4e-a039-a373d03e7ad8",
                  "parentUUID": "4e1009c8-6031-4689-8461-938d3ab6b94e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "03f36522-c8d1-4a4e-a039-a373d03e7ad8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5e9c239c-c456-402c-bc83-3f2fd8d57747",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "96e00222-aa1e-46bd-9d86-9e2edba4861b",
                  "parentUUID": "5e9c239c-c456-402c-bc83-3f2fd8d57747",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "96e00222-aa1e-46bd-9d86-9e2edba4861b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8c9d6af8-3c17-41a5-a1c8-52fa14dba17c",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0009ee93-ce6a-4463-b277-5c75ec3e243a",
                  "parentUUID": "8c9d6af8-3c17-41a5-a1c8-52fa14dba17c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0009ee93-ce6a-4463-b277-5c75ec3e243a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "55b0ec8f-d911-4b68-b59b-a39f45493fc6",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f8ec2024-0ace-4dad-9c32-2633cb81f77f",
                  "parentUUID": "55b0ec8f-d911-4b68-b59b-a39f45493fc6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8ec2024-0ace-4dad-9c32-2633cb81f77f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "06e7e34a-dc81-4025-be2b-07dda8768702",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "dc006804-90c4-455b-ba6f-19a1ac389c0e",
                  "parentUUID": "06e7e34a-dc81-4025-be2b-07dda8768702",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc006804-90c4-455b-ba6f-19a1ac389c0e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2f1839ec-1965-456b-9156-b217433bab80",
              "title": "test post test descriptor with not exixsting idsku",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a bad test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test post test descriptor with not exixsting idsku Creating a bad test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/testDescriptor')\n.send()\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a3fce5cc-13f4-47b7-95ef-375aa2274dbc",
                  "parentUUID": "2f1839ec-1965-456b-9156-b217433bab80",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a3fce5cc-13f4-47b7-95ef-375aa2274dbc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d8b23f68-38dd-4db9-b5a8-ff8f5677d1f8",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5be5e6be-4dba-43ed-87f0-7c6824cfd50f",
                  "parentUUID": "d8b23f68-38dd-4db9-b5a8-ff8f5677d1f8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5be5e6be-4dba-43ed-87f0-7c6824cfd50f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "577823d3-5bd5-4acd-a5dd-19e9facca8b3",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ac0d5d24-d97d-4acc-8c57-03eab40775c4",
                  "parentUUID": "577823d3-5bd5-4acd-a5dd-19e9facca8b3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac0d5d24-d97d-4acc-8c57-03eab40775c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b9a21b43-b802-4046-905d-643908b232c2",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "0814e008-f3e3-4375-b525-dd22dc67101c",
                  "parentUUID": "b9a21b43-b802-4046-905d-643908b232c2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0814e008-f3e3-4375-b525-dd22dc67101c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b2e3a154-7526-455f-a0f4-ce66e11f2bf6",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "9dadabbf-8bbe-40a2-a2c1-d2d6ce5fcfdb",
                  "parentUUID": "b2e3a154-7526-455f-a0f4-ce66e11f2bf6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9dadabbf-8bbe-40a2-a2c1-d2d6ce5fcfdb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ace0c0c1-6e4c-496f-ace9-3bf96165caca",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "8940f09b-027b-4a86-9792-9a021ef58392",
                  "parentUUID": "ace0c0c1-6e4c-496f-ace9-3bf96165caca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8940f09b-027b-4a86-9792-9a021ef58392"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c8132dd0-156e-4996-b2c9-d6d3486ce0d6",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "40ad024f-3720-43c9-9cac-b348bf8b35ba",
                  "parentUUID": "c8132dd0-156e-4996-b2c9-d6d3486ce0d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "40ad024f-3720-43c9-9cac-b348bf8b35ba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2be25a4e-9911-422b-9f85-4fafe06e78ee",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                  "err": {},
                  "uuid": "6e49d4b1-f67e-4129-8a7a-fc95c83c80d5",
                  "parentUUID": "2be25a4e-9911-422b-9f85-4fafe06e78ee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6e49d4b1-f67e-4129-8a7a-fc95c83c80d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1121702a-a0cd-4372-b361-4fd8f859e4e4",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "255587cc-0b72-4dd5-a82e-cc60e2b017d5",
                  "parentUUID": "1121702a-a0cd-4372-b361-4fd8f859e4e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "255587cc-0b72-4dd5-a82e-cc60e2b017d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4a786e14-9b92-4ad3-a633-0335bd30adb6",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c9bd724d-f395-4913-a9d5-57cdbfc6bfbc",
                  "parentUUID": "4a786e14-9b92-4ad3-a633-0335bd30adb6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9bd724d-f395-4913-a9d5-57cdbfc6bfbc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "52665d88-8dae-4493-90cd-35749f2c1e41",
              "title": "put /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    res.body.should.be.a('array');\n    agent.put('/api/testDescriptor/'+10000)\n    .send()\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));               \n});",
                  "err": {},
                  "uuid": "27e8021a-9fa1-4c4e-83ba-0b0ac5698b7a",
                  "parentUUID": "52665d88-8dae-4493-90cd-35749f2c1e41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27e8021a-9fa1-4c4e-83ba-0b0ac5698b7a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8ec1896a-17ce-4064-a472-f4991cf6efda",
              "title": "delete /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "664efe43-a1bc-4c41-8506-f580f251dd9d",
                  "parentUUID": "8ec1896a-17ce-4064-a472-f4991cf6efda",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "664efe43-a1bc-4c41-8506-f580f251dd9d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "407951eb-cd10-41ec-bf8e-22ee30f8b28b",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "68c2091a-247c-425a-ad18-01e50d64180a",
                  "parentUUID": "407951eb-cd10-41ec-bf8e-22ee30f8b28b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "68c2091a-247c-425a-ad18-01e50d64180a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fd6fdca1-b9f0-4341-ab3c-7423744eb3bc",
              "title": "delete /api/testDescriptor/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete a TestDescriptor by id",
                  "fullTitle": "Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c2b47fa0-40c1-4203-b862-e208a79ce8bf",
                  "parentUUID": "fd6fdca1-b9f0-4341-ab3c-7423744eb3bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c2b47fa0-40c1-4203-b862-e208a79ce8bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f78859e0-0d4c-4352-b876-b367b4022e44",
          "title": "Test TestResult CRUD",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3905fe5c-269a-4f8d-95fa-fc98899da6d3",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestResult CRUD removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "a2573a7f-35d5-4f38-bd45-fce8c794f4dd",
                  "parentUUID": "3905fe5c-269a-4f8d-95fa-fc98899da6d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a2573a7f-35d5-4f38-bd45-fce8c794f4dd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2f9694e9-f3f6-46e8-8a13-5f4ad3e9411f",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestResult CRUD removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "51bc4b6a-2533-4ec4-ad85-8b76ea5e8775",
                  "parentUUID": "2f9694e9-f3f6-46e8-8a13-5f4ad3e9411f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "51bc4b6a-2533-4ec4-ad85-8b76ea5e8775"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "eaec10ca-b48c-4070-9b3c-5da0b82bdba9",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestResult CRUD removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "07275b61-9ee3-4b51-bd34-35d985f75d94",
                  "parentUUID": "eaec10ca-b48c-4070-9b3c-5da0b82bdba9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "07275b61-9ee3-4b51-bd34-35d985f75d94"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a2a189dd-5624-4cff-ab61-4ff546811aec",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "290d4b02-d681-4569-8ac9-58d656597ee2",
                  "parentUUID": "a2a189dd-5624-4cff-ab61-4ff546811aec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "290d4b02-d681-4569-8ac9-58d656597ee2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2e25efad-888c-4041-802d-efea99c4e2fd",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cff8c247-0132-4aa9-adb9-d54df016df6d",
                  "parentUUID": "2e25efad-888c-4041-802d-efea99c4e2fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cff8c247-0132-4aa9-adb9-d54df016df6d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8db7c7e2-af3a-41b7-9649-2e6f213852ba",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test TestResult CRUD get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "91fa1f20-c45e-40dc-bfa9-e6e89d00fabe",
                  "parentUUID": "8db7c7e2-af3a-41b7-9649-2e6f213852ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "91fa1f20-c45e-40dc-bfa9-e6e89d00fabe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "47024ea9-8db1-4a9d-bb86-430167972ec6",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "75530dfb-5237-4f97-9e40-3509dbf69a48",
                  "parentUUID": "47024ea9-8db1-4a9d-bb86-430167972ec6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75530dfb-5237-4f97-9e40-3509dbf69a48"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "203435df-5bb8-4288-a31f-35d1b8ab9d40",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "314ba58c-4b5e-48f2-9294-063eeeda1654",
                  "parentUUID": "203435df-5bb8-4288-a31f-35d1b8ab9d40",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "314ba58c-4b5e-48f2-9294-063eeeda1654"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d1b06d8f-7f72-44f7-b69a-0ac2a07ef4a8",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Test TestResult CRUD test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "80e2da87-e342-4535-9783-c538d5f757da",
                  "parentUUID": "d1b06d8f-7f72-44f7-b69a-0ac2a07ef4a8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "80e2da87-e342-4535-9783-c538d5f757da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3ecf7aa4-0a50-4602-b374-5043c0d9a256",
              "title": "get /api/testDescriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting All TestDescriptors",
                  "fullTitle": "Test TestResult CRUD get /api/testDescriptors Getting All TestDescriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "07ad6636-9b6d-4836-bc7e-c0947cf0e295",
                  "parentUUID": "3ecf7aa4-0a50-4602-b374-5043c0d9a256",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "07ad6636-9b6d-4836-bc7e-c0947cf0e295"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3374396d-255e-44dd-9bf2-d788b5e39d3a",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fc3e71b9-29aa-433f-9123-4ea8de380568",
                  "parentUUID": "3374396d-255e-44dd-9bf2-d788b5e39d3a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fc3e71b9-29aa-433f-9123-4ea8de380568"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "17a22b49-462b-428b-bc3c-d637f187621f",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4b2652a2-f482-4bb8-891a-72f7b2694753",
                  "parentUUID": "17a22b49-462b-428b-bc3c-d637f187621f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b2652a2-f482-4bb8-891a-72f7b2694753"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "02a895d9-6878-458d-b4d9-3440b85a1e18",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.1 -> Add a quality test",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult FR 3.2.1 -> Add a quality test",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idtds = ids.getIdTestDescriptor();\nlet testResult = newTestResult(mytr.rfid, idtds[mytr.idTestDescriptor], mytr.Date, mytr.Result);\n//console.log(testResult);\nagent.post('/api/skuitems/testResult')\n.send(testResult)\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b5882e7d-8529-47e8-8f00-3dde3c040e80",
                  "parentUUID": "02a895d9-6878-458d-b4d9-3440b85a1e18",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b5882e7d-8529-47e8-8f00-3dde3c040e80"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9f521d39-4680-4450-9621-1b83863af672",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creates a new test Result for a certain sku item defined by RFID",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "ccbe391a-fdf3-4499-a58e-0983cfb00f3c",
                  "parentUUID": "9f521d39-4680-4450-9621-1b83863af672",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ccbe391a-fdf3-4499-a58e-0983cfb00f3c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8c9f6b90-aa43-41b6-9d78-c4698bdf67b9",
              "title": " post /api/skuitems/testResult",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creates a new test Result for a certain sku item defined by RFID",
                  "fullTitle": "Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "91d5609f-24dc-4d14-a7ea-225de0df84e4",
                  "parentUUID": "8c9f6b90-aa43-41b6-9d78-c4698bdf67b9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "91d5609f-24dc-4d14-a7ea-225de0df84e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "deaf6413-1f3c-4b05-a22a-b378ceeefcb6",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "72ba874f-ce57-4351-889a-ac153c7d783a",
                  "parentUUID": "deaf6413-1f3c-4b05-a22a-b378ceeefcb6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "72ba874f-ce57-4351-889a-ac153c7d783a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7b483ac2-cf45-46fc-ae3d-8a03af07cb3f",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "887e1e4d-150f-4254-998e-c7b09f9f03a1",
                  "parentUUID": "7b483ac2-cf45-46fc-ae3d-8a03af07cb3f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "887e1e4d-150f-4254-998e-c7b09f9f03a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "91d07028-d85a-4d11-a064-16f222e45f7d",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5df8138a-5175-45b5-b8a5-225b06a2cf01",
                  "parentUUID": "91d07028-d85a-4d11-a064-16f222e45f7d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5df8138a-5175-45b5-b8a5-225b06a2cf01"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "51a92e6b-684d-4d85-b590-81939f8052ab",
              "title": " get /api/skuitems/:rfid/testResults/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get a specific test result with the rfid and id",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults/:id Get a specific test result with the rfid and id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    //console.log(res.body[0]);\n    agent.get('/api/skuitems/'+rfid+'/testResults/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "e9c2af37-76d7-4c4a-ab59-fd741d01517d",
                  "parentUUID": "51a92e6b-684d-4d85-b590-81939f8052ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9c2af37-76d7-4c4a-ab59-fd741d01517d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "67d240a8-9afc-4c20-a882-bd6b89b5d339",
              "title": " get /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get a specific test result with the rfid and id",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResult/:id Get a specific test result with the rfid and id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let alltdids = ids.getIdTestDescriptor();\n    console.log(alltdids);\n    agent.get('/api/skuitems/'+rfid+'/testResult/'+alltdids[0])\n    .then(function(res2){\n        console.log(res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "f2387f3a-2223-4ea5-8891-653891ff4ca3",
                  "parentUUID": "67d240a8-9afc-4c20-a882-bd6b89b5d339",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f2387f3a-2223-4ea5-8891-653891ff4ca3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "082249db-1d13-4c23-9772-c031dbbdbf02",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.2 -> Modify a quality test",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id FR 3.2.2 -> Modify a quality test",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    console.log(\"this is it\", res.body);\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        console.log(\"I'm heeeeereeee\", res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "3ec490bc-f0be-409d-af09-6f1beb830db3",
                  "parentUUID": "082249db-1d13-4c23-9772-c031dbbdbf02",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3ec490bc-f0be-409d-af09-6f1beb830db3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6baef6f7-4889-431c-9e61-42bcf6be4c11",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a test results given its rfid and id and new fields",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "e051a0cc-89f1-4d12-a772-29efd0bef140",
                  "parentUUID": "6baef6f7-4889-431c-9e61-42bcf6be4c11",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e051a0cc-89f1-4d12-a772-29efd0bef140"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f4cda664-2fc0-435e-beb5-2a75df8aec1b",
              "title": " put /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify a test results given its rfid and id and new fields",
                  "fullTitle": "Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "e6de92f4-964c-4bc9-b9fc-ac9abbdccc2c",
                  "parentUUID": "f4cda664-2fc0-435e-beb5-2a75df8aec1b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e6de92f4-964c-4bc9-b9fc-ac9abbdccc2c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "95d2792b-88d2-48e6-8480-ee60da6e21f6",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d15dcfbf-0fab-4cb2-897b-75a4ecf0b758",
                  "parentUUID": "95d2792b-88d2-48e6-8480-ee60da6e21f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d15dcfbf-0fab-4cb2-897b-75a4ecf0b758"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "61ead1c9-84aa-46e9-97eb-06349af02e66",
              "title": " delete /api/skuitems/:rfid/testResult/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.2.3 -> Delete a quality test",
                  "fullTitle": "Test TestResult CRUD  delete /api/skuitems/:rfid/testResult/:id FR 3.2.3 -> Delete a quality test",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    // console.log(res.body);\n    agent.delete('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "265fa791-e3ef-420f-917c-6d3f265279b2",
                  "parentUUID": "61ead1c9-84aa-46e9-97eb-06349af02e66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "265fa791-e3ef-420f-917c-6d3f265279b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cc8dd1e0-ed3a-4a2b-813a-c2fc374da4d8",
              "title": " get /api/skuitems/:rfid/testResults",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete all test results associated to a certain rfid",
                  "fullTitle": "Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3e321221-90d4-4d7c-af8b-59a317fcb1ee",
                  "parentUUID": "cc8dd1e0-ed3a-4a2b-813a-c2fc374da4d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e321221-90d4-4d7c-af8b-59a317fcb1ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f2feea5f-dd9d-4f6d-8015-aef82157e3fc",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test TestResult CRUD removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "418112a6-3ad9-476d-bbc1-26ce89d41c7d",
                  "parentUUID": "f2feea5f-dd9d-4f6d-8015-aef82157e3fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "418112a6-3ad9-476d-bbc1-26ce89d41c7d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3067a167-8a9f-4e02-8790-34ce1d6d6799",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test TestResult CRUD removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "cf96d245-6bd8-45bc-bbd4-a7b7c710ab2f",
                  "parentUUID": "3067a167-8a9f-4e02-8790-34ce1d6d6799",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf96d245-6bd8-45bc-bbd4-a7b7c710ab2f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "58efb024-a420-41ef-b70b-8d11117ee43c",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test TestResult CRUD removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d3c64d34-c284-4ad0-aeed-faa731821508",
                  "parentUUID": "58efb024-a420-41ef-b70b-8d11117ee43c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d3c64d34-c284-4ad0-aeed-faa731821508"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "543ff60d-6b81-45b7-b12a-bbe457f56164",
          "title": "Test user CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "33b36b29-46d8-4895-9f9d-342948aa3de1",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "defcef1e-de20-448a-ac92-50e8e3cc7929",
                  "parentUUID": "33b36b29-46d8-4895-9f9d-342948aa3de1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "defcef1e-de20-448a-ac92-50e8e3cc7929"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9dc1970f-7318-4110-af29-48d66dc3fb8c",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e599198f-ac59-40d6-a470-cd9d18ca70f4",
                  "parentUUID": "9dc1970f-7318-4110-af29-48d66dc3fb8c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e599198f-ac59-40d6-a470-cd9d18ca70f4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "77a0896c-ca3c-4e4b-9bac-e41c663dc9ba",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e38653d1-5037-488d-ac51-8cb7500d3402",
                  "parentUUID": "77a0896c-ca3c-4e4b-9bac-e41c663dc9ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e38653d1-5037-488d-ac51-8cb7500d3402"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3a30e5a4-0ac4-443e-a069-60e75036d22f",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "20bca337-a354-4ebc-9fc5-22044e23f3da",
                  "parentUUID": "3a30e5a4-0ac4-443e-a069-60e75036d22f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20bca337-a354-4ebc-9fc5-22044e23f3da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a9e1ee3e-25bc-4d16-9c64-9aeef12f2618",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test user CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 59,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1422713f-1316-4a2b-9484-e48276a52073",
                  "parentUUID": "a9e1ee3e-25bc-4d16-9c64-9aeef12f2618",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1422713f-1316-4a2b-9484-e48276a52073"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a3bcc39d-3fb7-4182-9163-2fafa30e0cec",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c88f0554-3ece-4ff9-9f08-4576f24ee6b1",
                  "parentUUID": "a3bcc39d-3fb7-4182-9163-2fafa30e0cec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c88f0554-3ece-4ff9-9f08-4576f24ee6b1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2189d23a-520e-4682-8e2f-08e843a6b127",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b01a469b-779c-4111-802c-7616a72513f2",
                  "parentUUID": "2189d23a-520e-4682-8e2f-08e843a6b127",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b01a469b-779c-4111-802c-7616a72513f2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fee8788b-94cc-4f81-8243-5c19041bcdf8",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6cd28127-9bf5-4614-99d7-486301de89c0",
                  "parentUUID": "fee8788b-94cc-4f81-8243-5c19041bcdf8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6cd28127-9bf5-4614-99d7-486301de89c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4733ce9c-106c-41c2-bb0f-4226816c7600",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5e6950df-4bf9-4465-8fdb-ecdcb9060976",
                  "parentUUID": "4733ce9c-106c-41c2-bb0f-4226816c7600",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e6950df-4bf9-4465-8fdb-ecdcb9060976"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d965f799-11bc-44fc-9631-636ace871b18",
          "title": "Test RestockOrder CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3841432d-08de-4402-927d-745704d2aa49",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "13cac480-d5f7-4a61-a75e-14d08b7bc8ce",
                  "parentUUID": "3841432d-08de-4402-927d-745704d2aa49",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "13cac480-d5f7-4a61-a75e-14d08b7bc8ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "20cef43f-dee7-47a9-ae82-d950e4f6d3fc",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "f3e6cdda-49dc-4c88-b8e8-c29294af73ce",
                  "parentUUID": "20cef43f-dee7-47a9-ae82-d950e4f6d3fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f3e6cdda-49dc-4c88-b8e8-c29294af73ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "27f3945e-b00d-4fb4-a9a7-6b27c82718e9",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test RestockOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "fccc9f62-cbc3-4425-be26-c6180b9d002a",
                  "parentUUID": "27f3945e-b00d-4fb4-a9a7-6b27c82718e9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fccc9f62-cbc3-4425-be26-c6180b9d002a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "874b2499-1e34-4934-b3dc-194ce5e5bac7",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test RestockOrder CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "38ac6fc5-1d2e-48d6-b398-99420b288b34",
                  "parentUUID": "874b2499-1e34-4934-b3dc-194ce5e5bac7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "38ac6fc5-1d2e-48d6-b398-99420b288b34"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ad1f6b41-18be-4afb-9a77-2adba0287979",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cdbda187-4a07-42d9-9ae3-ed963330360f",
                  "parentUUID": "ad1f6b41-18be-4afb-9a77-2adba0287979",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cdbda187-4a07-42d9-9ae3-ed963330360f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "06888469-ab6f-4dcf-9b5b-e048b0279e72",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1cd84122-194f-4209-8ce4-b23af3668306",
                  "parentUUID": "06888469-ab6f-4dcf-9b5b-e048b0279e72",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1cd84122-194f-4209-8ce4-b23af3668306"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "67c32909-c83b-4e9d-9a5b-69e2a80e71f7",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test RestockOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4aa30c0e-1536-4b31-a2fb-f64799a7e0c3",
                  "parentUUID": "67c32909-c83b-4e9d-9a5b-69e2a80e71f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4aa30c0e-1536-4b31-a2fb-f64799a7e0c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0b14cd1b-c9ab-4d44-8b36-b65acdb4f9ad",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 59,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3175113e-e240-41a9-b59c-242f9dbae1df",
                  "parentUUID": "0b14cd1b-c9ab-4d44-8b36-b65acdb4f9ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3175113e-e240-41a9-b59c-242f9dbae1df"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a11f5a6f-5238-41e4-8592-5c72f281bb6c",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cc2f9204-a3a3-4a15-902a-ded8147188ee",
                  "parentUUID": "a11f5a6f-5238-41e4-8592-5c72f281bb6c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc2f9204-a3a3-4a15-902a-ded8147188ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "54ae9e5c-b741-4014-ad91-e7c3f4e2a474",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2a1c9985-7b00-49b4-9519-ed4cb7e792a1",
                  "parentUUID": "54ae9e5c-b741-4014-ad91-e7c3f4e2a474",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2a1c9985-7b00-49b4-9519-ed4cb7e792a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fffa0d01-8cac-4de5-91fa-7dd14d3104cc",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7ac5e470-41f1-442e-9db5-402f6675e08d",
                  "parentUUID": "fffa0d01-8cac-4de5-91fa-7dd14d3104cc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7ac5e470-41f1-442e-9db5-402f6675e08d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d60ca508-8570-4b18-8d55-28b681991bc6",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "edd6f168-c981-4d90-a10c-caf5a56207eb",
                  "parentUUID": "d60ca508-8570-4b18-8d55-28b681991bc6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "edd6f168-c981-4d90-a10c-caf5a56207eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "586f030a-930d-4758-bd85-520a7cf10347",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "6c3c0aa9-6cf5-4572-b000-c0d68c0c7120",
                  "parentUUID": "586f030a-930d-4758-bd85-520a7cf10347",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6c3c0aa9-6cf5-4572-b000-c0d68c0c7120"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "871258a6-8758-4781-b9cf-ccc9c8e8fe7d",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "134f7b94-1989-4a69-851d-7e1652da9289",
                  "parentUUID": "871258a6-8758-4781-b9cf-ccc9c8e8fe7d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "134f7b94-1989-4a69-851d-7e1652da9289"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e7b9157b-4db2-404e-9fcc-f6e8817573cd",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "92668852-3b34-48ea-b8d8-207c84ea7085",
                  "parentUUID": "e7b9157b-4db2-404e-9fcc-f6e8817573cd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "92668852-3b34-48ea-b8d8-207c84ea7085"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8ffb93d0-1146-483a-8ac4-8f8c56c7e050",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cf67cc66-d315-4231-9281-c692d6e37734",
                  "parentUUID": "8ffb93d0-1146-483a-8ac4-8f8c56c7e050",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf67cc66-d315-4231-9281-c692d6e37734"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6c33c8c4-b2e3-4b62-b231-949a15be46db",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet firstSupplierId;\nagent.get('/api/suppliers')\n.then(function(res){\n    firstSupplierId = res.body[0].id;\n    agent.post('/api/restockOrder')\n    .send(myrestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "d6e4bf85-f1e5-4880-af51-c941467982cd",
                  "parentUUID": "6c33c8c4-b2e3-4b62-b231-949a15be46db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6e4bf85-f1e5-4880-af51-c941467982cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5fe55540-35c7-40fa-9442-228b0c115ec9",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "473c4b58-69d9-4d1d-acaa-32727c518556",
                  "parentUUID": "5fe55540-35c7-40fa-9442-228b0c115ec9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "473c4b58-69d9-4d1d-acaa-32727c518556"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f9b5900e-b068-4510-a5ed-767a96c54ded",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cf408ce3-60aa-4c1d-b6cb-68d8791c1850",
                  "parentUUID": "f9b5900e-b068-4510-a5ed-767a96c54ded",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf408ce3-60aa-4c1d-b6cb-68d8791c1850"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e2086090-fa64-4f85-9ea9-4c927ed38e3e",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "49b75a38-b6df-49d6-bb4b-896b8646c467",
                  "parentUUID": "e2086090-fa64-4f85-9ea9-4c927ed38e3e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49b75a38-b6df-49d6-bb4b-896b8646c467"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "baeb53c9-f41c-47b3-9cbb-9006429f70c4",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "d7820b35-dc27-48f9-9d7c-fda2439ca6c8",
                  "parentUUID": "baeb53c9-f41c-47b3-9cbb-9006429f70c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d7820b35-dc27-48f9-9d7c-fda2439ca6c8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a12adaec-8a71-4ca3-bc2a-f745945c02d3",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "e9c40183-5d9e-4b95-8e47-cf4d2289f74f",
                  "parentUUID": "a12adaec-8a71-4ca3-bc2a-f745945c02d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9c40183-5d9e-4b95-8e47-cf4d2289f74f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0cab8493-d6f4-4186-bdb0-bce1e9b52b40",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2e0b03b7-1b9f-4a44-beee-66d21c3912f5",
                  "parentUUID": "0cab8493-d6f4-4186-bdb0-bce1e9b52b40",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e0b03b7-1b9f-4a44-beee-66d21c3912f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "526601be-5cca-4df6-b64e-0377cac1337d",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "da406838-ac45-4dae-9669-6555b5b106e2",
                  "parentUUID": "526601be-5cca-4df6-b64e-0377cac1337d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "da406838-ac45-4dae-9669-6555b5b106e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "57760d5f-5518-4948-9e28-9c6528e07782",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "e1e7be52-4f3c-4e86-9ec4-837a89b13d83",
                  "parentUUID": "57760d5f-5518-4948-9e28-9c6528e07782",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1e7be52-4f3c-4e86-9ec4-837a89b13d83"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f31483ee-ec04-46de-a585-7f05ee3c7115",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":allskuitems})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "e230a963-4be7-4ffa-8313-c54b9a5af0b7",
                  "parentUUID": "f31483ee-ec04-46de-a585-7f05ee3c7115",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e230a963-4be7-4ffa-8313-c54b9a5af0b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "453410ed-fa73-4f0a-8d75-320082615294",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send(null)\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "67d3b6fb-ecfd-4203-8a86-0c82bf45ca37",
                  "parentUUID": "453410ed-fa73-4f0a-8d75-320082615294",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "67d3b6fb-ecfd-4203-8a86-0c82bf45ca37"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2f464b3d-160c-47b1-b85b-624adea967a7",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "18f6d1bf-5be5-4780-9804-0da7086598bf",
                  "parentUUID": "2f464b3d-160c-47b1-b85b-624adea967a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18f6d1bf-5be5-4780-9804-0da7086598bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ab4d9b91-2737-4e18-8a25-faa4bd855067",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "b019e47d-7c96-4c30-a6a3-8f36b6c1f8e6",
                  "parentUUID": "ab4d9b91-2737-4e18-8a25-faa4bd855067",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b019e47d-7c96-4c30-a6a3-8f36b6c1f8e6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ea7ad8c3-ddce-4cb5-a287-d10e58f868a7",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "a423ecf9-66bb-4445-a3d5-e4d25574ba06",
                  "parentUUID": "ea7ad8c3-ddce-4cb5-a287-d10e58f868a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a423ecf9-66bb-4445-a3d5-e4d25574ba06"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c6a978d6-3a19-440f-96bd-ae9aecc150d8",
              "title": "put /api/restockOrder/:id/transportNote",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 10000;\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2021/12/29\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "83a41921-fd9a-4e99-af4b-d36ac34abe2b",
                  "parentUUID": "c6a978d6-3a19-440f-96bd-ae9aecc150d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83a41921-fd9a-4e99-af4b-d36ac34abe2b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "71806c25-efc0-4047-94aa-60d52f783f45",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "3f59cd0b-0bb2-4091-ae69-0f421e0011c5",
                  "parentUUID": "71806c25-efc0-4047-94aa-60d52f783f45",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3f59cd0b-0bb2-4091-ae69-0f421e0011c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b54f8b1a-4ef9-471a-bc4e-f8cf4a688d93",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "c4da6fee-92ad-4296-bf29-5340b96359fc",
                  "parentUUID": "b54f8b1a-4ef9-471a-bc4e-f8cf4a688d93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c4da6fee-92ad-4296-bf29-5340b96359fc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6e8a04f5-0250-4133-9cfe-6e0e3650f141",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test RestockOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "a605ac6c-3b49-4b5b-af87-1f48c6509c64",
                  "parentUUID": "6e8a04f5-0250-4133-9cfe-6e0e3650f141",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a605ac6c-3b49-4b5b-af87-1f48c6509c64"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "57981145-7c43-4326-8aa5-b18d42602da6",
          "title": "Test ReturnOrder CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2729509f-9e19-4afb-bdc2-bf401b955d55",
              "title": "Removing all return orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test ReturnOrder CRUD features Removing all return orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/returnOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6975509d-5312-478e-b5d2-59f4b688c866",
                  "parentUUID": "2729509f-9e19-4afb-bdc2-bf401b955d55",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6975509d-5312-478e-b5d2-59f4b688c866"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "10ea1256-a964-45aa-8514-48477f39a48b",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Test ReturnOrder CRUD features Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "245ae20d-ce6b-40bc-b2a6-1b8c0120044f",
                  "parentUUID": "10ea1256-a964-45aa-8514-48477f39a48b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "245ae20d-ce6b-40bc-b2a6-1b8c0120044f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9d1a9789-6b6b-49ba-8ba1-88d68d94f18f",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test ReturnOrder CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "237b51a5-9897-4dd2-b994-bb8a636b5e7a",
                  "parentUUID": "9d1a9789-6b6b-49ba-8ba1-88d68d94f18f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "237b51a5-9897-4dd2-b994-bb8a636b5e7a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5fc8595d-f461-4b79-8369-ba3af8062c93",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test ReturnOrder CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "55578363-186e-458b-963f-fece39586114",
                  "parentUUID": "5fc8595d-f461-4b79-8369-ba3af8062c93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "55578363-186e-458b-963f-fece39586114"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a290d69a-20e0-4aa5-836f-a1a56bf45c6b",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test ReturnOrder CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4eb6f56d-0ee9-44bf-b2c8-3703a17020c0",
                  "parentUUID": "a290d69a-20e0-4aa5-836f-a1a56bf45c6b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4eb6f56d-0ee9-44bf-b2c8-3703a17020c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4fa1f26e-a9b7-4b4e-abbc-3034fd8a23c6",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cb083956-20bd-4bfe-b428-dd803ec819c9",
                  "parentUUID": "4fa1f26e-a9b7-4b4e-abbc-3034fd8a23c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb083956-20bd-4bfe-b428-dd803ec819c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2d7a4264-68ea-4de4-bd75-3c38c93e4349",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fd3e6022-a594-4064-95d2-b2e7b9860a27",
                  "parentUUID": "2d7a4264-68ea-4de4-bd75-3c38c93e4349",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fd3e6022-a594-4064-95d2-b2e7b9860a27"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "05a56b45-3d70-41d8-b4fe-03ed2fad4084",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test ReturnOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "30b9ca84-d2e8-40e2-bfe5-7987fe0378f2",
                  "parentUUID": "05a56b45-3d70-41d8-b4fe-03ed2fad4084",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "30b9ca84-d2e8-40e2-bfe5-7987fe0378f2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "48f0cf23-35c0-4789-ade0-ba48e0b31a4d",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1ce3a39a-6cd1-43da-8b34-f7a2d84ede70",
                  "parentUUID": "48f0cf23-35c0-4789-ade0-ba48e0b31a4d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ce3a39a-6cd1-43da-8b34-f7a2d84ede70"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f752e0c6-0ffd-4abf-84d1-f2d2464911ee",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4760c6c7-e0f6-4b6e-a5bd-1bd8f2513068",
                  "parentUUID": "f752e0c6-0ffd-4abf-84d1-f2d2464911ee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4760c6c7-e0f6-4b6e-a5bd-1bd8f2513068"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "da3da1f8-c5b2-41e1-afb1-cadfa639ac8b",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f166dbd6-9b0e-4257-a869-a4e31876939b",
                  "parentUUID": "da3da1f8-c5b2-41e1-afb1-cadfa639ac8b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f166dbd6-9b0e-4257-a869-a4e31876939b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b7dff5a1-08c2-4833-acd7-534d1dae534a",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "150a8d4b-e757-4c70-a9a2-df7ec5eb7d89",
                  "parentUUID": "b7dff5a1-08c2-4833-acd7-534d1dae534a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "150a8d4b-e757-4c70-a9a2-df7ec5eb7d89"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d6aee71d-8799-4a3d-8610-0d9c06fa6e2c",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "18cec386-7ae4-4a76-ab12-b62e727f4e4c",
                  "parentUUID": "d6aee71d-8799-4a3d-8610-0d9c06fa6e2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18cec386-7ae4-4a76-ab12-b62e727f4e4c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "49005b8e-2b69-41fb-84a7-50ee5692b32b",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "0778548b-4050-4c0b-b76b-273964d30b39",
                  "parentUUID": "49005b8e-2b69-41fb-84a7-50ee5692b32b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0778548b-4050-4c0b-b76b-273964d30b39"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1e6aa2d7-7246-4aa2-894e-268fe4f7d5ca",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "b5f7c972-9b20-4eea-a98d-a7401ca2d36a",
                  "parentUUID": "1e6aa2d7-7246-4aa2-894e-268fe4f7d5ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b5f7c972-9b20-4eea-a98d-a7401ca2d36a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bfa0df38-ed30-4afc-8272-6d3e2762b826",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9625ddb0-b5de-49aa-ab48-ac6c34da51d4",
                  "parentUUID": "bfa0df38-ed30-4afc-8272-6d3e2762b826",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9625ddb0-b5de-49aa-ab48-ac6c34da51d4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5c1ae85e-7ba5-49e1-87e6-6991e61d6873",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4586fb58-caf7-4a93-892c-5b0ea5433e8e",
                  "parentUUID": "5c1ae85e-7ba5-49e1-87e6-6991e61d6873",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4586fb58-caf7-4a93-892c-5b0ea5433e8e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cd9d201c-51a1-459a-81b0-5b3d45330ec1",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "c510e667-e9a1-4cdc-a236-fc72fc7c71e8",
                  "parentUUID": "cd9d201c-51a1-459a-81b0-5b3d45330ec1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c510e667-e9a1-4cdc-a236-fc72fc7c71e8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a8ae509a-a3ae-44e6-88af-f219368edc4f",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Test ReturnOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "135b1f07-777c-4afc-bdef-6bb6fee7c846",
                  "parentUUID": "a8ae509a-a3ae-44e6-88af-f219368edc4f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "135b1f07-777c-4afc-bdef-6bb6fee7c846"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6af3b77a-401b-47c9-b8a0-e852e47e9f28",
              "title": " get /api/restockOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fb145f4f-a8f9-4e08-afca-d70cbb45c5ba",
                  "parentUUID": "6af3b77a-401b-47c9-b8a0-e852e47e9f28",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fb145f4f-a8f9-4e08-afca-d70cbb45c5ba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a56415a8-3263-4e51-a869-a1809048f994",
              "title": " get /api/restockOrderIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all restock order issued",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d152772a-05a2-408c-8e88-06f4e07927ff",
                  "parentUUID": "a56415a8-3263-4e51-a869-a1809048f994",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d152772a-05a2-408c-8e88-06f4e07927ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "975b923c-54d8-448f-82a2-1be2ab652bd8",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5e67892f-fee9-4596-b308-2d49ebd21395",
                  "parentUUID": "975b923c-54d8-448f-82a2-1be2ab652bd8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e67892f-fee9-4596-b308-2d49ebd21395"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "42862e9c-38dd-4a2f-95a1-638f2f3288fd",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c12c0ecc-3f9e-4f4c-8ca3-8cba7930e036",
                  "parentUUID": "42862e9c-38dd-4a2f-95a1-638f2f3288fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c12c0ecc-3f9e-4f4c-8ca3-8cba7930e036"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e96aaf91-f339-4d08-809d-d37d52fe9ab7",
              "title": " post /api/returnOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a return order",
                  "fullTitle": "Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/returnOrder')\n.send(myretord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "dfef902f-e50d-4a75-b388-4724fb1aa541",
                  "parentUUID": "e96aaf91-f339-4d08-809d-d37d52fe9ab7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dfef902f-e50d-4a75-b388-4724fb1aa541"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bd97d1f8-01d8-43c2-9e63-716cf48e4593",
              "title": " get /api/returnOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all return orders",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders  get all return orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idrestockorders = ids.getIdRestockOrdersIssued();\n    let idretord = [];\n    res.body.length.should.be.eql(myretord.length);\n    for(let i = 0; i<res.body.length; i++){\n        idretord[i] = res.body[i].id;\n        res.body[i].returnDate.should.equal(myretord[i].returnDate);\n        res.body[i].restockOrderId.should.equal(idrestockorders[myretord[i].restockOrderId]);\n    }\n    ids.setIdReturnOrders(idretord);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "92be9138-2f22-4bab-a073-0b822712d276",
                  "parentUUID": "bd97d1f8-01d8-43c2-9e63-716cf48e4593",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "92be9138-2f22-4bab-a073-0b822712d276"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "abde0f61-c281-4b71-a12f-167b5a391d89",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsret = ids.getIdReturnOrders();\n//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+idsret[id])\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.returnDate.should.equal(myretord.returnDate);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "297b7973-d43e-42ab-a949-9af71357670b",
                  "parentUUID": "abde0f61-c281-4b71-a12f-167b5a391d89",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "297b7973-d43e-42ab-a949-9af71357670b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cdcf30fa-6d8c-4690-adfc-86c52b642ee6",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1c6e08b1-50c9-4c6d-a0e2-c013fc16f28a",
                  "parentUUID": "cdcf30fa-6d8c-4690-adfc-86c52b642ee6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c6e08b1-50c9-4c6d-a0e2-c013fc16f28a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8a207891-29a0-4b95-8333-408d3fb67386",
              "title": " get /api/returnOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get return order by id",
                  "fullTitle": "Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9a418cca-7e8d-4861-a078-4fd0df060878",
                  "parentUUID": "8a207891-29a0-4b95-8333-408d3fb67386",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a418cca-7e8d-4861-a078-4fd0df060878"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "40d13fa6-1924-43a2-930f-46857b0b5fcc",
          "title": "Test Internal Order CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "95d6b7ac-241b-4b59-b6bc-73c75127e8f9",
              "title": "Removing all Internal Orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Interna Orders",
                  "fullTitle": "Test Internal Order CRUD features Removing all Internal Orders Getting Interna Orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/internalOrders/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "ec7ebc59-4d3a-478e-a649-4426735afa50",
                  "parentUUID": "95d6b7ac-241b-4b59-b6bc-73c75127e8f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ec7ebc59-4d3a-478e-a649-4426735afa50"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5899832e-4a98-4bda-9b33-1339ea8c95a0",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Internal Order CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "d8cb75c6-0611-4a76-a341-3286a6b9be13",
                  "parentUUID": "5899832e-4a98-4bda-9b33-1339ea8c95a0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d8cb75c6-0611-4a76-a341-3286a6b9be13"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c220c227-87b6-424d-808c-8f8fc0aa474c",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Internal Order CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "adf00371-9b64-484a-879d-8e21cc49c3b4",
                  "parentUUID": "c220c227-87b6-424d-808c-8f8fc0aa474c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "adf00371-9b64-484a-879d-8e21cc49c3b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0d82b4a6-610b-473d-ae62-d88321c4b180",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test Internal Order CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "795c46c4-7fd4-4642-b1f6-d5e94d9fa3af",
                  "parentUUID": "0d82b4a6-610b-473d-ae62-d88321c4b180",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "795c46c4-7fd4-4642-b1f6-d5e94d9fa3af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "097070e2-0c34-415d-abb2-1fb4a585b90b",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "ccdb9347-1372-4904-93c4-1515d38770ab",
                  "parentUUID": "097070e2-0c34-415d-abb2-1fb4a585b90b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ccdb9347-1372-4904-93c4-1515d38770ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fbbbedf3-5d65-49ea-8d4d-af9753ba2842",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5a070677-91f4-465b-b9d1-4ca952e163ae",
                  "parentUUID": "fbbbedf3-5d65-49ea-8d4d-af9753ba2842",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a070677-91f4-465b-b9d1-4ca952e163ae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9f2d682f-897a-471b-af41-e5348b4e8c3c",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test Internal Order CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7e891339-243f-4ce6-a947-cf01674633ce",
                  "parentUUID": "9f2d682f-897a-471b-af41-e5348b4e8c3c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7e891339-243f-4ce6-a947-cf01674633ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "345b7b2f-2ff3-400e-b5de-f608a24133e5",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Internal Order CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "72aa7b47-11da-445e-a392-9df0ca86d53a",
                  "parentUUID": "345b7b2f-2ff3-400e-b5de-f608a24133e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "72aa7b47-11da-445e-a392-9df0ca86d53a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "904675e5-80b8-4a19-924e-3f904d1ba026",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                  "err": {},
                  "uuid": "b8fc3b9f-600d-497b-ba74-387459730c1d",
                  "parentUUID": "904675e5-80b8-4a19-924e-3f904d1ba026",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8fc3b9f-600d-497b-ba74-387459730c1d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "583d022f-aac7-4f15-86b1-c0315aa89557",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                  "err": {},
                  "uuid": "d42a79b9-70ad-41b8-aa58-05d324ef8187",
                  "parentUUID": "583d022f-aac7-4f15-86b1-c0315aa89557",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d42a79b9-70ad-41b8-aa58-05d324ef8187"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1418492a-333a-4850-aa20-4ff146cad807",
              "title": " post /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new internal order",
                  "fullTitle": "Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//console.log(currentInternalOrders[ith]);\nagent.post('/api/internalOrders')\n.send(intord)\n.then(function(res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "f7f83b0e-358c-499b-83e9-4b8aeec03813",
                  "parentUUID": "1418492a-333a-4850-aa20-4ff146cad807",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f7f83b0e-358c-499b-83e9-4b8aeec03813"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3743c69b-e60f-49b6-9ad1-2144791d5971",
              "title": " get /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all internal orders",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "73246f7c-8bb5-4cde-8c89-cde563c3c417",
                  "parentUUID": "3743c69b-e60f-49b6-9ad1-2144791d5971",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "73246f7c-8bb5-4cde-8c89-cde563c3c417"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0a6a4c35-91ac-4b44-8c52-bb4dcc4d62c5",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "0bf2945c-5ce0-40fb-9cb1-d5c8534b2673",
                  "parentUUID": "0a6a4c35-91ac-4b44-8c52-bb4dcc4d62c5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0bf2945c-5ce0-40fb-9cb1-d5c8534b2673"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1f96b3d6-fcc3-4033-af5a-73d59fdd1319",
              "title": " put /api/internalOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify the state of an IO",
                  "fullTitle": "Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "c218d066-c7ae-48fd-88f2-ef46345cd4a7",
                  "parentUUID": "1f96b3d6-fcc3-4033-af5a-73d59fdd1319",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c218d066-c7ae-48fd-88f2-ef46345cd4a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dee70de7-93e1-4007-961c-235175486935",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b4913b3a-bb34-4669-b596-9280ecd749dd",
                  "parentUUID": "dee70de7-93e1-4007-961c-235175486935",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b4913b3a-bb34-4669-b596-9280ecd749dd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "52f11ed6-7f57-40b6-8fe2-c61a71f49ba3",
              "title": " get /api/internalOrdersIssued",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrieve all internal order in state issued",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrdersAccepted')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order accepted', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3aade5ef-31dd-46fd-9466-e80929358c92",
                  "parentUUID": "52f11ed6-7f57-40b6-8fe2-c61a71f49ba3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3aade5ef-31dd-46fd-9466-e80929358c92"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "91f2b719-dcf8-4ddb-97c2-b696b8e58fdb",
              "title": " put /api/internalOrders/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify the state of an IO",
                  "fullTitle": "Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "f3682ca8-daca-4418-a235-725df0d9404e",
                  "parentUUID": "91f2b719-dcf8-4ddb-97c2-b696b8e58fdb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f3682ca8-daca-4418-a235-725df0d9404e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "308919f9-cb05-4543-92c5-2ad33e5d06b4",
              "title": " get /api/internalOrders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all internal orders",
                  "fullTitle": "Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bd83d771-a32b-4350-a9f4-98a3619ec395",
                  "parentUUID": "308919f9-cb05-4543-92c5-2ad33e5d06b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd83d771-a32b-4350-a9f4-98a3619ec395"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0705154f-749b-4cce-b3f8-4dbd80450812",
          "title": "Test Item CRUD features",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "416bfb5d-5865-4d6a-87dd-f696a1fbe4c6",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Item CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "08754890-6d81-4576-9542-72dd2ebdd552",
                  "parentUUID": "416bfb5d-5865-4d6a-87dd-f696a1fbe4c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "08754890-6d81-4576-9542-72dd2ebdd552"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b40c2ab9-a3c2-41b5-acbc-15e0b6b27ae5",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Item CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "4f7e4c68-2323-4da2-aec4-96023cbbcf19",
                  "parentUUID": "b40c2ab9-a3c2-41b5-acbc-15e0b6b27ae5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f7e4c68-2323-4da2-aec4-96023cbbcf19"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "744330f3-779f-473d-9ed3-76b4a8ccbd65",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Test Item CRUD features removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6fca2918-c0f9-4796-8d58-840829223c9a",
                  "parentUUID": "744330f3-779f-473d-9ed3-76b4a8ccbd65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6fca2918-c0f9-4796-8d58-840829223c9a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5c2f8219-fa1f-4442-ab17-ee2463028353",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Test Item CRUD features  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3617ed76-6673-47f4-8761-3fc5cd7f40fd",
                  "parentUUID": "5c2f8219-fa1f-4442-ab17-ee2463028353",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3617ed76-6673-47f4-8761-3fc5cd7f40fd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cf53b673-1a57-4a87-9bcd-4197045f110f",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "b99b8a22-da91-4a45-b6ae-7e285df2af5c",
                  "parentUUID": "cf53b673-1a57-4a87-9bcd-4197045f110f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b99b8a22-da91-4a45-b6ae-7e285df2af5c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "597f5528-2977-4787-bfc0-27a7426e7122",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d9e96785-d2f9-4cac-9c44-1bd0c8919954",
                  "parentUUID": "597f5528-2977-4787-bfc0-27a7426e7122",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9e96785-d2f9-4cac-9c44-1bd0c8919954"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d0c2c8db-9baf-42be-bbdc-3989014a25af",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Test Item CRUD features get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "40a9c55d-45df-4137-b405-bcd39ddb6408",
                  "parentUUID": "d0c2c8db-9baf-42be-bbdc-3989014a25af",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "40a9c55d-45df-4137-b405-bcd39ddb6408"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1ee35078-8888-448e-a419-d1c1d634feea",
              "title": "Removing all Items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Items",
                  "fullTitle": "Test Item CRUD features Removing all Items Getting Items",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "8ee3a44d-1de6-449a-a9be-4111a9dbb624",
                  "parentUUID": "1ee35078-8888-448e-a419-d1c1d634feea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8ee3a44d-1de6-449a-a9be-4111a9dbb624"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1570ac52-7a7d-4889-89e0-338b25008a22",
              "title": " get /api/items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all items",
                  "fullTitle": "Test Item CRUD features  get /api/items Getting all items",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "e4e3ad9b-c3ad-4c37-b21e-3574426fc5c7",
                  "parentUUID": "1570ac52-7a7d-4889-89e0-338b25008a22",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e4e3ad9b-c3ad-4c37-b21e-3574426fc5c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "051a2efc-ac38-4f98-a834-dd008915f1f9",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "42b35344-a6b7-4d64-b37a-c103feedb1a5",
                  "parentUUID": "051a2efc-ac38-4f98-a834-dd008915f1f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "42b35344-a6b7-4d64-b37a-c103feedb1a5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "83aa8acc-e55e-42f5-8377-34fb2826172d",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8b0cdb01-b24c-4e08-8956-4379f12f9bde",
                  "parentUUID": "83aa8acc-e55e-42f5-8377-34fb2826172d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8b0cdb01-b24c-4e08-8956-4379f12f9bde"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6ea3365b-96aa-47a7-9913-439dfd50e07f",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Test Item CRUD features  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f6adad27-611a-4598-b3ff-6581ef23305a",
                  "parentUUID": "6ea3365b-96aa-47a7-9913-439dfd50e07f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f6adad27-611a-4598-b3ff-6581ef23305a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "782abce5-a3a0-47c5-a41c-45276dbebb1b",
              "title": "post /api/item/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding item details",
                  "fullTitle": "Test Item CRUD features post /api/item/ Adding item details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "8194258d-c6ed-4e52-aff1-f64917f0c53c",
                  "parentUUID": "782abce5-a3a0-47c5-a41c-45276dbebb1b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8194258d-c6ed-4e52-aff1-f64917f0c53c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e790d5fa-90f4-4cb7-aac9-ccb58adf93b6",
              "title": "post /api/item/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding item details",
                  "fullTitle": "Test Item CRUD features post /api/item/ Adding item details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "273ea62e-32df-49fa-8c8e-951d3767bc38",
                  "parentUUID": "e790d5fa-90f4-4cb7-aac9-ccb58adf93b6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "273ea62e-32df-49fa-8c8e-951d3767bc38"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3faeb08e-730c-4472-949f-0f56e7465401",
              "title": " get /api/items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting all items",
                  "fullTitle": "Test Item CRUD features  get /api/items Getting all items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "deec9ae6-329f-48b5-9c55-ca0ff9229d21",
                  "parentUUID": "3faeb08e-730c-4472-949f-0f56e7465401",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "deec9ae6-329f-48b5-9c55-ca0ff9229d21"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1674b87a-e037-4df2-9f6e-39ccf8446f72",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+itemid)\n.then(r => {\n    let idskus = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(r.status, expCode);\n    if (r.status == 200) {\n        r.body.should.be.a('object');\n        r.body.id.should.equal(itemid);\n        r.body.description.should.equal(myexpitem.description);\n        r.body.price.should.equal(myexpitem.price);\n        r.body.SKUId.should.equal(idskus[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "2b1322d2-3bab-43ab-add9-8836e3854049",
                  "parentUUID": "1674b87a-e037-4df2-9f6e-39ccf8446f72",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b1322d2-3bab-43ab-add9-8836e3854049"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "58e28acf-ac7b-4e08-943e-9e45015e9de3",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "6e84af58-7cf6-4b37-9f55-a3fc3cd71ba3",
                  "parentUUID": "58e28acf-ac7b-4e08-943e-9e45015e9de3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6e84af58-7cf6-4b37-9f55-a3fc3cd71ba3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5dbafa2e-1012-4764-bba3-aacaba4e9885",
              "title": "get /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Gettim item details",
                  "fullTitle": "Test Item CRUD features get /api/items/:id Gettim item details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "14067ae2-977f-45c8-a139-a71a7f1c317d",
                  "parentUUID": "5dbafa2e-1012-4764-bba3-aacaba4e9885",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "14067ae2-977f-45c8-a139-a71a7f1c317d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6a1edc99-6d81-494e-ab2b-4529f14ba4ec",
              "title": " put /api/item/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Modify an item given its ID and new fields",
                  "fullTitle": "Test Item CRUD features  put /api/item/:id Modify an item given its ID and new fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/item/'+ith)\n.send(updateItem(newDescription, newPrice))\n.then(res => {\n    let idsku = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(res.status, expCode);\n    agent.get('/api/items/'+ith)\n    .then (r => {\n        console.log(r.body);\n        assert.equal(r.status,200);\n        r.body.should.be.a('object');\n        r.body.id.should.equal(myexpitem.id);\n        r.body.description.should.equal(newDescription);\n        r.body.price.should.equal(newPrice);\n        r.body.SKUId.should.equal(idsku[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    });\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "06fe0b71-f9c9-49a0-af9d-798aae1210a8",
                  "parentUUID": "6a1edc99-6d81-494e-ab2b-4529f14ba4ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "06fe0b71-f9c9-49a0-af9d-798aae1210a8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4497858e-2380-4ebb-81a0-a7213c8d8f05",
              "title": " delete /api/items/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete an item given its id",
                  "fullTitle": "Test Item CRUD features  delete /api/items/:id Delete an item given its id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/items/'+ith)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "51e12baa-83ac-4ddd-8d2e-876e6a3a637b",
                  "parentUUID": "4497858e-2380-4ebb-81a0-a7213c8d8f05",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "51e12baa-83ac-4ddd-8d2e-876e6a3a637b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1e929bad-d9cc-470e-964d-07b12deae3cc",
              "title": "Removing all Items",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Items",
                  "fullTitle": "Test Item CRUD features Removing all Items Getting Items",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "b2159629-b0e6-478a-882e-f582fc80e948",
                  "parentUUID": "1e929bad-d9cc-470e-964d-07b12deae3cc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2159629-b0e6-478a-882e-f582fc80e948"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "04c46149-973e-42ed-8b3e-774ed1b39993",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Test Item CRUD features removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "68467c4e-52c7-4b3b-aab8-0b743f86b05e",
                  "parentUUID": "04c46149-973e-42ed-8b3e-774ed1b39993",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "68467c4e-52c7-4b3b-aab8-0b743f86b05e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "43326971-cec0-406c-a1a7-c346f131f157",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Test Item CRUD features removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "e60a217e-a6f8-4487-a5c8-8712ccdd7de2",
                  "parentUUID": "43326971-cec0-406c-a1a7-c346f131f157",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e60a217e-a6f8-4487-a5c8-8712ccdd7de2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a4d6666f-d8a1-4c8f-bfc6-c692dc5465bd",
          "title": "Testing Functional requirements",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7febbc0c-5e1f-40ec-b3bf-9c372b29c23d",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Testing Functional requirements  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "fdab332d-51aa-4f2a-888d-d2ba441d80f4",
                  "parentUUID": "7febbc0c-5e1f-40ec-b3bf-9c372b29c23d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fdab332d-51aa-4f2a-888d-d2ba441d80f4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2e69632b-b0a3-4eae-84c7-cd4cb5b4510a",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "04ae9336-b001-4d6e-8c44-490879069d1a",
                  "parentUUID": "2e69632b-b0a3-4eae-84c7-cd4cb5b4510a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "04ae9336-b001-4d6e-8c44-490879069d1a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f01532c0-da61-4549-8a54-9bdb00647126",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "Testing Functional requirements Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "4f3551e9-95a4-457b-94c7-65b28f2e6c74",
                  "parentUUID": "f01532c0-da61-4549-8a54-9bdb00647126",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f3551e9-95a4-457b-94c7-65b28f2e6c74"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f3a29df9-6134-4292-9e67-27b9a81249ea",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Testing Functional requirements removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9378de9a-1a3c-4e3e-88d8-1d729d9c04aa",
                  "parentUUID": "f3a29df9-6134-4292-9e67-27b9a81249ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9378de9a-1a3c-4e3e-88d8-1d729d9c04aa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3c7543ae-195f-4861-b920-dcb5daaf94d0",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "0e03623b-4288-4520-927c-420a09a99a3a",
                  "parentUUID": "3c7543ae-195f-4861-b920-dcb5daaf94d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e03623b-4288-4520-927c-420a09a99a3a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d94c299b-820f-458f-b667-7853464245c9",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Testing Functional requirements Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "d5108701-d9b2-43b7-9711-3e978ce2c3c7",
                  "parentUUID": "d94c299b-820f-458f-b667-7853464245c9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5108701-d9b2-43b7-9711-3e978ce2c3c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c9d799c8-4d60-4cfe-b13a-8b6bbfdbace3",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 60,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cba0c0ce-13f8-492f-b0ec-19f215bc160d",
                  "parentUUID": "c9d799c8-4d60-4cfe-b13a-8b6bbfdbace3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cba0c0ce-13f8-492f-b0ec-19f215bc160d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 60,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bbafca70-3067-47ec-ae01-0125c953df48",
              "title": " put /api/users/:username",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 b -> Modify an existing user",
                  "fullTitle": "Testing Functional requirements  put /api/users/:username FR 1.1 b -> Modify an existing user",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "6bd694bc-e156-419a-9566-411c4059f94e",
                  "parentUUID": "bbafca70-3067-47ec-ae01-0125c953df48",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6bd694bc-e156-419a-9566-411c4059f94e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f6ae6d05-5077-4e19-ab66-f6c72b75bd4e",
              "title": " get /api/users/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.3 -> List all users",
                  "fullTitle": "Testing Functional requirements  get /api/users/ FR 1.3 -> List all users",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "27a9380f-64fb-49ce-a8ab-ad506cc4306f",
                  "parentUUID": "f6ae6d05-5077-4e19-ab66-f6c72b75bd4e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27a9380f-64fb-49ce-a8ab-ad506cc4306f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "65c93181-042a-4e5c-8c2d-684a8762add3",
              "title": " delete /api/users/:username/:type",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.2 -> Delete a user",
                  "fullTitle": "Testing Functional requirements  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5898af00-d801-406f-9f78-b6d6bed03aac",
                  "parentUUID": "65c93181-042a-4e5c-8c2d-684a8762add3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5898af00-d801-406f-9f78-b6d6bed03aac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "326f806e-548a-4993-8226-6fe54a090c9e",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d7a8e203-b0fd-4855-832c-38819fb8a922",
                  "parentUUID": "326f806e-548a-4993-8226-6fe54a090c9e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d7a8e203-b0fd-4855-832c-38819fb8a922"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1082c24e-1799-4732-99d6-17af7bc4c5bb",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5d6002b8-68d0-4a6e-b549-d5c8d424059e",
                  "parentUUID": "1082c24e-1799-4732-99d6-17af7bc4c5bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d6002b8-68d0-4a6e-b549-d5c8d424059e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bd4627df-878e-49fc-b780-89339459ab0e",
              "title": "put /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 b -> Modify an existing SKU",
                  "fullTitle": "Testing Functional requirements put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2958614c-cd3f-4f0a-87e2-eb634f6fd243",
                  "parentUUID": "bd4627df-878e-49fc-b780-89339459ab0e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2958614c-cd3f-4f0a-87e2-eb634f6fd243"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "80b48894-9a58-4f69-8f81-c656ca28f826",
              "title": "delete /api/sku/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.2 -> Delete a SKU",
                  "fullTitle": "Testing Functional requirements delete /api/sku/:id FR 2.2 -> Delete a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "7b0b4a3f-05f8-418e-bbae-6109e5248176",
                  "parentUUID": "80b48894-9a58-4f69-8f81-c656ca28f826",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b0b4a3f-05f8-418e-bbae-6109e5248176"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c2cf9e0a-1734-490f-bd04-88604db139d0",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "9142171c-409c-469b-b4d0-80ef481f8841",
                  "parentUUID": "c2cf9e0a-1734-490f-bd04-88604db139d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9142171c-409c-469b-b4d0-80ef481f8841"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "edb76157-2295-406d-8335-ebdcd6c9dce4",
              "title": "get /api/skus/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.4 -> Search a SKU",
                  "fullTitle": "Testing Functional requirements get /api/skus/:id FR 2.4 -> Search a SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "feb69808-1100-43bd-a821-e279f4f9f281",
                  "parentUUID": "edb76157-2295-406d-8335-ebdcd6c9dce4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "feb69808-1100-43bd-a821-e279f4f9f281"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "52ae77b8-d244-4ce2-b0ac-4cc708c2d8c7",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "527ecaa5-3de8-4cd3-a0e1-bbdb5343ffa4",
                  "parentUUID": "52ae77b8-d244-4ce2-b0ac-4cc708c2d8c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "527ecaa5-3de8-4cd3-a0e1-bbdb5343ffa4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c22f43bc-aa4d-4b19-a6ed-15d7d575fed2",
              "title": " put /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 b -> Modify an existing position",
                  "fullTitle": "Testing Functional requirements  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "c1d34cea-7fa3-4f2d-a92c-8b66213de585",
                  "parentUUID": "c22f43bc-aa4d-4b19-a6ed-15d7d575fed2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c1d34cea-7fa3-4f2d-a92c-8b66213de585"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bf2df451-d99c-4907-9371-f5f0ec3859ca",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d405b206-80ad-4979-ab9f-ca606bfaa5c4",
                  "parentUUID": "bf2df451-d99c-4907-9371-f5f0ec3859ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d405b206-80ad-4979-ab9f-ca606bfaa5c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "11d22731-2206-4052-b730-08b503d7071c",
              "title": " delete /api/position/:positionID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.2 -> Delete a position",
                  "fullTitle": "Testing Functional requirements  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "28e2e154-4a2b-493a-8f7e-e508c0aa8f13",
                  "parentUUID": "11d22731-2206-4052-b730-08b503d7071c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28e2e154-4a2b-493a-8f7e-e508c0aa8f13"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1b8fece3-f197-4acd-ab91-bdd69c6b8ef3",
              "title": "Removing all Positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting Positions",
                  "fullTitle": "Testing Functional requirements Removing all Positions Getting Positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "8805a67b-53a3-4811-a933-efc4ef6e53aa",
                  "parentUUID": "1b8fece3-f197-4acd-ab91-bdd69c6b8ef3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8805a67b-53a3-4811-a933-efc4ef6e53aa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2371f203-8f57-480e-8fa9-8633c10188b2",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1caf5fd7-dd8d-4022-9a0c-873e1c85a899",
                  "parentUUID": "2371f203-8f57-480e-8fa9-8633c10188b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1caf5fd7-dd8d-4022-9a0c-873e1c85a899"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ef96314b-f0ff-4b5e-80ce-448f4d2fea0d",
              "title": "post /api/position/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.1 a Define a new position",
                  "fullTitle": "Testing Functional requirements post /api/position/ FR 3.1.1 a Define a new position",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "1c745716-6028-4ebb-80b9-ae34aa8b149c",
                  "parentUUID": "ef96314b-f0ff-4b5e-80ce-448f4d2fea0d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c745716-6028-4ebb-80b9-ae34aa8b149c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cae055b9-4cea-4348-98d7-cbf94dacd952",
              "title": " get /api/positions",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.3 -> List all positions",
                  "fullTitle": "Testing Functional requirements  get /api/positions FR 3.1.3 -> List all positions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "b83c98a9-5c9e-472d-986d-3a9c62637e4e",
                  "parentUUID": "cae055b9-4cea-4348-98d7-cbf94dacd952",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b83c98a9-5c9e-472d-986d-3a9c62637e4e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "46564136-b5a5-47f8-b590-f0192926505d",
              "title": " put /api/position/:positionID/changeID",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 3.1.4 -> Modify attributes of a position",
                  "fullTitle": "Testing Functional requirements  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "958af8d4-3ce6-4c1c-a597-babe47aef5ac",
                  "parentUUID": "46564136-b5a5-47f8-b590-f0192926505d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "958af8d4-3ce6-4c1c-a597-babe47aef5ac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "282e0e84-4074-4bb4-a996-2d8d1b38fef8",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "d882061c-4ee3-4d50-8b18-51b4620996ee",
                  "parentUUID": "282e0e84-4074-4bb4-a996-2d8d1b38fef8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d882061c-4ee3-4d50-8b18-51b4620996ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d6f8a419-01b7-4bdc-ae4d-f9c767f3fe16",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "be995d55-afc6-4e27-a842-8540ff98d38b",
                  "parentUUID": "d6f8a419-01b7-4bdc-ae4d-f9c767f3fe16",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "be995d55-afc6-4e27-a842-8540ff98d38b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b65e01a3-803b-40f8-a5b1-6a333f5c85ba",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "12c0fb76-86de-4d0b-b7fa-da51815f7852",
                  "parentUUID": "b65e01a3-803b-40f8-a5b1-6a333f5c85ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12c0fb76-86de-4d0b-b7fa-da51815f7852"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3ddf2796-2776-423d-821b-01c0c77720c5",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "4d24b41c-282a-4ced-93c6-5d4fd6aeeaee",
                  "parentUUID": "3ddf2796-2776-423d-821b-01c0c77720c5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4d24b41c-282a-4ced-93c6-5d4fd6aeeaee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4c12ee24-3086-4842-8ed6-ec6bee2e51a7",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "60fff0bf-419e-4f66-a932-e3a37f2e2e31",
                  "parentUUID": "4c12ee24-3086-4842-8ed6-ec6bee2e51a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "60fff0bf-419e-4f66-a932-e3a37f2e2e31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9295dfa1-4190-4830-9e97-0fb063e36b40",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "57b6f98d-3a7e-4102-b288-3bde86c37f80",
                  "parentUUID": "9295dfa1-4190-4830-9e97-0fb063e36b40",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "57b6f98d-3a7e-4102-b288-3bde86c37f80"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c3950878-4e94-46aa-9006-3d30eeb58d0f",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Testing Functional requirements test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "770a649e-c829-4d14-865d-70cd634458f2",
                  "parentUUID": "c3950878-4e94-46aa-9006-3d30eeb58d0f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "770a649e-c829-4d14-865d-70cd634458f2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bc98fc7b-34ee-4b0b-ad1a-f54cb55509ae",
              "title": "Removing all Restock orders",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting and removing",
                  "fullTitle": "Testing Functional requirements Removing all Restock orders Getting and removing",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "c7619f9a-e020-48f0-b23f-063318ba5629",
                  "parentUUID": "bc98fc7b-34ee-4b0b-ad1a-f54cb55509ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c7619f9a-e020-48f0-b23f-063318ba5629"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f358ab41-b5b1-457f-a4fa-3c67f0d09264",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "b83ee9d5-fc46-4400-942b-1112c5397880",
                  "parentUUID": "f358ab41-b5b1-457f-a4fa-3c67f0d09264",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b83ee9d5-fc46-4400-942b-1112c5397880"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b838bb42-c11c-4bef-9838-40a2cf39822a",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "698cf553-1865-4fe5-8b63-cd9200e731a0",
                  "parentUUID": "b838bb42-c11c-4bef-9838-40a2cf39822a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "698cf553-1865-4fe5-8b63-cd9200e731a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c62dd08d-7f2b-4229-9416-5d20c6b22958",
              "title": " Delete all not manager",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cleaning db user util",
                  "fullTitle": "Testing Functional requirements  Delete all not manager Cleaning db user util",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d4b62917-9796-40ef-b1c2-b64f4264e9d1",
                  "parentUUID": "c62dd08d-7f2b-4229-9416-5d20c6b22958",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d4b62917-9796-40ef-b1c2-b64f4264e9d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "72852b98-837d-45c2-a478-340b08096dd0",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "45e1fedb-a018-4444-a141-a6de3869093b",
                  "parentUUID": "72852b98-837d-45c2-a478-340b08096dd0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "45e1fedb-a018-4444-a141-a6de3869093b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b1c1e514-3655-4530-af03-4e6d72640c32",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "8d54eca5-fc2b-4d11-96d0-2f1dc523777f",
                  "parentUUID": "b1c1e514-3655-4530-af03-4e6d72640c32",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d54eca5-fc2b-4d11-96d0-2f1dc523777f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7ee383cc-9251-4182-9bb2-3ef66a59a29c",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "d30276e3-bcff-4b46-b868-c52e3786799e",
                  "parentUUID": "7ee383cc-9251-4182-9bb2-3ef66a59a29c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d30276e3-bcff-4b46-b868-c52e3786799e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c2c298eb-fbb4-472a-9990-15ece9a2e445",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 64,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "79759569-4bf8-433e-b382-62f35a224f06",
                  "parentUUID": "c2c298eb-fbb4-472a-9990-15ece9a2e445",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79759569-4bf8-433e-b382-62f35a224f06"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 64,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "269dbd05-7c43-4ece-9151-592d0b4ac4df",
              "title": " post /api/newUser",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.1 a -> Define a new user",
                  "fullTitle": "Testing Functional requirements  post /api/newUser FR 1.1 a -> Define a new user",
                  "timedOut": false,
                  "duration": 60,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "65f28848-63c3-4d3f-b1b0-8f1b9646c76c",
                  "parentUUID": "269dbd05-7c43-4ece-9151-592d0b4ac4df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "65f28848-63c3-4d3f-b1b0-8f1b9646c76c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 60,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "77c656c2-1016-421b-b9f0-38d6531af55c",
              "title": " get /api/users/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 1.3 -> List all users",
                  "fullTitle": "Testing Functional requirements  get /api/users/ FR 1.3 -> List all users",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/users')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "855585f4-46d7-418b-9501-c90b5b0e2efb",
                  "parentUUID": "77c656c2-1016-421b-b9f0-38d6531af55c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "855585f4-46d7-418b-9501-c90b5b0e2efb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "78e006e3-149d-4c9b-9ec6-02b7fca3a66c",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "5f268a5f-1f64-4c32-9460-edfd0b712aff",
                  "parentUUID": "78e006e3-149d-4c9b-9ec6-02b7fca3a66c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f268a5f-1f64-4c32-9460-edfd0b712aff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e3e979f4-1412-411d-a19e-3746f9bff24a",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "21e042e8-9605-489e-8630-4b860b024411",
                  "parentUUID": "e3e979f4-1412-411d-a19e-3746f9bff24a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "21e042e8-9605-489e-8630-4b860b024411"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "518f6f04-481f-43cc-93d2-ddf7c21a066b",
              "title": " get /api/suppliers",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " get all suppliers",
                  "fullTitle": "Testing Functional requirements  get /api/suppliers  get all suppliers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bb053da8-2fd5-4442-a1fa-1e83cd650bc9",
                  "parentUUID": "518f6f04-481f-43cc-93d2-ddf7c21a066b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bb053da8-2fd5-4442-a1fa-1e83cd650bc9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "61648e96-3093-4a48-8ed7-9fba3aa047bf",
              "title": "post /api/restockOrder",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Create a restock order",
                  "fullTitle": "Testing Functional requirements post /api/restockOrder  Create a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "e444c714-7f09-4847-9609-8e1450514796",
                  "parentUUID": "61648e96-3093-4a48-8ed7-9fba3aa047bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e444c714-7f09-4847-9609-8e1450514796"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "596a9dc7-f072-4cf9-93f1-8f7b3d4220d8",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "035bac23-bc86-4e07-ac48-7bf46ceaa40f",
                  "parentUUID": "596a9dc7-f072-4cf9-93f1-8f7b3d4220d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "035bac23-bc86-4e07-ac48-7bf46ceaa40f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b5282365-aecd-4859-82a0-ed197af7f4a9",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "95f018f5-f6b5-46dc-8ff0-a2c3f66b91af",
                  "parentUUID": "b5282365-aecd-4859-82a0-ed197af7f4a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "95f018f5-f6b5-46dc-8ff0-a2c3f66b91af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "649b4c66-4e79-4216-b213-8f3942a8083f",
              "title": "put /api/restockOrder/:id",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Testing Functional requirements put /api/restockOrder/:id Change a state of a restock order",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                  "err": {},
                  "uuid": "5a07aa78-ebdb-4816-9f3a-cbf43f0d45e0",
                  "parentUUID": "649b4c66-4e79-4216-b213-8f3942a8083f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a07aa78-ebdb-4816-9f3a-cbf43f0d45e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5caf9443-93e6-42ab-8d08-7611ac8a372c",
              "title": "put /api/restockOrder/:id/skuItems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Change a state of a restock order",
                  "fullTitle": "Testing Functional requirements put /api/restockOrder/:id/skuItems Change a state of a restock order",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                  "err": {},
                  "uuid": "7d373103-733e-45d8-806c-030d9690beb2",
                  "parentUUID": "5caf9443-93e6-42ab-8d08-7611ac8a372c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d373103-733e-45d8-806c-030d9690beb2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bc9dceca-e54d-4d92-8bd6-ff1601c9137f",
              "title": "removing all skuitems",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUitems",
                  "fullTitle": "Testing Functional requirements removing all skuitems Getting SKUitems",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                  "err": {},
                  "uuid": "aaaa3278-46a2-46f2-b45d-62a94b2255b5",
                  "parentUUID": "bc9dceca-e54d-4d92-8bd6-ff1601c9137f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aaaa3278-46a2-46f2-b45d-62a94b2255b5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d7ca9203-9295-4db1-8460-76fdd3a4e5f7",
              "title": "removing all skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting SKUs",
                  "fullTitle": "Testing Functional requirements removing all skus Getting SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                  "err": {},
                  "uuid": "d462bbd7-ae6e-46f7-b1f7-d93eee9e1b38",
                  "parentUUID": "d7ca9203-9295-4db1-8460-76fdd3a4e5f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d462bbd7-ae6e-46f7-b1f7-d93eee9e1b38"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bb7f67bf-ef45-4f0c-8a62-a8dcd42e65d1",
              "title": "removing all test descriptors",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting test descriptors",
                  "fullTitle": "Testing Functional requirements removing all test descriptors Getting test descriptors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "bb518ae7-4afa-4a00-b4be-265124ea27dc",
                  "parentUUID": "bb7f67bf-ef45-4f0c-8a62-a8dcd42e65d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bb518ae7-4afa-4a00-b4be-265124ea27dc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c6938a97-c09e-48f6-a799-97adc67fa415",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "f5283c38-a0c1-41b7-b045-9bb61c0a20f4",
                  "parentUUID": "c6938a97-c09e-48f6-a799-97adc67fa415",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f5283c38-a0c1-41b7-b045-9bb61c0a20f4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f586c4ba-4c4c-4e3c-9b47-1962b4ba6be0",
              "title": "post /api/sku/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.1 a -> Define a new SKU",
                  "fullTitle": "Testing Functional requirements post /api/sku/ FR 2.1 a -> Define a new SKU",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "2fe7eb49-dd1c-48c0-a15e-5400210acff8",
                  "parentUUID": "f586c4ba-4c4c-4e3c-9b47-1962b4ba6be0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2fe7eb49-dd1c-48c0-a15e-5400210acff8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a664d9b0-e8e7-4f62-a7e6-98373e989bfc",
              "title": "get /api/skus",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "FR 2.3 -> List all SKUs",
                  "fullTitle": "Testing Functional requirements get /api/skus FR 2.3 -> List all SKUs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "00c31f3c-4072-41ed-89b4-1c92104dd124",
                  "parentUUID": "a664d9b0-e8e7-4f62-a7e6-98373e989bfc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "00c31f3c-4072-41ed-89b4-1c92104dd124"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c70f6d3e-955c-49d2-9c4d-d0a9e282c25e",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "3551ac1e-cffd-4533-9503-c18e5093cad4",
                  "parentUUID": "c70f6d3e-955c-49d2-9c4d-d0a9e282c25e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3551ac1e-cffd-4533-9503-c18e5093cad4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d127c2e9-6f08-4a88-8bdd-4c5c2420f26c",
              "title": "post /api/skuitem/",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adding skuitem details",
                  "fullTitle": "Testing Functional requirements post /api/skuitem/ Adding skuitem details",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "cf7cc131-632a-4906-9e24-00518f95cb03",
                  "parentUUID": "d127c2e9-6f08-4a88-8bdd-4c5c2420f26c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf7cc131-632a-4906-9e24-00518f95cb03"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2e4e9ba3-2caa-47c4-83a8-06503e8b3553",
              "title": "test adding a test descriptor with post",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Creating a test descriptor",
                  "fullTitle": "Testing Functional requirements test adding a test descriptor with post Creating a test descriptor",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "17cddb39-acbe-4b9c-9ee9-82da46a8f4a6",
                  "parentUUID": "2e4e9ba3-2caa-47c4-83a8-06503e8b3553",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "17cddb39-acbe-4b9c-9ee9-82da46a8f4a6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d1ca53ee-a3c1-4b8e-aa06-28a68ca2ce31",
              "title": "put /api/skutems/:rfid",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Editing SKUitems details passing its rfid",
                  "fullTitle": "Testing Functional requirements put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                  "err": {},
                  "uuid": "54b9ae34-cbe8-4f46-8025-5a112d755db9",
                  "parentUUID": "d1ca53ee-a3c1-4b8e-aa06-28a68ca2ce31",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "54b9ae34-cbe8-4f46-8025-5a112d755db9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "14f5270e-92fe-451f-8b34-0f2fe3684025",
          "title": "Testing Functional requirements pt2",
          "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
          "file": "/acceptanceTest/testEzWhAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7e4a1eb3-983f-4702-a0e7-94c611730b03",
              "title": "Test sku CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "c7e1488d-7155-439f-9d3c-b20a6a609962",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "f5e8e773-6fb3-4944-b30c-c3a53bcedf69",
                      "parentUUID": "c7e1488d-7155-439f-9d3c-b20a6a609962",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f5e8e773-6fb3-4944-b30c-c3a53bcedf69"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f61d7ece-49b1-4553-994f-a048afddf76d",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6bf1597b-2737-43d6-bc8c-4cd909a2d39b",
                      "parentUUID": "f61d7ece-49b1-4553-994f-a048afddf76d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6bf1597b-2737-43d6-bc8c-4cd909a2d39b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4d8780d1-80af-4762-9860-7af458cfee29",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2ce9db11-1c30-4ddf-8806-b35e47f3dfb4",
                      "parentUUID": "4d8780d1-80af-4762-9860-7af458cfee29",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2ce9db11-1c30-4ddf-8806-b35e47f3dfb4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3b64ab72-d016-4be1-9b80-1bff45a9288e",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1f9f3911-f737-488e-a36f-35337d539289",
                      "parentUUID": "3b64ab72-d016-4be1-9b80-1bff45a9288e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1f9f3911-f737-488e-a36f-35337d539289"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cb617921-eb3a-4e46-a05c-be6b33ec247d",
                  "title": "put /api/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 b -> Modify an existing SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features put /api/sku/:id FR 2.1 b -> Modify an existing SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid == null || skuid > id.length) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID)\n.send(skuEditedPost)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f40bc3d9-0980-44a3-a17e-f7d0f03a0682",
                      "parentUUID": "cb617921-eb3a-4e46-a05c-be6b33ec247d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f40bc3d9-0980-44a3-a17e-f7d0f03a0682"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9ac8495d-77c6-48ff-9082-7bb0f3dee2d6",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c7ba07e7-d476-49c0-bbe6-e1fe775a9cb8",
                      "parentUUID": "9ac8495d-77c6-48ff-9082-7bb0f3dee2d6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c7ba07e7-d476-49c0-bbe6-e1fe775a9cb8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4c380f64-a559-4fc0-90ab-57a80ad3c5b0",
                  "title": "put /api/sku/:id/position",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Changing SKU position passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features put /api/sku/:id/position Changing SKU position passing its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.put('/api/sku/'+procID+'/position')\n.send(pos)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d38b410f-4f98-4cc4-8872-54920af90e11",
                      "parentUUID": "4c380f64-a559-4fc0-90ab-57a80ad3c5b0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d38b410f-4f98-4cc4-8872-54920af90e11"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b68621a9-cdbe-4fba-aa32-e1567beed683",
                  "title": "delete /api/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.2 -> Delete a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features delete /api/sku/:id FR 2.2 -> Delete a SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nvar procID = id[ith];\nif (skuid != null) {\n    procID = skuid;\n}\nagent.delete('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "758a7800-9e73-41e3-bdb9-dec7217f0c06",
                      "parentUUID": "b68621a9-cdbe-4fba-aa32-e1567beed683",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "758a7800-9e73-41e3-bdb9-dec7217f0c06"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fa464507-a694-4041-8eb9-fb08df07e4ad",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0bdf9b82-7ad9-4f2c-9b03-15f669aae356",
                      "parentUUID": "fa464507-a694-4041-8eb9-fb08df07e4ad",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0bdf9b82-7ad9-4f2c-9b03-15f669aae356"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "62de157a-5abe-4d0c-9650-2409f8a6b6e4",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "18175a82-cbce-4fdc-a85d-4cf470be9512",
                      "parentUUID": "62de157a-5abe-4d0c-9650-2409f8a6b6e4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "18175a82-cbce-4fdc-a85d-4cf470be9512"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "808859aa-eb0e-410c-960c-2642687cd0cb",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d218d5f6-879b-420d-ac51-f87ed594ff4c",
                      "parentUUID": "808859aa-eb0e-410c-960c-2642687cd0cb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d218d5f6-879b-420d-ac51-f87ed594ff4c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d19a587c-f852-4cd7-9501-3fd3171a72fb",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "cca457e2-87e6-4625-8a97-0af53c6f5598",
                      "parentUUID": "d19a587c-f852-4cd7-9501-3fd3171a72fb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cca457e2-87e6-4625-8a97-0af53c6f5598"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "85ed65b4-8178-4ec2-9a7c-9806f985e281",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5aa06c69-5636-4cd8-9e09-2f5294d1c17e",
                      "parentUUID": "85ed65b4-8178-4ec2-9a7c-9806f985e281",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5aa06c69-5636-4cd8-9e09-2f5294d1c17e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6bddf3bf-a936-4a6f-9602-57d513cbef3a",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e420d715-d245-4b86-8283-3e5d5be7cd95",
                      "parentUUID": "6bddf3bf-a936-4a6f-9602-57d513cbef3a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e420d715-d245-4b86-8283-3e5d5be7cd95"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "61464009-9b36-407f-b425-80888de4d496",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ed7287b3-e305-4710-9764-ec20810757c2",
                      "parentUUID": "61464009-9b36-407f-b425-80888de4d496",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ed7287b3-e305-4710-9764-ec20810757c2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "27622020-07cd-46b9-9f98-78b68ca946b0",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3155ff33-9d65-47e4-aac1-1fd0697fb76f",
                      "parentUUID": "27622020-07cd-46b9-9f98-78b68ca946b0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3155ff33-9d65-47e4-aac1-1fd0697fb76f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "da61a2fc-4b65-46d7-a81e-36f2f9f12aa5",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "14b742c8-a395-480d-96a9-f49aedaf352e",
                      "parentUUID": "da61a2fc-4b65-46d7-a81e-36f2f9f12aa5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "14b742c8-a395-480d-96a9-f49aedaf352e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e2cf8da3-3ba0-446e-9cdc-544ac1de863b",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0109a3bd-13d2-4716-8d44-ed92ee5c774b",
                      "parentUUID": "e2cf8da3-3ba0-446e-9cdc-544ac1de863b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0109a3bd-13d2-4716-8d44-ed92ee5c774b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d9a7273f-d946-428c-8e23-28642f1c0456",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c678d4a6-a262-4800-b995-76508d003b7a",
                      "parentUUID": "d9a7273f-d946-428c-8e23-28642f1c0456",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c678d4a6-a262-4800-b995-76508d003b7a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "124ce28a-cb93-427f-9632-657f17f7d90b",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "199a2f57-df89-4a94-a37e-ee32a5a2e0b0",
                      "parentUUID": "124ce28a-cb93-427f-9632-657f17f7d90b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "199a2f57-df89-4a94-a37e-ee32a5a2e0b0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7103c5d1-7ac9-49f6-8c4f-b5fc0f9f93df",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c2eefb1f-ee11-4950-8da8-8356fff79467",
                      "parentUUID": "7103c5d1-7ac9-49f6-8c4f-b5fc0f9f93df",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c2eefb1f-ee11-4950-8da8-8356fff79467"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "af938ff6-5fee-4c1f-890c-3922e346ba31",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1d59f783-72cf-4764-879f-92cb35ee0726",
                      "parentUUID": "af938ff6-5fee-4c1f-890c-3922e346ba31",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1d59f783-72cf-4764-879f-92cb35ee0726"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ab190853-0d1a-4210-8529-ef54529f5ade",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6e307905-87e8-4062-9951-3c9ae5e89b1f",
                      "parentUUID": "ab190853-0d1a-4210-8529-ef54529f5ade",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6e307905-87e8-4062-9951-3c9ae5e89b1f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "49e3df1d-b6b2-45aa-9d7b-e9e4c6a5c965",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1e5b3702-2ffe-48b3-af94-3b908698ff02",
                      "parentUUID": "49e3df1d-b6b2-45aa-9d7b-e9e4c6a5c965",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1e5b3702-2ffe-48b3-af94-3b908698ff02"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4bd0acd3-dcdc-4e93-9354-1fc97def3cd1",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "46f4ce5f-dfe1-4c45-9128-8f6bf9bd0bc5",
                      "parentUUID": "4bd0acd3-dcdc-4e93-9354-1fc97def3cd1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "46f4ce5f-dfe1-4c45-9128-8f6bf9bd0bc5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c316b7ed-4350-48f0-aacb-d573c53dc9c6",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c788f313-6084-4131-a819-e2baa8dbe570",
                      "parentUUID": "c316b7ed-4350-48f0-aacb-d573c53dc9c6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c788f313-6084-4131-a819-e2baa8dbe570"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "eefb1a2d-675b-4965-acfc-10a6cadd677f",
                  "title": "get /api/skus/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.4 -> Search a SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features get /api/skus/:id FR 2.4 -> Search a SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet procID;\nif (skuid == null || skuid>id.length) {\n    procID = skuid;\n}\nelse{\n    procID = id[ith]\n}\nagent.get('/api/skus/'+procID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if (res.status > 200 && res.status < 299) {\n        res.body.should.be.a('object');\n        res.body.description.should.equal(sku[ith].description);\n        res.body.weight.should.equal(sku[ith].weight);\n        res.body.volume.should.equal(sku[ith].volume);\n        res.body.notes.should.equal(sku[ith].notes);\n        res.body.availableQuantity.should.equal(sku[ith].availableQuantity);\n        res.body.price.should.equal(sku[ith].price);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b1487360-9d2d-4f1c-89df-691f2c79694a",
                      "parentUUID": "eefb1a2d-675b-4965-acfc-10a6cadd677f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b1487360-9d2d-4f1c-89df-691f2c79694a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d35e3829-3bc5-486a-bd47-e1dad9adf14c",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test sku CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "1c8472df-df56-4685-b861-94c3b8e25827",
                      "parentUUID": "d35e3829-3bc5-486a-bd47-e1dad9adf14c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1c8472df-df56-4685-b861-94c3b8e25827"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "74d95a82-c4ce-4c06-87f6-3dfce6aedb52",
              "title": "Test skuitem CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "4f110114-0195-4ad1-be2e-ef54a9afe882",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "5dfd1605-b902-4823-8703-7a46a45e98bb",
                      "parentUUID": "4f110114-0195-4ad1-be2e-ef54a9afe882",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5dfd1605-b902-4823-8703-7a46a45e98bb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c4b42514-94cf-4ffd-ab21-02324881e6b7",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "62a1ce89-6826-44f2-be78-fca6a570ba0d",
                      "parentUUID": "c4b42514-94cf-4ffd-ab21-02324881e6b7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "62a1ce89-6826-44f2-be78-fca6a570ba0d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ae12fc6a-1016-4578-a333-23fd364551c5",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f8c279b1-955a-4392-94bd-719a5c00a3c4",
                      "parentUUID": "ae12fc6a-1016-4578-a333-23fd364551c5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f8c279b1-955a-4392-94bd-719a5c00a3c4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "43aabc5d-5510-4787-9a32-44f8ff1ee3f6",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "210c8589-4b77-411f-89bc-89de8a2a4797",
                      "parentUUID": "43aabc5d-5510-4787-9a32-44f8ff1ee3f6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "210c8589-4b77-411f-89bc-89de8a2a4797"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4d9624c5-126f-4b76-b8bc-e479f5d6a697",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "34364eb8-2fc8-4255-a2e5-d5358d7a66e7",
                      "parentUUID": "4d9624c5-126f-4b76-b8bc-e479f5d6a697",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "34364eb8-2fc8-4255-a2e5-d5358d7a66e7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "786b61e5-6e14-4739-b4ee-cbe4d1149237",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "dc3a231d-bd95-489d-9e78-5a2d7054de82",
                      "parentUUID": "786b61e5-6e14-4739-b4ee-cbe4d1149237",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "dc3a231d-bd95-489d-9e78-5a2d7054de82"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0fe4eab8-c960-473d-aef5-17282f95e536",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2f556a8e-fa98-427d-85c7-235c4a471f4e",
                      "parentUUID": "0fe4eab8-c960-473d-aef5-17282f95e536",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2f556a8e-fa98-427d-85c7-235c4a471f4e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a0d186cf-56d8-45f0-a3c3-5e2ef11cd248",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "42ffbade-6a3e-4a1d-8053-09e0edcd190f",
                      "parentUUID": "a0d186cf-56d8-45f0-a3c3-5e2ef11cd248",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "42ffbade-6a3e-4a1d-8053-09e0edcd190f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "53a57701-49ff-49a1-872f-93441531484b",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "386d8edd-4d72-4fe4-bf8d-05855222947b",
                      "parentUUID": "53a57701-49ff-49a1-872f-93441531484b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "386d8edd-4d72-4fe4-bf8d-05855222947b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0518a0f6-87db-4c57-98d4-a19b521a705c",
                  "title": "get /api/skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "32512610-bd04-4f59-b490-0c729daebc04",
                      "parentUUID": "0518a0f6-87db-4c57-98d4-a19b521a705c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "32512610-bd04-4f59-b490-0c729daebc04"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5faa79cd-29f3-4da0-a66a-f850054b8c9f",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e607cb18-1a71-4fc3-8738-cef1db39a28b",
                      "parentUUID": "5faa79cd-29f3-4da0-a66a-f850054b8c9f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e607cb18-1a71-4fc3-8738-cef1db39a28b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "541500e7-5035-4a6f-b3af-0cd0b04b1daa",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5ee199bc-d492-4a19-904b-e52b9b25f726",
                      "parentUUID": "541500e7-5035-4a6f-b3af-0cd0b04b1daa",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5ee199bc-d492-4a19-904b-e52b9b25f726"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "832a690b-3a3a-4fcd-9c6e-4d6efe59ea41",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1f374eb0-2688-40b3-85d0-11a0c029b345",
                      "parentUUID": "832a690b-3a3a-4fcd-9c6e-4d6efe59ea41",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1f374eb0-2688-40b3-85d0-11a0c029b345"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8c303f65-ae70-49f9-b3ce-6cbcf201497d",
                  "title": "put /api/skutems/:rfid",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Editing SKUitems details passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features put /api/skutems/:rfid Editing SKUitems details passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "console.log(newskuitem);\nagent.put('/api/skuitems/'+newskuitem.newRFID)\n.send(newskuitem)\n.then(function (res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "54187d6f-dbef-4011-9cb6-9b54a51c4af7",
                      "parentUUID": "8c303f65-ae70-49f9-b3ce-6cbcf201497d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "54187d6f-dbef-4011-9cb6-9b54a51c4af7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f18a3aa3-2c7d-4283-ad5c-524198d587c6",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "069a0428-b239-47db-b4f7-8d9c1a72bdb9",
                      "parentUUID": "f18a3aa3-2c7d-4283-ad5c-524198d587c6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "069a0428-b239-47db-b4f7-8d9c1a72bdb9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3cf40afe-2f1f-4e04-a219-449eba797b7d",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "6ebbb12d-d26f-4324-ba45-074691fdce5e",
                      "parentUUID": "3cf40afe-2f1f-4e04-a219-449eba797b7d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6ebbb12d-d26f-4324-ba45-074691fdce5e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d0067cfa-8a32-4f48-8253-705049afd759",
                  "title": "get /api/skuitems/sku/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its id",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/sku/:id Getting SKUitems passing its id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet nowskuid;\nif(skuidith > idskus.length || skuidith === null){\n    nowskuid = skuidith;\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse{\n    nowskuid = idskus[skuidith];\n    agent.get('/api/skuitems/sku/'+nowskuid)\n    .then(function (res) {\n        res.should.have.status(expCode);\n        res.body.should.be.a('array');\n        res.body.length.should.be.eql(expectedsize);\n        for (let i = 0; i < expectedsize; i++) {\n            res.body[i].RFID.should.equal(expectedskuitem[i].RFID);\n            res.body[i].SKUId.should.equal(idskus[expectedskuitem[i].SKUId]);\n            res.body[i].DateOfStock.should.equal(expectedskuitem[i].DateOfStock);                    \n        }\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "aec68ab6-5845-4e3c-8cc9-ad88c6dcd0d0",
                      "parentUUID": "d0067cfa-8a32-4f48-8253-705049afd759",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "aec68ab6-5845-4e3c-8cc9-ad88c6dcd0d0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "71edf98f-84de-41c7-b84b-adad8ddd6445",
                  "title": "get /api/skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems')\n.then(function (res) {\n    console.log(res.body[0]);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.equal(size);\n    let idSKUs = ids.getIdSku();\n    for (let i = 0; i < size; i++) {\n        res.body[i].RFID.should.equal(skuitems[i].RFID);\n        res.body[i].SKUId.should.equal(idSKUs[skuitems[i].SKUId]);\n        res.body[i].DateOfStock.should.equal(skuitems[i].DateOfStock);\n        if(skuitems[i].Available !== undefined){\n            res.body[i].Available.should.equal(skuitems[i].Available);\n            //console.log('null');\n        }\n    }\n    \n    done();                \n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "834e1088-e8c5-4c35-a532-4e43e54454a4",
                      "parentUUID": "71edf98f-84de-41c7-b84b-adad8ddd6445",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "834e1088-e8c5-4c35-a532-4e43e54454a4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f372e925-ed4b-4341-9413-9f4ec9eb646b",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2f0859ec-53dd-4c5b-9b82-5ad5019027c3",
                      "parentUUID": "f372e925-ed4b-4341-9413-9f4ec9eb646b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2f0859ec-53dd-4c5b-9b82-5ad5019027c3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6541c417-1b22-4aba-b057-dd8bf042167b",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5f542f0c-7f5f-417c-bb50-363fccf769f7",
                      "parentUUID": "6541c417-1b22-4aba-b057-dd8bf042167b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5f542f0c-7f5f-417c-bb50-363fccf769f7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4f1ee0f2-8f81-411c-986a-859bab3c6c0c",
                  "title": "get /api/skuitems/:RFID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems passing its rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test skuitem CRUD features get /api/skuitems/:RFID Getting SKUitems passing its rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nagent.get('/api/skuitems/'+expectedskuitem.RFID)\n.then(function (res) {\n    res.should.have.status(expCode);\n    if(res.status==200){\n        res.body.should.be.a('object');\n        res.body.RFID.should.equal(expectedskuitem.RFID);\n        res.body.SKUId.should.equal(idskus[expectedskuitem.SKUId]);\n        res.body.DateOfStock.should.equal(expectedskuitem.DateOfStock);\n        if(res.body.Available !== undefined){\n            res.body.Available.should.equal(expAvail);\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e4637e9b-cbee-44cc-820c-63be9f7c62d6",
                      "parentUUID": "4f1ee0f2-8f81-411c-986a-859bab3c6c0c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e4637e9b-cbee-44cc-820c-63be9f7c62d6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4bd8279f-7faf-4866-bcca-6d8cdcbcb484",
              "title": "test positions CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "7283216a-f6f4-4a8d-b82b-f985b26b1a93",
                  "title": "Removing all Positions",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Positions",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features Removing all Positions Getting Positions",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/position/'+res.body[i].positionID)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "eaace607-53be-4f0a-ad66-b1de83f61003",
                      "parentUUID": "7283216a-f6f4-4a8d-b82b-f985b26b1a93",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "eaace607-53be-4f0a-ad66-b1de83f61003"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1783b612-a091-4a70-9cb0-6fa3cce6f475",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6acace99-5e85-4ce8-b8c5-05745cc409d9",
                      "parentUUID": "1783b612-a091-4a70-9cb0-6fa3cce6f475",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6acace99-5e85-4ce8-b8c5-05745cc409d9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6ffb3f16-cc1a-4bc1-80f7-7a3c528098b9",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e8a64035-effb-4468-a64d-39134321dc52",
                      "parentUUID": "6ffb3f16-cc1a-4bc1-80f7-7a3c528098b9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e8a64035-effb-4468-a64d-39134321dc52"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "55a10ad6-6f09-4a4b-af70-274300ea62ce",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e5dc9efe-7dbf-4c72-8de7-5235ce91c711",
                      "parentUUID": "55a10ad6-6f09-4a4b-af70-274300ea62ce",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e5dc9efe-7dbf-4c72-8de7-5235ce91c711"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f7a71589-1251-41ee-a0b7-d291fb259f5a",
                  "title": "post /api/position/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 a Define a new position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features post /api/position/ FR 3.1.1 a Define a new position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/position')\n.send(position)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0b4bd068-5f3f-4cea-9afb-06246bc228ac",
                      "parentUUID": "f7a71589-1251-41ee-a0b7-d291fb259f5a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0b4bd068-5f3f-4cea-9afb-06246bc228ac"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "392b3618-3f27-4f08-b950-e9e169f5aaeb",
                  "title": " get /api/positions",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.3 -> List all positions",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  get /api/positions FR 3.1.3 -> List all positions",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/positions')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "c9dc683c-06b1-414f-9c41-ea933cc085e6",
                      "parentUUID": "392b3618-3f27-4f08-b950-e9e169f5aaeb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c9dc683c-06b1-414f-9c41-ea933cc085e6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a1afa029-065d-458d-a7b9-0979fe2ffeba",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2886c881-0197-4c2f-aa0f-cbd397cb0715",
                      "parentUUID": "a1afa029-065d-458d-a7b9-0979fe2ffeba",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2886c881-0197-4c2f-aa0f-cbd397cb0715"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "963adbad-afc8-481c-842d-58bb241b0e58",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e3e95a3f-a4ab-4c28-9a7c-9863898dd820",
                      "parentUUID": "963adbad-afc8-481c-842d-58bb241b0e58",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e3e95a3f-a4ab-4c28-9a7c-9863898dd820"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "04fe62a1-c4ac-442f-be31-37c1bc419432",
                  "title": " put /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.1 b -> Modify an existing position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID FR 3.1.1 b -> Modify an existing position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+positionID)\n.send(updateposition)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fe79473b-ef2e-40a2-9e29-1ced3f0b7a27",
                      "parentUUID": "04fe62a1-c4ac-442f-be31-37c1bc419432",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fe79473b-ef2e-40a2-9e29-1ced3f0b7a27"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ffeaa04e-3b0a-44d3-8b31-5ad08997293c",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3e459ee6-2527-4ef0-96b8-0032d9e37c47",
                      "parentUUID": "ffeaa04e-3b0a-44d3-8b31-5ad08997293c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3e459ee6-2527-4ef0-96b8-0032d9e37c47"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6ae829ff-e2e3-48c9-bc90-db1747153065",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a231e902-985c-402e-9fb0-9d311461d165",
                      "parentUUID": "6ae829ff-e2e3-48c9-bc90-db1747153065",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a231e902-985c-402e-9fb0-9d311461d165"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "debdf111-d825-41c4-8fd8-9ff5a3d37ed8",
                  "title": " put /api/position/:positionID/changeID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.4 -> Modify attributes of a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  put /api/position/:positionID/changeID FR 3.1.4 -> Modify attributes of a position",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/position/'+oldpositionid+'/changeID')\n.send(newpositionid)\n.then(res => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b1485c80-cca3-455c-a178-ce3d9bccbdac",
                      "parentUUID": "debdf111-d825-41c4-8fd8-9ff5a3d37ed8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b1485c80-cca3-455c-a178-ce3d9bccbdac"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "852d3d2a-1796-4298-86f7-5c44e71ccf71",
                  "title": " delete /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.2 -> Delete a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f08b0e0a-231c-4b63-a9a5-d28a23c44612",
                      "parentUUID": "852d3d2a-1796-4298-86f7-5c44e71ccf71",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f08b0e0a-231c-4b63-a9a5-d28a23c44612"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "52ab96cb-e2d1-4801-b793-a94a20e0a91b",
                  "title": " delete /api/position/:positionID",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.1.2 -> Delete a position",
                      "fullTitle": "Testing Functional requirements pt2 test positions CRUD features  delete /api/position/:positionID FR 3.1.2 -> Delete a position",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/position/'+positionID)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5fcf27a8-e069-496c-b258-f947335beba4",
                      "parentUUID": "52ab96cb-e2d1-4801-b793-a94a20e0a91b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5fcf27a8-e069-496c-b258-f947335beba4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dc089f66-724b-4f15-a0e8-8658c3881bb6",
              "title": "Test TestDescriptor CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "2737b232-7360-489c-b29d-719cd54ebf81",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8488b985-f10c-43e6-b97e-98094d9dc9d0",
                      "parentUUID": "2737b232-7360-489c-b29d-719cd54ebf81",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8488b985-f10c-43e6-b97e-98094d9dc9d0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a55385c9-2763-434b-a17e-0b4be617e7a7",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "3f56fdb0-d2eb-43d8-8a8b-f2521d36238b",
                      "parentUUID": "a55385c9-2763-434b-a17e-0b4be617e7a7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3f56fdb0-d2eb-43d8-8a8b-f2521d36238b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d06f798a-112a-4a03-84d7-47a1d80c1cbf",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "e36dda85-c22f-43bc-98c8-c856341e2ca8",
                      "parentUUID": "d06f798a-112a-4a03-84d7-47a1d80c1cbf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e36dda85-c22f-43bc-98c8-c856341e2ca8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3c7ae954-a542-405f-9de8-a356aa7ee2a6",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c2cc7f19-02fb-4ce2-9c9a-f14ec07ef9cf",
                      "parentUUID": "3c7ae954-a542-405f-9de8-a356aa7ee2a6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c2cc7f19-02fb-4ce2-9c9a-f14ec07ef9cf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "064f1a22-0656-4dfc-ab59-2b457173833d",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5f525abf-f12e-40b1-8486-1cf87a563031",
                      "parentUUID": "064f1a22-0656-4dfc-ab59-2b457173833d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5f525abf-f12e-40b1-8486-1cf87a563031"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d3882e00-69d2-4c64-a280-48840119bcc7",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "20126761-839a-4413-a6e3-5cc7553aa821",
                      "parentUUID": "d3882e00-69d2-4c64-a280-48840119bcc7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "20126761-839a-4413-a6e3-5cc7553aa821"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "67ef9707-86c7-4b23-a66a-9c393caa19f6",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "566ef0d3-2800-436c-9c79-cdc5db632112",
                      "parentUUID": "67ef9707-86c7-4b23-a66a-9c393caa19f6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "566ef0d3-2800-436c-9c79-cdc5db632112"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fe123f34-602b-40b4-9b47-b048e1f92f04",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "655ed26e-a2e5-4187-b672-7114b103a8e0",
                      "parentUUID": "fe123f34-602b-40b4-9b47-b048e1f92f04",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "655ed26e-a2e5-4187-b672-7114b103a8e0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "03f97f3f-73e0-4a91-87a3-af7d5642e6d0",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6c9a85b0-f50f-42bb-b0ee-a0dbafa4e8f8",
                      "parentUUID": "03f97f3f-73e0-4a91-87a3-af7d5642e6d0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6c9a85b0-f50f-42bb-b0ee-a0dbafa4e8f8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "000000a0-07e1-4494-8527-446b2c8f7bcf",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "51932a6d-15ae-498c-be57-73cf583afa92",
                      "parentUUID": "000000a0-07e1-4494-8527-446b2c8f7bcf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "51932a6d-15ae-498c-be57-73cf583afa92"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "243d90b7-7654-4d8b-8b68-5e8c0833adc8",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e1305882-e079-474d-bb6a-65c45620ce8e",
                      "parentUUID": "243d90b7-7654-4d8b-8b68-5e8c0833adc8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e1305882-e079-474d-bb6a-65c45620ce8e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "41fc4823-7be3-4fa2-8ead-f4960c5bb88f",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6c0b2c47-8bbc-4a49-8d83-af0cc87eab58",
                      "parentUUID": "41fc4823-7be3-4fa2-8ead-f4960c5bb88f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6c0b2c47-8bbc-4a49-8d83-af0cc87eab58"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ae90c81b-14fd-4c2b-865b-bdb893a086d2",
                  "title": "test post test descriptor with not exixsting idsku",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a bad test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test post test descriptor with not exixsting idsku Creating a bad test descriptor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/testDescriptor')\n.send()\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e9d11244-173b-42c4-8e3e-25dc483201fe",
                      "parentUUID": "ae90c81b-14fd-4c2b-865b-bdb893a086d2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e9d11244-173b-42c4-8e3e-25dc483201fe"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2b2c57e7-7624-4e1e-ab5e-71ea1fefe91a",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b4932fb6-d224-4866-9f1c-ec5d300aeb0a",
                      "parentUUID": "2b2c57e7-7624-4e1e-ab5e-71ea1fefe91a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b4932fb6-d224-4866-9f1c-ec5d300aeb0a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "36bce13f-d5ed-46a4-b5d2-cb700c2d97de",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7aeaea33-6139-400d-bf83-91a76680e316",
                      "parentUUID": "36bce13f-d5ed-46a4-b5d2-cb700c2d97de",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7aeaea33-6139-400d-bf83-91a76680e316"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3ba11236-36bb-46b3-be4e-46509b080cb5",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "4f66f07c-18be-4f18-82cb-8bd69a54b6fe",
                      "parentUUID": "3ba11236-36bb-46b3-be4e-46509b080cb5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4f66f07c-18be-4f18-82cb-8bd69a54b6fe"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "63ee84c5-4494-4641-a964-8cb7e584264e",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "badf2274-76e2-43e6-9c70-fcf602b00224",
                      "parentUUID": "63ee84c5-4494-4641-a964-8cb7e584264e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "badf2274-76e2-43e6-9c70-fcf602b00224"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "823a9899-92a9-4df2-9cd2-cc25ce61cb7f",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "729a1b24-e4e2-4abf-9178-69da9981b18b",
                      "parentUUID": "823a9899-92a9-4df2-9cd2-cc25ce61cb7f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "729a1b24-e4e2-4abf-9178-69da9981b18b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3caedc1d-ab41-4923-9baa-808d9d5913ca",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d4aaf649-d2e9-4a84-97ee-92e689485d83",
                      "parentUUID": "3caedc1d-ab41-4923-9baa-808d9d5913ca",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d4aaf649-d2e9-4a84-97ee-92e689485d83"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8d4f8267-db8c-4df8-834a-4671967416b3",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith === null){\n    myid = tdidith;\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n}\nelse {\n    myid = id[tdidith];\n    agent.get('/api/testDescriptors/'+myid)\n    .then(function(res){\n        res.should.have.status(expCode);\n        res.body.id.should.equal(id[tdidith]);\n        res.body.name.should.equal(mytd.name);\n        res.body.procedureDescription.should.equal(mytd.procedureDescription);\n        res.body.idSKU.should.equal(idSKUs[mytd.idSKU]);\n        done();\n    }).catch(err=>done(err));\n}",
                      "err": {},
                      "uuid": "a7c41049-d081-4289-a49c-224802e6abb9",
                      "parentUUID": "8d4f8267-db8c-4df8-834a-4671967416b3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a7c41049-d081-4289-a49c-224802e6abb9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c814978d-9612-47de-975a-9986392584a7",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c1eea165-5d6f-4440-af4b-13761958dc44",
                      "parentUUID": "c814978d-9612-47de-975a-9986392584a7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c1eea165-5d6f-4440-af4b-13761958dc44"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "035b8503-fcad-451a-a3ae-e0eb08a5c509",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nlet idSKUs = ids.getIdSku();\nlet myid;\nif(tdidith>id.length || tdidith===null){\n    myid = tdidith\n}\nelse {\n    myid=id[tdidith];\n}\nlet sendnewtd;\nif(newtd.idSKU>idSKUs.length || newtd.idSKU === null){\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, newtd.idSKU);\n}\nelse{\n    sendnewtd = newTestDescriptorEdit(newtd.name, newtd.procedureDescription, idSKUs[newtd.idSKU]);\n}\nagent.put('/api/testDescriptor/'+myid)\n.send(sendnewtd)\n.then(function(res){\n    console.log(res.status)\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "1a2fc5a3-e913-4052-9a0f-85d289f47195",
                      "parentUUID": "035b8503-fcad-451a-a3ae-e0eb08a5c509",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1a2fc5a3-e913-4052-9a0f-85d289f47195"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e5da1ed6-00ca-4de9-aaa4-4807a9f8c577",
                  "title": "put /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features put /api/testDescriptor/:id Modify a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    res.body.should.be.a('array');\n    agent.put('/api/testDescriptor/'+10000)\n    .send()\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));               \n});",
                      "err": {},
                      "uuid": "41267614-83fa-445f-8458-12a6c688f276",
                      "parentUUID": "e5da1ed6-00ca-4de9-aaa4-4807a9f8c577",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "41267614-83fa-445f-8458-12a6c688f276"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "699f3d40-178d-41b0-8104-e919f9dae889",
                  "title": "delete /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "7b0cf8ed-75dc-41e0-9369-24fe021bf0a9",
                      "parentUUID": "699f3d40-178d-41b0-8104-e919f9dae889",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7b0cf8ed-75dc-41e0-9369-24fe021bf0a9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ff80b373-a9c9-4717-aa59-f3368dce09d6",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f5a22327-328a-422a-a908-1fb0adad3dd1",
                      "parentUUID": "ff80b373-a9c9-4717-aa59-f3368dce09d6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f5a22327-328a-422a-a908-1fb0adad3dd1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "03e7bcaa-7f2e-48ff-9084-fccaf9f6bc38",
                  "title": "delete /api/testDescriptor/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete a TestDescriptor by id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestDescriptor CRUD features delete /api/testDescriptor/:id Delete a TestDescriptor by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdTestDescriptor();\nmyid = id[tdidith];\nagent.delete('/api/testDescriptor/'+myid)\n.then(function(res2){\n    res2.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b25abdfe-509d-4f2a-807a-1a9370f73d63",
                      "parentUUID": "03e7bcaa-7f2e-48ff-9084-fccaf9f6bc38",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b25abdfe-509d-4f2a-807a-1a9370f73d63"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "89e275d9-732c-4074-bda5-2ad02e050b12",
              "title": "Test TestResult CRUD",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "dca8f96e-d59c-4886-ba3c-3dd87f622694",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "eb6ec01d-6030-4dc0-b95f-e92651c673e2",
                      "parentUUID": "dca8f96e-d59c-4886-ba3c-3dd87f622694",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "eb6ec01d-6030-4dc0-b95f-e92651c673e2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0cdc84a5-8bcd-4f9a-bed0-6c3ca507dfda",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "5114d346-015d-45f0-b7e3-48233f028e1b",
                      "parentUUID": "0cdc84a5-8bcd-4f9a-bed0-6c3ca507dfda",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5114d346-015d-45f0-b7e3-48233f028e1b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b4151696-653e-4c9f-9093-84bb7815f776",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "2ad6bd25-c620-4934-acb7-23ebe735130e",
                      "parentUUID": "b4151696-653e-4c9f-9093-84bb7815f776",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2ad6bd25-c620-4934-acb7-23ebe735130e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c7085ce8-90ce-441b-b370-b625ffdfe993",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0b55b824-e928-491b-b416-0d47d72cc7f7",
                      "parentUUID": "c7085ce8-90ce-441b-b370-b625ffdfe993",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0b55b824-e928-491b-b416-0d47d72cc7f7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5a1b7d0e-c065-42af-9047-fc2fb729a58e",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "40fe12d6-d207-4ac4-b7fc-a4e8d12d8f60",
                      "parentUUID": "5a1b7d0e-c065-42af-9047-fc2fb729a58e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "40fe12d6-d207-4ac4-b7fc-a4e8d12d8f60"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "659bd108-5abe-4f0b-9f97-73d99b226453",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "b212f2c1-4494-4a0a-bc4e-c1edb1458db0",
                      "parentUUID": "659bd108-5abe-4f0b-9f97-73d99b226453",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b212f2c1-4494-4a0a-bc4e-c1edb1458db0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b8c54fc3-bcac-444d-9f65-abb9c37deaca",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "960a51fc-0a34-45c8-81fb-d254cfe7923f",
                      "parentUUID": "b8c54fc3-bcac-444d-9f65-abb9c37deaca",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "960a51fc-0a34-45c8-81fb-d254cfe7923f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4222dcb5-9d40-4638-b540-c69db37b74eb",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "717006ea-5ccc-4a4d-af83-f559bd89eb87",
                      "parentUUID": "4222dcb5-9d40-4638-b540-c69db37b74eb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "717006ea-5ccc-4a4d-af83-f559bd89eb87"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2577b740-4f9a-4621-a4ad-8622f3b20774",
                  "title": "test adding a test descriptor with post",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creating a test descriptor",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD test adding a test descriptor with post Creating a test descriptor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet testdescriptor;\nif(mytd.idSKU > id.length || mytd.idSKU === null){\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, mytd.idSKU);\n} \nelse {\n    testdescriptor = newTestDescriptor(mytd.name, mytd.procedureDescription, id[mytd.idSKU]);\n}\n// console.log(testdescriptor);\nagent.post('/api/testDescriptor')\n.send(testdescriptor)\n.then(res2 => {\n    assert.equal(res2.status, expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3274b443-dfeb-4bd7-808f-98b7c8b0f9f3",
                      "parentUUID": "2577b740-4f9a-4621-a4ad-8622f3b20774",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3274b443-dfeb-4bd7-808f-98b7c8b0f9f3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d6389860-d530-44b3-a139-558820c6cc52",
                  "title": "get /api/testDescriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting All TestDescriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD get /api/testDescriptors Getting All TestDescriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.length.should.be.equal(size);\n    res.body.should.be.a('array');\n    let id = [];\n    let idSKUs = ids.getIdSku();\n    for(let i=0; i<res.body.length; i++){\n        id[i]=res.body[i].id;\n        res.body[i].name.should.equal(mytd[i].name);\n        res.body[i].procedureDescription.should.equal(mytd[i].procedureDescription);\n        res.body[i].idSKU.should.equal(idSKUs[mytd[i].idSKU]);\n    }\n    ids.setIdTestDescriptor(id);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6afd8e36-347a-43a0-9559-b937f25e7257",
                      "parentUUID": "d6389860-d530-44b3-a139-558820c6cc52",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6afd8e36-347a-43a0-9559-b937f25e7257"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2ed7a533-b58b-44a2-9cd4-a8c10704937d",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "878f5658-bc03-4c0f-8b6f-550a6e0e8b7a",
                      "parentUUID": "2ed7a533-b58b-44a2-9cd4-a8c10704937d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "878f5658-bc03-4c0f-8b6f-550a6e0e8b7a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "26049849-1fad-4951-b495-1dd04e3da8af",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "da95f758-f4fa-49ed-9f11-d27fc0b1300d",
                      "parentUUID": "26049849-1fad-4951-b495-1dd04e3da8af",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "da95f758-f4fa-49ed-9f11-d27fc0b1300d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8f52997b-59e3-44d8-a3fd-8fe7bfc217cc",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.1 -> Add a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult FR 3.2.1 -> Add a quality test",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idtds = ids.getIdTestDescriptor();\nlet testResult = newTestResult(mytr.rfid, idtds[mytr.idTestDescriptor], mytr.Date, mytr.Result);\n//console.log(testResult);\nagent.post('/api/skuitems/testResult')\n.send(testResult)\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3da11a83-2873-4990-b8ed-aa8eee6bf8dd",
                      "parentUUID": "8f52997b-59e3-44d8-a3fd-8fe7bfc217cc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3da11a83-2873-4990-b8ed-aa8eee6bf8dd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1da2d612-89cf-4e67-b36b-4f5d83bf4edf",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creates a new test Result for a certain sku item defined by RFID",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "5d6c54ee-28d1-4ffe-9f51-bfcc4c267f73",
                      "parentUUID": "1da2d612-89cf-4e67-b36b-4f5d83bf4edf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5d6c54ee-28d1-4ffe-9f51-bfcc4c267f73"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e456ff6a-7616-4a60-8933-d8ef03825118",
                  "title": " post /api/skuitems/testResult",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Creates a new test Result for a certain sku item defined by RFID",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  post /api/skuitems/testResult Creates a new test Result for a certain sku item defined by RFID",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    testResultid = res.body[0].id;\n    testResult = newTestResult(rfid, testResultid, '2021/12/11', true);\n    agent.post('/api/skuitems/testResult')\n    .send(testResult)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "5647cba0-157e-4bc6-9771-230aef958363",
                      "parentUUID": "e456ff6a-7616-4a60-8933-d8ef03825118",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5647cba0-157e-4bc6-9771-230aef958363"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "99f071eb-f694-4547-b0b4-828e17b03e29",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8e772a60-538e-4fda-a9df-19a47d77cbe0",
                      "parentUUID": "99f071eb-f694-4547-b0b4-828e17b03e29",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8e772a60-538e-4fda-a9df-19a47d77cbe0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "81b4a94b-524d-44b4-b35b-975227074737",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0dc06c6c-7cc9-45a9-8640-02a65b3691f3",
                      "parentUUID": "81b4a94b-524d-44b4-b35b-975227074737",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0dc06c6c-7cc9-45a9-8640-02a65b3691f3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a1b78cc3-b99a-471a-a3a9-dda8cface8b4",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5b77fd5e-238d-4910-9719-8037049da7d3",
                      "parentUUID": "a1b78cc3-b99a-471a-a3a9-dda8cface8b4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5b77fd5e-238d-4910-9719-8037049da7d3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "32b3aeef-8a58-441b-b36a-7a13aed2b810",
                  "title": " get /api/skuitems/:rfid/testResults/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get a specific test result with the rfid and id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults/:id Get a specific test result with the rfid and id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    //console.log(res.body[0]);\n    agent.get('/api/skuitems/'+rfid+'/testResults/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "1fed9465-613a-49df-ae59-4a59df3f7ab2",
                      "parentUUID": "32b3aeef-8a58-441b-b36a-7a13aed2b810",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1fed9465-613a-49df-ae59-4a59df3f7ab2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "35ad5200-c320-4125-9d68-38b9e110d0ad",
                  "title": " get /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get a specific test result with the rfid and id",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResult/:id Get a specific test result with the rfid and id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let alltdids = ids.getIdTestDescriptor();\n    console.log(alltdids);\n    agent.get('/api/skuitems/'+rfid+'/testResult/'+alltdids[0])\n    .then(function(res2){\n        console.log(res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "118e3bee-7ce6-42ac-b74b-3b47abf6f0f2",
                      "parentUUID": "35ad5200-c320-4125-9d68-38b9e110d0ad",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "118e3bee-7ce6-42ac-b74b-3b47abf6f0f2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0f19efac-4dd3-4513-b021-c305049d3a6a",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.2 -> Modify a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id FR 3.2.2 -> Modify a quality test",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    console.log(\"this is it\", res.body);\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        console.log(\"I'm heeeeereeee\", res2.body);\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "83aa0e1d-1d7d-4bb2-b88d-00f3ea22ed70",
                      "parentUUID": "0f19efac-4dd3-4513-b021-c305049d3a6a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "83aa0e1d-1d7d-4bb2-b88d-00f3ea22ed70"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ea39538b-1b9e-498e-8cba-e4f18fb768a0",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a test results given its rfid and id and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "dd5b12f0-f32b-4a61-9dde-2cde4676e443",
                      "parentUUID": "ea39538b-1b9e-498e-8cba-e4f18fb768a0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "dd5b12f0-f32b-4a61-9dde-2cde4676e443"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "893da483-90cd-49c6-b1ea-2152267058e1",
                  "title": " put /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify a test results given its rfid and id and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  put /api/skuitems/:rfid/testResult/:id Modify a test results given its rfid and id and new fields",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+validrfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    agent.put('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .send({\"newIdTestDescriptor\":res.body[0].idTestDescriptor,\"newDate\":\"2022/01/01\",\"newResult\":false})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "a015d3c7-6725-48e9-a5e4-4ae3911d620f",
                      "parentUUID": "893da483-90cd-49c6-b1ea-2152267058e1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a015d3c7-6725-48e9-a5e4-4ae3911d620f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "84630e3d-7776-4720-976b-d6ebba601abf",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Get all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Get all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let all = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"all tr for rfid\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        all[i] = res.body[i].id;\n    }\n    ids.setIdTRonRFID(all);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a30a2b73-97e6-4901-9903-276bec8c7b94",
                      "parentUUID": "84630e3d-7776-4720-976b-d6ebba601abf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a30a2b73-97e6-4901-9903-276bec8c7b94"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "274d7d95-4cb2-4d41-b607-459da59a9ce7",
                  "title": " delete /api/skuitems/:rfid/testResult/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 3.2.3 -> Delete a quality test",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  delete /api/skuitems/:rfid/testResult/:id FR 3.2.3 -> Delete a quality test",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    let trid = res.body[0].id;\n    // console.log(res.body);\n    agent.delete('/api/skuitems/'+rfid+'/testResult/'+trid)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "51e91f50-da0f-440f-b264-8e9a9cafe6bc",
                      "parentUUID": "274d7d95-4cb2-4d41-b607-459da59a9ce7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "51e91f50-da0f-440f-b264-8e9a9cafe6bc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a52c3e71-4375-4189-86f9-210bccbe46af",
                  "title": " get /api/skuitems/:rfid/testResults",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete all test results associated to a certain rfid",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD  get /api/skuitems/:rfid/testResults Delete all test results associated to a certain rfid",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skuitems/'+rfid+'/testResults')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    console.log(\"delete all\", res.body);\n    for(let i=0; i<res.body.length; i++){\n        agent.delete('/api/skuitems/'+rfid+'/testResult/'+res.body[i].id)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "04772ea5-0d83-4c46-a9ba-047d9eddeb18",
                      "parentUUID": "a52c3e71-4375-4189-86f9-210bccbe46af",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "04772ea5-0d83-4c46-a9ba-047d9eddeb18"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c48452cf-d6af-486e-bc14-b01d4402673e",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "3bbe59e9-bee1-48ce-b58e-5d542012c998",
                      "parentUUID": "c48452cf-d6af-486e-bc14-b01d4402673e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3bbe59e9-bee1-48ce-b58e-5d542012c998"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1be9d62f-4785-4aa8-b6a4-d65bed4487dd",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "0ea6c3c8-7dda-48bd-b05d-f706a1d72a52",
                      "parentUUID": "1be9d62f-4785-4aa8-b6a4-d65bed4487dd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0ea6c3c8-7dda-48bd-b05d-f706a1d72a52"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "857a0a48-333c-4be2-b26d-b7ff52a0cdfd",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test TestResult CRUD removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2c7b2f8e-fdb8-4153-8561-1e713faec174",
                      "parentUUID": "857a0a48-333c-4be2-b26d-b7ff52a0cdfd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2c7b2f8e-fdb8-4153-8561-1e713faec174"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0e66c9ef-e30f-43bf-a57d-6cf96729188b",
              "title": "Test user CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "eb5056e3-f0d2-4251-b239-5af7858310a0",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a316f878-4fe4-4c5d-8941-c7d34a3a71e9",
                      "parentUUID": "eb5056e3-f0d2-4251-b239-5af7858310a0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a316f878-4fe4-4c5d-8941-c7d34a3a71e9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0a9dba0e-f53b-49d7-a132-ee2d2ce0bef7",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a83f1354-054b-4c43-88f7-8ff5b332b019",
                      "parentUUID": "0a9dba0e-f53b-49d7-a132-ee2d2ce0bef7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a83f1354-054b-4c43-88f7-8ff5b332b019"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "55cf7c9c-e40c-42c9-a48e-54ddc6262f1f",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a25c4271-890c-40d6-9475-b15dcf88386b",
                      "parentUUID": "55cf7c9c-e40c-42c9-a48e-54ddc6262f1f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a25c4271-890c-40d6-9475-b15dcf88386b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0a0af388-9576-425a-b10f-d3439dd3d114",
                  "title": " delete /api/users/:username/:type",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.2 -> Delete a user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  delete /api/users/:username/:type FR 1.2 -> Delete a user",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/users/'+username+'/'+type)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6d2ab19d-33f3-4d67-a836-0dfa6c5cae22",
                      "parentUUID": "0a0af388-9576-425a-b10f-d3439dd3d114",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6d2ab19d-33f3-4d67-a836-0dfa6c5cae22"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "10130e7b-762b-4a84-b5ff-e7a2dedbeb02",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f14bbb52-ecef-4aea-9092-b0ac9d15935d",
                      "parentUUID": "10130e7b-762b-4a84-b5ff-e7a2dedbeb02",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f14bbb52-ecef-4aea-9092-b0ac9d15935d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e47a1047-b973-4158-ac5b-5cfd008c9c6c",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "fac21d8e-e039-4627-b845-8aa87663faef",
                      "parentUUID": "e47a1047-b973-4158-ac5b-5cfd008c9c6c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fac21d8e-e039-4627-b845-8aa87663faef"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1e8f35a3-f576-4db2-9d9a-221698956585",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "108bb390-124d-414b-8ce1-25f80e929696",
                      "parentUUID": "1e8f35a3-f576-4db2-9d9a-221698956585",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "108bb390-124d-414b-8ce1-25f80e929696"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8226f551-9f10-4549-aa18-b6f859805196",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "f2c22218-bc57-40c9-a73a-1b2bb8060e4f",
                      "parentUUID": "8226f551-9f10-4549-aa18-b6f859805196",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f2c22218-bc57-40c9-a73a-1b2bb8060e4f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1bf34824-f4eb-4dcf-bb95-8f76e7d81ae8",
                  "title": " put /api/users/:username",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 b -> Modify an existing user",
                      "fullTitle": "Testing Functional requirements pt2 Test user CRUD features  put /api/users/:username FR 1.1 b -> Modify an existing user",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/users/'+username)\n.send(changetype)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2f66252d-b0a9-4190-b54f-368c6fd5d4c7",
                      "parentUUID": "1bf34824-f4eb-4dcf-bb95-8f76e7d81ae8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2f66252d-b0a9-4190-b54f-368c6fd5d4c7"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cb64136b-93c1-48ff-adba-14e04b938c23",
              "title": "Test RestockOrder CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "d127aec1-12aa-4ec7-b779-5ffd224c1dbf",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "6405894b-53db-4ef7-b52e-1a4f0063eabc",
                      "parentUUID": "d127aec1-12aa-4ec7-b779-5ffd224c1dbf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6405894b-53db-4ef7-b52e-1a4f0063eabc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a448eee2-1cf6-41d4-b14e-d2e1206a2085",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "7f19bc83-4a3d-47db-ab59-d16ad808dff3",
                      "parentUUID": "a448eee2-1cf6-41d4-b14e-d2e1206a2085",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7f19bc83-4a3d-47db-ab59-d16ad808dff3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "94dc2b82-9957-4c5f-82a8-dc7734c4db55",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "e13ad449-3a58-4ca9-9d2e-55e80d53e2aa",
                      "parentUUID": "94dc2b82-9957-4c5f-82a8-dc7734c4db55",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e13ad449-3a58-4ca9-9d2e-55e80d53e2aa"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c5ad1d33-1094-42fb-889b-dadf8f069249",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3aa6d273-f9c3-42a8-8ef3-13be626329fc",
                      "parentUUID": "c5ad1d33-1094-42fb-889b-dadf8f069249",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3aa6d273-f9c3-42a8-8ef3-13be626329fc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "15febf9e-1b6b-468b-b8e4-2ca47dc58c2f",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ff1e1d72-cbb1-4269-96ca-8ff27d94456b",
                      "parentUUID": "15febf9e-1b6b-468b-b8e4-2ca47dc58c2f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ff1e1d72-cbb1-4269-96ca-8ff27d94456b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6bbe68d6-28b9-41f4-a21b-a9551856e0d9",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "36a501dc-2bbb-40de-add1-1fcb038597f9",
                      "parentUUID": "6bbe68d6-28b9-41f4-a21b-a9551856e0d9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "36a501dc-2bbb-40de-add1-1fcb038597f9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bd565a67-4655-4198-9dba-e9e7674ee843",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a3ab990f-018c-4f1e-99dc-600bfc06a68c",
                      "parentUUID": "bd565a67-4655-4198-9dba-e9e7674ee843",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a3ab990f-018c-4f1e-99dc-600bfc06a68c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d3fcce2a-f618-416c-9a0c-c14d7920c69c",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 58,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "02ec872b-ce6d-49c5-a25d-4f533b364e8d",
                      "parentUUID": "d3fcce2a-f618-416c-9a0c-c14d7920c69c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "02ec872b-ce6d-49c5-a25d-4f533b364e8d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 58,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6c62f68b-feb2-4170-ac89-0e5495edcb71",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "364a4a5c-6b76-43a1-a3a0-1f5fcf13e7da",
                      "parentUUID": "6c62f68b-feb2-4170-ac89-0e5495edcb71",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "364a4a5c-6b76-43a1-a3a0-1f5fcf13e7da"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "065834e6-615f-46dc-aa7e-35224664001a",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a0966b74-d55c-4b96-bf5f-b94d04240a26",
                      "parentUUID": "065834e6-615f-46dc-aa7e-35224664001a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a0966b74-d55c-4b96-bf5f-b94d04240a26"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3319d399-44f9-44fb-85d3-1eb03bc72222",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a2ecdf27-0e47-424d-96b9-694a4dd76dfc",
                      "parentUUID": "3319d399-44f9-44fb-85d3-1eb03bc72222",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a2ecdf27-0e47-424d-96b9-694a4dd76dfc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7100dd01-1b7e-4cf5-8879-de0ca88d0a0b",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e690da48-1885-4dd1-9e93-23886c3681d5",
                      "parentUUID": "7100dd01-1b7e-4cf5-8879-de0ca88d0a0b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e690da48-1885-4dd1-9e93-23886c3681d5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d24eac5f-d8e4-4adb-8100-d5227bdba950",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "8c02d4ec-074f-45e2-bfa3-a17a8a0b3be8",
                      "parentUUID": "d24eac5f-d8e4-4adb-8100-d5227bdba950",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8c02d4ec-074f-45e2-bfa3-a17a8a0b3be8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "71eb7159-2b64-44f9-9952-694cb3e2735d",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "a342707b-7ac1-4292-a970-c3a6bd81c76f",
                      "parentUUID": "71eb7159-2b64-44f9-9952-694cb3e2735d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a342707b-7ac1-4292-a970-c3a6bd81c76f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a7bcf6dd-cd95-4394-8b2c-24a143aa8d28",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 16,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "0c66e9d5-f2ca-465d-bdab-5bfaa5d3c95e",
                      "parentUUID": "a7bcf6dd-cd95-4394-8b2c-24a143aa8d28",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0c66e9d5-f2ca-465d-bdab-5bfaa5d3c95e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 16,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c6513c28-3b2f-4b6c-a9d3-d94d703e25a3",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c70e0edc-17d0-44f9-8c77-c07215b3968d",
                      "parentUUID": "c6513c28-3b2f-4b6c-a9d3-d94d703e25a3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c70e0edc-17d0-44f9-8c77-c07215b3968d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b0416af5-bc20-43e5-8b46-6ffc9db2537b",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet firstSupplierId;\nagent.get('/api/suppliers')\n.then(function(res){\n    firstSupplierId = res.body[0].id;\n    agent.post('/api/restockOrder')\n    .send(myrestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "91cba1f6-ee12-488a-819e-587d9dc244f2",
                      "parentUUID": "b0416af5-bc20-43e5-8b46-6ffc9db2537b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "91cba1f6-ee12-488a-819e-587d9dc244f2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b871c1cf-de62-448c-8549-30128928ce54",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6b57f44e-7500-4619-8c02-652852285cb8",
                      "parentUUID": "b871c1cf-de62-448c-8549-30128928ce54",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6b57f44e-7500-4619-8c02-652852285cb8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e51c42d5-b7a9-4f4c-aaef-b42006281c98",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2acb2653-5c59-4c68-9d93-f2df6441177c",
                      "parentUUID": "e51c42d5-b7a9-4f4c-aaef-b42006281c98",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2acb2653-5c59-4c68-9d93-f2df6441177c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f865bd85-3a48-4ce4-9f19-d383ef4a3504",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "85c90e2b-075a-476b-89b9-956eed1b5d22",
                      "parentUUID": "f865bd85-3a48-4ce4-9f19-d383ef4a3504",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "85c90e2b-075a-476b-89b9-956eed1b5d22"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7b57e7da-3fe6-4c2b-b94c-d2d0acdd12fd",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "937a84c3-d087-496c-a05b-0d1a841877dc",
                      "parentUUID": "7b57e7da-3fe6-4c2b-b94c-d2d0acdd12fd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "937a84c3-d087-496c-a05b-0d1a841877dc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "15c8f74f-540b-4ef3-b7c9-e8a619ed69f9",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "3475bcd1-305e-4113-802b-8bbb200045cc",
                      "parentUUID": "15c8f74f-540b-4ef3-b7c9-e8a619ed69f9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3475bcd1-305e-4113-802b-8bbb200045cc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "66f71b72-d0af-498c-ab32-c5a88800eab2",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9154f56c-2373-4351-a7b9-c278e2530e70",
                      "parentUUID": "66f71b72-d0af-498c-ab32-c5a88800eab2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9154f56c-2373-4351-a7b9-c278e2530e70"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7531fa16-183f-4f38-b410-b7f951666b34",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "fdebe49c-c6d9-459d-809e-83e89bba9866",
                      "parentUUID": "7531fa16-183f-4f38-b410-b7f951666b34",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fdebe49c-c6d9-459d-809e-83e89bba9866"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "15e0acc5-4709-4d4d-84be-aa2c3a1e1ee7",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "30d71b41-9a8e-4a33-bb8f-e5bb3efa4b4d",
                      "parentUUID": "15e0acc5-4709-4d4d-84be-aa2c3a1e1ee7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "30d71b41-9a8e-4a33-bb8f-e5bb3efa4b4d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b35fc793-a472-424f-ab06-8beeab68b93c",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":allskuitems})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "c331c2b4-89b8-43d3-887a-06ad84501af4",
                      "parentUUID": "b35fc793-a472-424f-ab06-8beeab68b93c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c331c2b4-89b8-43d3-887a-06ad84501af4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6ea804d8-ee84-4122-9548-e737cb2b623a",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 1000000;\n    let allskuitems = [];\n    allskuitems[0] = {\"SKUId\":12, \"rfid\":'12345678901234567890123456789015'};\n    allskuitems[1]= {\"SKUId\":12, \"rfid\":'12345678901234567890123456789016'};\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send(null)\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "4d7f113f-fae1-461f-8697-00f6675d3064",
                      "parentUUID": "6ea804d8-ee84-4122-9548-e737cb2b623a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4d7f113f-fae1-461f-8697-00f6675d3064"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8b705036-a3dd-421d-8d70-24ca28800046",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "5cb98537-d8c5-4363-b336-3d150d344444",
                      "parentUUID": "8b705036-a3dd-421d-8d70-24ca28800046",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5cb98537-d8c5-4363-b336-3d150d344444"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7ba3b450-3c52-4a99-9e09-fd31b67cf2b3",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "3ed04a21-cd29-43eb-b26f-cb75235c974c",
                      "parentUUID": "7ba3b450-3c52-4a99-9e09-fd31b67cf2b3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3ed04a21-cd29-43eb-b26f-cb75235c974c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fe8f12c7-f648-4829-ba32-b942ee3f5389",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    console.log(idsearch);\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2023/12/29 03:00\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "df477e03-2867-4be6-aca3-c119803c6945",
                      "parentUUID": "fe8f12c7-f648-4829-ba32-b942ee3f5389",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "df477e03-2867-4be6-aca3-c119803c6945"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "75e17dcc-f4c0-4d91-b7dc-b03ac428c30f",
                  "title": "put /api/restockOrder/:id/transportNote",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features put /api/restockOrder/:id/transportNote Change a state of a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = 10000;\n    agent.put('/api/restockOrder/'+idsearch+'/transportNote')\n    .send({\"transportNote\":{\"deliveryDate\":\"2021/12/29\"}})\n    .then(function(res3){\n        res3.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "91b3aaed-016e-4098-bea7-3fdea15e1a2c",
                      "parentUUID": "75e17dcc-f4c0-4d91-b7dc-b03ac428c30f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "91b3aaed-016e-4098-bea7-3fdea15e1a2c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "cc946627-2dbb-4bf8-82a8-f5c5b85c901b",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "d6030b8e-6395-4978-a951-40ecb0c19b2a",
                      "parentUUID": "cc946627-2dbb-4bf8-82a8-f5c5b85c901b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d6030b8e-6395-4978-a951-40ecb0c19b2a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "79eda44f-472e-49b6-8057-9cc45df87dff",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "6e35bbc4-728e-4227-a76f-a18262531603",
                      "parentUUID": "79eda44f-472e-49b6-8057-9cc45df87dff",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6e35bbc4-728e-4227-a76f-a18262531603"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1bc9f6a0-35c3-4891-b566-0defc7da2fec",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test RestockOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "e2073f21-0008-44a0-bf3b-89107e9dfaf0",
                      "parentUUID": "1bc9f6a0-35c3-4891-b566-0defc7da2fec",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e2073f21-0008-44a0-bf3b-89107e9dfaf0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d26cbf7a-89a3-46dd-8d6a-13f6792f4845",
              "title": "Test ReturnOrder CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "70fb03e8-f94d-4053-b0cc-bc34bb6a7c0f",
                  "title": "Removing all return orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features Removing all return orders Getting and removing",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/returnOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a9392562-a47f-4963-8258-e5a05d886bd4",
                      "parentUUID": "70fb03e8-f94d-4053-b0cc-bc34bb6a7c0f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a9392562-a47f-4963-8258-e5a05d886bd4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6391e0a6-32bd-4e41-b15c-67e1d175749f",
                  "title": "Removing all Restock orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting and removing",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features Removing all Restock orders Getting and removing",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for( let i=0; i< res.body.length; i++){\n            agent.delete('/api/restockOrder/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "15e99384-6d02-4c9e-8536-798e3ac61b19",
                      "parentUUID": "6391e0a6-32bd-4e41-b15c-67e1d175749f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "15e99384-6d02-4c9e-8536-798e3ac61b19"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b1af7dc0-9c33-4370-a9b7-b1ef9fe80d9f",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "1c2d48f1-6f39-43d5-8381-903756ec5df3",
                      "parentUUID": "b1af7dc0-9c33-4370-a9b7-b1ef9fe80d9f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1c2d48f1-6f39-43d5-8381-903756ec5df3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "246cf20c-645a-47ed-a1c1-4d53103fc95b",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "16455789-3d31-49e8-aa13-150b7b9b32db",
                      "parentUUID": "246cf20c-645a-47ed-a1c1-4d53103fc95b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "16455789-3d31-49e8-aa13-150b7b9b32db"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "10b7fcd2-353e-44e4-8452-407efc15ffce",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "d17a6b36-bb76-4fb4-80c2-1d3b6d42d31a",
                      "parentUUID": "10b7fcd2-353e-44e4-8452-407efc15ffce",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d17a6b36-bb76-4fb4-80c2-1d3b6d42d31a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4bd19c85-2248-4d03-81c9-75ea82b9a8b5",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3a56a71a-e23b-4607-bd57-fab58bb0741f",
                      "parentUUID": "4bd19c85-2248-4d03-81c9-75ea82b9a8b5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3a56a71a-e23b-4607-bd57-fab58bb0741f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a4ab7125-65dc-4646-8450-7a9ba3be4c30",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "be70c319-2c38-4dde-8b25-15f1e1a56c7e",
                      "parentUUID": "a4ab7125-65dc-4646-8450-7a9ba3be4c30",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "be70c319-2c38-4dde-8b25-15f1e1a56c7e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "41ac8997-2241-4eb4-a1b7-895c7cdbc2d0",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "49aebaa5-dda7-417c-95e2-d037442fac27",
                      "parentUUID": "41ac8997-2241-4eb4-a1b7-895c7cdbc2d0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "49aebaa5-dda7-417c-95e2-d037442fac27"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d6ff612b-6108-491d-b3bf-b1cd20bd5159",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "88344a3f-d450-4da0-9b4c-3241cb52418c",
                      "parentUUID": "d6ff612b-6108-491d-b3bf-b1cd20bd5159",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "88344a3f-d450-4da0-9b4c-3241cb52418c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c986910c-e2b3-4cb3-8842-5eb731f46b3b",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "133d67d9-272e-4b39-bb87-ef0709391406",
                      "parentUUID": "c986910c-e2b3-4cb3-8842-5eb731f46b3b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "133d67d9-272e-4b39-bb87-ef0709391406"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3e1d0015-0449-4568-a9fd-07f5fde2ab78",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "9a90a12c-0ad4-430d-b3c5-ae5fbd14fd28",
                      "parentUUID": "3e1d0015-0449-4568-a9fd-07f5fde2ab78",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9a90a12c-0ad4-430d-b3c5-ae5fbd14fd28"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8e377a4b-d7a5-4a74-8fcd-bf4ba1c457b9",
                  "title": "post /api/skuitem/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding skuitem details",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/skuitem/ Adding skuitem details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let id = ids.getIdSku();\nlet skuitem;\nif(myskuitem.SKUId > id.length || myskuitem.SKUId === null){\n    skuitem = newSkuItem(myskuitem.RFID, myskuitem.SKUId , myskuitem.DateOfStock); \n}\nelse{\n    skuitem = newSkuItem(myskuitem.RFID, id[myskuitem.SKUId] , myskuitem.DateOfStock);\n}\nagent.post('/api/skuitem/')\n.send(skuitem)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "807f0942-2d1b-4c53-a9d2-38966ea7679d",
                      "parentUUID": "8e377a4b-d7a5-4a74-8fcd-bf4ba1c457b9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "807f0942-2d1b-4c53-a9d2-38966ea7679d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f6cc79d8-ad25-4f61-b569-b0f9a20b8716",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "8ddc42d2-abc9-4038-aec7-37532f623cfa",
                      "parentUUID": "f6cc79d8-ad25-4f61-b569-b0f9a20b8716",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8ddc42d2-abc9-4038-aec7-37532f623cfa"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1c6b2f52-4f3a-4147-8294-ec87fd9b3518",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "01b6abee-7bbe-44ec-ba55-10a47619c621",
                      "parentUUID": "1c6b2f52-4f3a-4147-8294-ec87fd9b3518",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "01b6abee-7bbe-44ec-ba55-10a47619c621"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "83ae211d-aefe-486f-bd30-567eb0f7e5c0",
                  "title": "post /api/restockOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features post /api/restockOrder  Create a restock order",
                      "timedOut": false,
                      "duration": 14,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currentProducts = [];\nlet currentRestock;\nagent.get('/api/suppliers')\n.then(function(res){\n    currentSupplierId = res.body[0].id\n    for(let i=0; i<myrestock.products.length ; i++){\n        currentProducts[i] = newProduct(idskus[myrestock.products[i].SKUId], myrestock.products[i].description, myrestock.products[i].price, myrestock.products[i].qty );\n    }\n    currentRestock = newRestockOrder(myrestock.issueDate, currentProducts, idsupp[myrestock.supplierId]);\n    agent.post('/api/restockOrder')\n    .send(currentRestock)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "1159d4ac-a9bc-4adf-9ff2-52241b4cf304",
                      "parentUUID": "83ae211d-aefe-486f-bd30-567eb0f7e5c0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1159d4ac-a9bc-4adf-9ff2-52241b4cf304"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 14,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "790d31c0-cffa-4721-a045-1cd58802a9e4",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 13,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ec129a38-43b2-4df9-b513-4337e08e729c",
                      "parentUUID": "790d31c0-cffa-4721-a045-1cd58802a9e4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ec129a38-43b2-4df9-b513-4337e08e729c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 13,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6249013b-8231-49c2-ad14-f7a4dc4fcc4d",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a7b3886f-fbf0-4e23-8da7-d188928cfc37",
                      "parentUUID": "6249013b-8231-49c2-ad14-f7a4dc4fcc4d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a7b3886f-fbf0-4e23-8da7-d188928cfc37"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f5167fd5-4aa9-45d7-abcf-5adec8412d95",
                  "title": "put /api/restockOrder/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features put /api/restockOrder/:id Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    id = res.body[0].id;\n    agent.put('/api/restockOrder/'+id)\n    .send(changestate)\n    .then(function(res){\n        res.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "f3b9d9d9-a4a4-411b-b442-0f07d0984e34",
                      "parentUUID": "f5167fd5-4aa9-45d7-abcf-5adec8412d95",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f3b9d9d9-a4a4-411b-b442-0f07d0984e34"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2159650a-09f1-4ea4-b82c-11884e6e6354",
                  "title": "put /api/restockOrder/:id/skuItems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Change a state of a restock order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features put /api/restockOrder/:id/skuItems Change a state of a restock order",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsku = ids.getIdSku();\nlet thisskuitems = addskuitems;\nthisskuitems[0].SKUId = idsku[thisskuitems[0].SKUId];\nthisskuitems[1].SKUId = idsku[thisskuitems[1].SKUId];\nconsole.log(thisskuitems);\nagent.get('/api/restockOrders')\n.then(function(res){\n    idsearch = res.body[0].id;\n    //console.log(\"this is skuitems \", thisskuitems);\n    agent.put('/api/restockOrder/'+idsearch+'/skuItems')\n    .send({\"skuItems\":thisskuitems})\n    .then(function(res2){\n        //console.log(res2)\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));                 \n});",
                      "err": {},
                      "uuid": "19418fce-67d8-45f2-989f-5742c23424e8",
                      "parentUUID": "2159650a-09f1-4ea4-b82c-11884e6e6354",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "19418fce-67d8-45f2-989f-5742c23424e8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b93acf6d-46af-439b-96ac-65d7a06a5c77",
                  "title": " get /api/restockOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrders  get all restock orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrders')\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idsupp = ids.getIdSuppliers();\n    let idrestord = [];\n    res.body.length.should.be.eql(myrestocks.length);\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].issueDate.should.equal(myrestocks[i].issueDate);\n        res.body[i].supplierId.should.equal(idsupp[myrestocks[i].supplierId]);\n    }\n    ids.setIdRestockOrders(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "6866d5d6-6f1f-480d-a10e-325258752024",
                      "parentUUID": "b93acf6d-46af-439b-96ac-65d7a06a5c77",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6866d5d6-6f1f-480d-a10e-325258752024"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "31cc1252-de0e-4b06-a5b8-c34a138f36d5",
                  "title": " get /api/restockOrderIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all restock order issued",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/restockOrderIssued  get all restock order issued",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/restockOrdersIssued')\n.then(function(res){\n    let idrestord = [];\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    for(let i = 0; i<res.body.length; i++){\n        idrestord[i] = res.body[i].id;\n        res.body[i].state.should.equal(\"ISSUED\");\n    }\n    ids.setIdRestockOrdersIssued(idrestord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ee3d1447-db11-45c7-b5b7-f61e403404c5",
                      "parentUUID": "31cc1252-de0e-4b06-a5b8-c34a138f36d5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ee3d1447-db11-45c7-b5b7-f61e403404c5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "17f67c36-a271-43b8-bdd3-a2607005ffdc",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "47ac9985-dea6-4e80-85b7-5fbf0ab2092c",
                      "parentUUID": "17f67c36-a271-43b8-bdd3-a2607005ffdc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "47ac9985-dea6-4e80-85b7-5fbf0ab2092c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8149cd8f-22a4-452d-b974-c4a9df7a8bb0",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idroid = ids.getIdRestockOrdersIssued();\nlet idskus = ids.getIdSku();\nlet currentProducts = [];\nlet currentProductswithrfid = [];\nlet restordid;\nif(myretord.restockOrderId === null || myretord.restockOrderId > idroid.length){\n    restordid = myretord.restockOrderId;\n}\nelse{\n    restordid = idroid[myretord.restockOrderId];\n}\nfor(let i=0; i<myretord.products.length ; i++){\n    currentProducts[i] = restockorders.newProduct(idskus[myretord.products[i].SKUId], myretord.products[i].description, myretord.products[i].price, myretord.products[i].qty );\n    currentProductswithrfid[i] = newProductwithRFID(currentProducts[i], myretord.products[i].RFID);\n}\nlet retord = newReturnOrder(myretord.returnDate, currentProductswithrfid, restordid);\nagent.post('/api/returnOrder')\n.send(retord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "ce251726-df85-4b41-801b-39d2dfdc3819",
                      "parentUUID": "8149cd8f-22a4-452d-b974-c4a9df7a8bb0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ce251726-df85-4b41-801b-39d2dfdc3819"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7c8a0aa9-19d4-433c-8329-1b3e8fb281c4",
                  "title": " post /api/returnOrder",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " Create a return order",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  post /api/returnOrder  Create a return order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/returnOrder')\n.send(myretord)\n.then(function(res){\n    //console.log(res);\n    //console.log(retord);\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c81d95ac-7800-47f5-8ca5-1cfa27b89091",
                      "parentUUID": "7c8a0aa9-19d4-433c-8329-1b3e8fb281c4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c81d95ac-7800-47f5-8ca5-1cfa27b89091"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7b84fb29-8689-4e62-9e38-406693c48e28",
                  "title": " get /api/returnOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all return orders",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders  get all return orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/returnOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    let idrestockorders = ids.getIdRestockOrdersIssued();\n    let idretord = [];\n    res.body.length.should.be.eql(myretord.length);\n    for(let i = 0; i<res.body.length; i++){\n        idretord[i] = res.body[i].id;\n        res.body[i].returnDate.should.equal(myretord[i].returnDate);\n        res.body[i].restockOrderId.should.equal(idrestockorders[myretord[i].restockOrderId]);\n    }\n    ids.setIdReturnOrders(idretord);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c940c288-01bf-47a0-88a2-76180a5283cb",
                      "parentUUID": "7b84fb29-8689-4e62-9e38-406693c48e28",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c940c288-01bf-47a0-88a2-76180a5283cb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "501b2895-d89a-4dd8-8cb1-f2318f0f3b99",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsret = ids.getIdReturnOrders();\n//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+idsret[id])\n.then(function(res){\n    res.should.have.status(expCode);\n    res.body.returnDate.should.equal(myretord.returnDate);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "22c53746-095d-4f19-9914-2cb2efe37e4c",
                      "parentUUID": "501b2895-d89a-4dd8-8cb1-f2318f0f3b99",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "22c53746-095d-4f19-9914-2cb2efe37e4c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9adef90d-43f3-4b0b-b1f9-39e4969175b0",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c6dee1c1-acce-4808-8ba3-4cc6133c4dba",
                      "parentUUID": "9adef90d-43f3-4b0b-b1f9-39e4969175b0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c6dee1c1-acce-4808-8ba3-4cc6133c4dba"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d6f98797-284a-4e32-977b-f29ce9c207e9",
                  "title": " get /api/returnOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get return order by id",
                      "fullTitle": "Testing Functional requirements pt2 Test ReturnOrder CRUD features  get /api/returnOrders/:id  get return order by id",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(idsret[id]);\nagent.get('/api/returnOrders/'+id)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "29bc65b2-8ec8-4dea-9ab6-61c7e49c8529",
                      "parentUUID": "d6f98797-284a-4e32-977b-f29ce9c207e9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "29bc65b2-8ec8-4dea-9ab6-61c7e49c8529"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4e7b071c-7d5a-404d-8495-544162f69f5a",
              "title": "Test Internal Order CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "5a7b037b-3dec-48eb-bbdd-1673f433304f",
                  "title": "Removing all Internal Orders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Interna Orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features Removing all Internal Orders Getting Interna Orders",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/internalOrders/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "57ca17c5-7281-4dfe-a36e-f6fc4e928a2e",
                      "parentUUID": "5a7b037b-3dec-48eb-bbdd-1673f433304f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "57ca17c5-7281-4dfe-a36e-f6fc4e928a2e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "75296efe-8171-448c-81f7-5e3cec686424",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "10e114ca-3186-4de6-bea0-5b629df1798c",
                      "parentUUID": "75296efe-8171-448c-81f7-5e3cec686424",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "10e114ca-3186-4de6-bea0-5b629df1798c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c478d4fb-1ac4-47cb-ab66-295b43128f67",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "fa551d33-45c4-4a8b-b2e2-6ec8694cb55d",
                      "parentUUID": "c478d4fb-1ac4-47cb-ab66-295b43128f67",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fa551d33-45c4-4a8b-b2e2-6ec8694cb55d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1b71889a-9bc6-49ac-bd2e-ee6f2d963299",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c39303b2-8c0d-42b9-bb52-22fc35256413",
                      "parentUUID": "1b71889a-9bc6-49ac-bd2e-ee6f2d963299",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c39303b2-8c0d-42b9-bb52-22fc35256413"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9f58451b-215e-48e0-976a-8fd509cf7636",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "42959f6e-d4d2-4f6a-aaf8-c45956c4b76f",
                      "parentUUID": "9f58451b-215e-48e0-976a-8fd509cf7636",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "42959f6e-d4d2-4f6a-aaf8-c45956c4b76f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "13ece1b1-af0d-4b73-83a7-0581664f76b9",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "600f0b26-9523-496f-bea7-5197935f5919",
                      "parentUUID": "13ece1b1-af0d-4b73-83a7-0581664f76b9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "600f0b26-9523-496f-bea7-5197935f5919"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ad2574e8-6a15-4c94-9344-1a5440b8ff30",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "dc0ad8e2-d3ea-438e-a625-79d08fa35d7e",
                      "parentUUID": "ad2574e8-6a15-4c94-9344-1a5440b8ff30",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "dc0ad8e2-d3ea-438e-a625-79d08fa35d7e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c510accb-f25b-450b-a6b9-5c2f832b8bcb",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 56,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "4275e2c0-0cab-4ffd-a7d1-f213bf8d9d59",
                      "parentUUID": "c510accb-f25b-450b-a6b9-5c2f832b8bcb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4275e2c0-0cab-4ffd-a7d1-f213bf8d9d59"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 56,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "96c44259-5783-448a-b17e-716a0f86a613",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 12,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                      "err": {},
                      "uuid": "df4dc1f9-b9f7-4361-9e82-d6275cfc6161",
                      "parentUUID": "96c44259-5783-448a-b17e-716a0f86a613",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "df4dc1f9-b9f7-4361-9e82-d6275cfc6161"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 12,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b7b2d724-3256-4e5f-b5ab-565337b540ef",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 18,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet customerId;\nlet currentIntOrd;\nlet currentProducts = [];\nagent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length;i++){\n        if(res.body[i].type === \"customer\"){\n            customerId = res.body[i].id;\n        }\n    }\n    for(let i=0; i<myintord.products.length ; i++){\n        currentProducts[i] = restockorders.newProduct(idskus[myintord.products[i].SKUId], myintord.products[i].description, myintord.products[i].price, myintord.products[i].qty );\n    }\n    currentIntOrd = newInternalOrder(myintord.issueDate, currentProducts, customerId);\n    agent.post('/api/internalOrders')\n    .send(currentIntOrd)\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err => done(err));\n}).catch(err => done(err));;",
                      "err": {},
                      "uuid": "24a7bfa0-3a0e-441d-8855-60153b5397e1",
                      "parentUUID": "b7b2d724-3256-4e5f-b5ab-565337b540ef",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "24a7bfa0-3a0e-441d-8855-60153b5397e1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 18,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "9e3c5dfe-acb5-453f-b0ef-466419ec5c79",
                  "title": " post /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Create a new internal order",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  post /api/internalOrders Create a new internal order",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "//console.log(currentInternalOrders[ith]);\nagent.post('/api/internalOrders')\n.send(intord)\n.then(function(res) {\n    console.log(res.body);\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "3fa2ee50-9ccc-48de-98e6-543377c2a635",
                      "parentUUID": "9e3c5dfe-acb5-453f-b0ef-466419ec5c79",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3fa2ee50-9ccc-48de-98e6-543377c2a635"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0b4361a0-7642-4b5f-93c9-837cc1c781b3",
                  "title": " get /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all internal orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2ea06006-44f9-4397-a47c-678da3afffe2",
                      "parentUUID": "0b4361a0-7642-4b5f-93c9-837cc1c781b3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2ea06006-44f9-4397-a47c-678da3afffe2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c653813c-d17b-4dc3-938b-6097d0b48d6b",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "78a15145-9746-4f5a-a204-8dadebf5eea2",
                      "parentUUID": "c653813c-d17b-4dc3-938b-6097d0b48d6b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "78a15145-9746-4f5a-a204-8dadebf5eea2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d0ef4282-a358-4eea-937c-756b4047264b",
                  "title": " put /api/internalOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify the state of an IO",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "7beb1368-acf6-4993-a77d-be3f5f004de2",
                      "parentUUID": "d0ef4282-a358-4eea-937c-756b4047264b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7beb1368-acf6-4993-a77d-be3f5f004de2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "03bf3a16-9d19-4a01-812b-9919550a69d1",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersIssued')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order issued', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "bc1a8a2b-7fc8-4b3e-97bc-c2f6bd2a8398",
                      "parentUUID": "03bf3a16-9d19-4a01-812b-9919550a69d1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bc1a8a2b-7fc8-4b3e-97bc-c2f6bd2a8398"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "dce3f82f-ddc0-4ed6-b8f4-6edd358bde5b",
                  "title": " get /api/internalOrdersIssued",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Retrieve all internal order in state issued",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrdersIssued Retrieve all internal order in state issued",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrdersAccepted')\n.then(function(res){\n    res.should.have.status(expcode);\n    res.body.should.be.a('array');\n    for(let i=0; i<res.body.length; i++){\n        console.log('inside get order accepted', res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "c0ea57e8-229d-44db-981a-4db631be04a8",
                      "parentUUID": "dce3f82f-ddc0-4ed6-b8f4-6edd358bde5b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c0ea57e8-229d-44db-981a-4db631be04a8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "05138a3b-e57c-46d4-b6c5-e2f53379d903",
                  "title": " put /api/internalOrders/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify the state of an IO",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  put /api/internalOrders/:id Modify the state of an IO",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    agent.put('/api/internalOrders/'+res.body[0].id)\n    .send({\"newState\":newState, \"products\":[{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789016\"},{\"SkuID\":1,\"RFID\":\"12345678901234567890123456789038\"}]})\n    .then(function(res2){\n        res2.should.have.status(expCode);\n        done();\n    }).catch(err=>done(err));\n});",
                      "err": {},
                      "uuid": "0f487024-9656-4a7e-ad03-81856a2ee924",
                      "parentUUID": "05138a3b-e57c-46d4-b6c5-e2f53379d903",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0f487024-9656-4a7e-ad03-81856a2ee924"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ae1814c4-99dd-4247-835e-c7971157c520",
                  "title": " get /api/internalOrders",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all internal orders",
                      "fullTitle": "Testing Functional requirements pt2 Test Internal Order CRUD features  get /api/internalOrders Getting all internal orders",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/internalOrders')\n.then(function(res){\n    //console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    console.log('body length', res.body.length);\n    for(let i=0; i<res.body.length; i++){\n        console.log(res.body[i]);\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "2e3bdcc0-4f6d-44e2-920c-2651eb388e37",
                      "parentUUID": "ae1814c4-99dd-4247-835e-c7971157c520",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2e3bdcc0-4f6d-44e2-920c-2651eb388e37"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "35083ace-0754-41ff-be0a-4b6d4710ff9a",
              "title": "Test Item CRUD features",
              "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
              "file": "/acceptanceTest/testEzWhAPI.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "793b1051-a50f-4019-82b6-2e5c9123583f",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "ccdfdae8-42b4-4171-8feb-734c8aab51b5",
                      "parentUUID": "793b1051-a50f-4019-82b6-2e5c9123583f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ccdfdae8-42b4-4171-8feb-734c8aab51b5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3e407e7a-7e7d-42be-bb25-302f0717176b",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "fc68e129-f7fa-4a46-82ec-ed2f5dff71be",
                      "parentUUID": "3e407e7a-7e7d-42be-bb25-302f0717176b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fc68e129-f7fa-4a46-82ec-ed2f5dff71be"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8bdd052f-6227-46f7-9bcd-f17f0528c9fd",
                  "title": "removing all test descriptors",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting test descriptors",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all test descriptors Getting test descriptors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/testDescriptors')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0){\n        for (let i=0; i<res.body.length; i++){\n            agent.delete('/api/testDescriptor/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "e62c1d75-8913-4997-9e94-de80c5730017",
                      "parentUUID": "8bdd052f-6227-46f7-9bcd-f17f0528c9fd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e62c1d75-8913-4997-9e94-de80c5730017"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "82353f5c-ed76-4520-a99e-4541f0124a97",
                  "title": " Delete all not manager",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cleaning db user util",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  Delete all not manager Cleaning db user util",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/users')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        //console.log(res.body[i].email);\n        agent.delete('/api/users/'+res.body[i].email+'/'+res.body[i].type)\n        .then(function(res2){\n            res2.should.have.status(204);\n        });\n    }\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "edb6877a-f8e9-445b-9b8b-98e365f051ce",
                      "parentUUID": "82353f5c-ed76-4520-a99e-4541f0124a97",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "edb6877a-f8e9-445b-9b8b-98e365f051ce"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "54237c8d-4805-4076-948d-e43999c909d1",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "939a358a-00ca-4721-ac67-da296e3c5a9a",
                      "parentUUID": "54237c8d-4805-4076-948d-e43999c909d1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "939a358a-00ca-4721-ac67-da296e3c5a9a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d176921a-1350-4066-a161-0001c0d7613f",
                  "title": "post /api/sku/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.1 a -> Define a new SKU",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/sku/ FR 2.1 a -> Define a new SKU",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/sku/')\n.send(thesku)\n.then(function (res) {\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "eee43591-0f88-4c55-8445-dc0c24b2c048",
                      "parentUUID": "d176921a-1350-4066-a161-0001c0d7613f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "eee43591-0f88-4c55-8445-dc0c24b2c048"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2d7050b7-3151-4fae-9c28-c1ba52546cfb",
                  "title": "get /api/skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 2.3 -> List all SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/skus FR 2.3 -> List all SKUs",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    let id = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            id[i] = res.body[i].id;\n            res.body[i].description.should.equal(sku[i].description);\n            res.body[i].weight.should.equal(sku[i].weight);\n            res.body[i].volume.should.equal(sku[i].volume);\n            res.body[i].notes.should.equal(sku[i].notes);\n            res.body[i].availableQuantity.should.equal(sku[i].availableQuantity);\n            res.body[i].price.should.equal(sku[i].price);\n        }\n        ids.setIdSku(id);\n    }             \n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "81c94a7e-50eb-4c9c-b9a5-8603f04af639",
                      "parentUUID": "2d7050b7-3151-4fae-9c28-c1ba52546cfb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "81c94a7e-50eb-4c9c-b9a5-8603f04af639"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0d7a30d1-ab0f-4237-8749-bbdd09a6eeac",
                  "title": "Removing all Items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features Removing all Items Getting Items",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "7d9e6d2c-61bd-4949-b6bc-660f3aae5b9d",
                      "parentUUID": "0d7a30d1-ab0f-4237-8749-bbdd09a6eeac",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7d9e6d2c-61bd-4949-b6bc-660f3aae5b9d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "20676bae-1626-49b5-b63c-16c157acf65e",
                  "title": " get /api/items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/items Getting all items",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "26a033e5-35e8-4adc-bb43-3df07ca96a03",
                      "parentUUID": "20676bae-1626-49b5-b63c-16c157acf65e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "26a033e5-35e8-4adc-bb43-3df07ca96a03"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "080a8ed8-e33a-44fa-ac4d-32298f2380db",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "5cecf8ea-ae95-470a-a318-d1ca46e49595",
                      "parentUUID": "080a8ed8-e33a-44fa-ac4d-32298f2380db",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5cecf8ea-ae95-470a-a318-d1ca46e49595"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b87588e6-c6d4-40a4-be0d-eec9fd185cea",
                  "title": " post /api/newUser",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "FR 1.1 a -> Define a new user",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  post /api/newUser FR 1.1 a -> Define a new user",
                      "timedOut": false,
                      "duration": 57,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.post('/api/newUser')\n.send(myuser)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "a6eba85c-93fa-488b-aa30-cb2c2f4a31b6",
                      "parentUUID": "b87588e6-c6d4-40a4-be0d-eec9fd185cea",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a6eba85c-93fa-488b-aa30-cb2c2f4a31b6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 57,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d0ea5499-824b-4fce-91e9-ffe66e30939f",
                  "title": " get /api/suppliers",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": " get all suppliers",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/suppliers  get all suppliers",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idsupp = [];\nagent.get('/api/suppliers')\n.then(function(res){\n    for(let i=0; i<res.body.length; i++){\n        idsupp[i] = res.body[i].id;\n    }\n    ids.setIdSuppliers(idsupp);\n    //console.log(res.body);\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "3419f5ec-1f2f-4762-89bb-416769368348",
                      "parentUUID": "d0ea5499-824b-4fce-91e9-ffe66e30939f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3419f5ec-1f2f-4762-89bb-416769368348"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c3c01ccf-d815-4e15-9e1d-13e4f8b73986",
                  "title": "post /api/item/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/item/ Adding item details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "c6f1e2ef-f7f3-4fd3-9aed-a1ab56407ce4",
                      "parentUUID": "c3c01ccf-d815-4e15-9e1d-13e4f8b73986",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c6f1e2ef-f7f3-4fd3-9aed-a1ab56407ce4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1cbb3add-526b-496c-b0f3-fc86364d332f",
                  "title": "post /api/item/",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Adding item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features post /api/item/ Adding item details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let idskus = ids.getIdSku();\nlet idsupp = ids.getIdSuppliers();\nlet currskuid;\nif(myitem.SKUId === null || myitem.SKUId > idskus.length){\n    currskuid = myitem.SKUId;\n}\nelse{\n    currskuid = idskus[myitem.SKUId]\n}\nlet currentItem = newItem(myitem.id, myitem.description, myitem.price, currskuid, idsupp[myitem.supplierId]);\nagent.post('/api/item')\n.send(currentItem)\n.then((res) => {\n    assert.equal(res.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "68f98442-e424-4c46-880e-b1c040ab9f88",
                      "parentUUID": "1cbb3add-526b-496c-b0f3-fc86364d332f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "68f98442-e424-4c46-880e-b1c040ab9f88"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f0b38c04-e11d-4617-9a93-9644bd0eeaed",
                  "title": " get /api/items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting all items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  get /api/items Getting all items",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    console.log(res.body);\n    res.should.have.status(expCode);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eql(size);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "1c74782e-7342-4dd6-84b5-113fc7750e25",
                      "parentUUID": "f0b38c04-e11d-4617-9a93-9644bd0eeaed",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1c74782e-7342-4dd6-84b5-113fc7750e25"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bff03c42-6f6c-447a-aad3-919d38867779",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+itemid)\n.then(r => {\n    let idskus = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(r.status, expCode);\n    if (r.status == 200) {\n        r.body.should.be.a('object');\n        r.body.id.should.equal(itemid);\n        r.body.description.should.equal(myexpitem.description);\n        r.body.price.should.equal(myexpitem.price);\n        r.body.SKUId.should.equal(idskus[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "7a9d89bf-d539-4562-b14a-8446e72bad97",
                      "parentUUID": "bff03c42-6f6c-447a-aad3-919d38867779",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7a9d89bf-d539-4562-b14a-8446e72bad97"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2fc17bd5-9621-4e24-81fc-121cd0f9226d",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "bb425aae-9476-484a-81cc-939611ed559d",
                      "parentUUID": "2fc17bd5-9621-4e24-81fc-121cd0f9226d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bb425aae-9476-484a-81cc-939611ed559d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6a26fe78-c792-4397-8f5b-abbbf501f15d",
                  "title": "get /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Gettim item details",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features get /api/items/:id Gettim item details",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items/'+id)\n.then(r => {\n    assert.equal(r.status, expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "ceb8eb2e-c382-489c-8116-b4b2f4942e5c",
                      "parentUUID": "6a26fe78-c792-4397-8f5b-abbbf501f15d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ceb8eb2e-c382-489c-8116-b4b2f4942e5c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "38c5ba10-453a-44d9-bf2c-9829007d037f",
                  "title": " put /api/item/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modify an item given its ID and new fields",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  put /api/item/:id Modify an item given its ID and new fields",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.put('/api/item/'+ith)\n.send(updateItem(newDescription, newPrice))\n.then(res => {\n    let idsku = ids.getIdSku();\n    let idsupp = ids.getIdSuppliers();\n    assert.equal(res.status, expCode);\n    agent.get('/api/items/'+ith)\n    .then (r => {\n        console.log(r.body);\n        assert.equal(r.status,200);\n        r.body.should.be.a('object');\n        r.body.id.should.equal(myexpitem.id);\n        r.body.description.should.equal(newDescription);\n        r.body.price.should.equal(newPrice);\n        r.body.SKUId.should.equal(idsku[myexpitem.SKUId]);\n        r.body.supplierId.should.equal(idsupp[myexpitem.supplierId]);\n    });\n    done();\n}).catch(err=>done(err));",
                      "err": {},
                      "uuid": "15f2731d-be1f-4e85-84a0-6c0d10fb6375",
                      "parentUUID": "38c5ba10-453a-44d9-bf2c-9829007d037f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "15f2731d-be1f-4e85-84a0-6c0d10fb6375"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "75952470-3bcb-4ed9-8ff2-d8c463e017d2",
                  "title": " delete /api/items/:id",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Delete an item given its id",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features  delete /api/items/:id Delete an item given its id",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.delete('/api/items/'+ith)\n.then(function(res){\n    res.should.have.status(expCode);\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "11b64cd7-6259-461c-b3bc-c0201236faa9",
                      "parentUUID": "75952470-3bcb-4ed9-8ff2-d8c463e017d2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "11b64cd7-6259-461c-b3bc-c0201236faa9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8a8ce77c-95ec-4f40-8f35-07b43e99d6b2",
                  "title": "Removing all Items",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting Items",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features Removing all Items Getting Items",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/items')\n.then(function(res){\n    res.should.have.status(200);\n    if(res.body.length !==0) {\n        for (let i = 0; i< res.body.length; i++){\n            agent.delete('/api/items/'+res.body[i].id)\n            .then(function(res2){\n                res2.should.have.status(204);\n            });\n        }\n    }\n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "e512498f-8ba6-4eca-b381-a255f8e9e740",
                      "parentUUID": "8a8ce77c-95ec-4f40-8f35-07b43e99d6b2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e512498f-8ba6-4eca-b381-a255f8e9e740"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "56da5c43-1b30-4531-9323-0ad65a9381c3",
                  "title": "removing all skuitems",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUitems",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skuitems Getting SKUitems",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await agent.get('/api/skuitems');\nconsole.log(res.body);\nres.should.have.status(200);\nif (res.body.length !==0) {\n    let res2;\n    for (let i = 0; i < res.body.length; i++) {\n        res2 = await\n        agent.delete('/api/skuitems/'+res.body[i].RFID);\n        res2.should.have.status(204);\n        console.log(\"Deleted \"+ res.body[i].RFID);\n    }\n}\nconsole.log(\"done!\");",
                      "err": {},
                      "uuid": "4eda7915-44d8-42f9-a323-a19f38e15e45",
                      "parentUUID": "56da5c43-1b30-4531-9323-0ad65a9381c3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4eda7915-44d8-42f9-a323-a19f38e15e45"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6c7f4fe4-ebfb-4fb8-8fc1-3202f6681498",
                  "title": "removing all skus",
                  "fullFile": "/Users/davidearcolini/Desktop/PoliTo_CyberSecurity/Courses/Software_Engineering/Exam_Project/SoftEng_garbageCollector/code/server/acceptanceTest/testEzWhAPI.js",
                  "file": "/acceptanceTest/testEzWhAPI.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Getting SKUs",
                      "fullTitle": "Testing Functional requirements pt2 Test Item CRUD features removing all skus Getting SKUs",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "agent.get('/api/skus')\n.then(function (res) {\n    res.should.have.status(200);\n    if (res.body.length !==0) {\n        for (let i = 0; i < res.body.length; i++) {\n            agent.delete('/api/skus/'+res.body[i].id)\n            .then(function (res2) {\n                res2.should.have.status(204);\n            });\n        }\n    } \n    done();\n}).catch(err => done(err));",
                      "err": {},
                      "uuid": "509c58df-74b9-4f7a-b093-b772552ae472",
                      "parentUUID": "6c7f4fe4-ebfb-4fb8-8fc1-3202f6681498",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "509c58df-74b9-4f7a-b093-b772552ae472"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}